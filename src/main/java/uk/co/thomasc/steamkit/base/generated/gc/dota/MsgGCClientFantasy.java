// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client_fantasy.proto
package uk.co.thomasc.steamkit.base.generated.gc.dota;

public final class MsgGCClientFantasy {
  private MsgGCClientFantasy() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code DOTA_2013PassportSelectionIndices}
   */
  public enum DOTA_2013PassportSelectionIndices
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_0 = 0;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_0(0),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_1 = 1;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_1(1),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_2 = 2;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_2(2),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_3 = 3;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_3(3),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_4 = 4;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_4(4),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_5 = 5;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_5(5),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_6 = 6;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_6(6),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_7 = 7;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_7(7),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_8 = 8;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_8(8),
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_9 = 9;</code>
     */
    PP13_SEL_ALLSTAR_PLAYER_9(9),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_0 = 10;</code>
     */
    PP13_SEL_QUALPRED_WEST_0(10),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_1 = 11;</code>
     */
    PP13_SEL_QUALPRED_WEST_1(11),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_2 = 12;</code>
     */
    PP13_SEL_QUALPRED_WEST_2(12),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_3 = 13;</code>
     */
    PP13_SEL_QUALPRED_WEST_3(13),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_4 = 14;</code>
     */
    PP13_SEL_QUALPRED_WEST_4(14),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_5 = 15;</code>
     */
    PP13_SEL_QUALPRED_WEST_5(15),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_6 = 16;</code>
     */
    PP13_SEL_QUALPRED_WEST_6(16),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_7 = 17;</code>
     */
    PP13_SEL_QUALPRED_WEST_7(17),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_8 = 18;</code>
     */
    PP13_SEL_QUALPRED_WEST_8(18),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_9 = 19;</code>
     */
    PP13_SEL_QUALPRED_WEST_9(19),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_10 = 20;</code>
     */
    PP13_SEL_QUALPRED_WEST_10(20),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_11 = 21;</code>
     */
    PP13_SEL_QUALPRED_WEST_11(21),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_12 = 22;</code>
     */
    PP13_SEL_QUALPRED_WEST_12(22),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_13 = 23;</code>
     */
    PP13_SEL_QUALPRED_WEST_13(23),
    /**
     * <code>PP13_SEL_QUALPRED_WEST_14 = 24;</code>
     */
    PP13_SEL_QUALPRED_WEST_14(24),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_0 = 25;</code>
     */
    PP13_SEL_QUALPRED_EAST_0(25),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_1 = 26;</code>
     */
    PP13_SEL_QUALPRED_EAST_1(26),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_2 = 27;</code>
     */
    PP13_SEL_QUALPRED_EAST_2(27),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_3 = 28;</code>
     */
    PP13_SEL_QUALPRED_EAST_3(28),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_4 = 29;</code>
     */
    PP13_SEL_QUALPRED_EAST_4(29),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_5 = 30;</code>
     */
    PP13_SEL_QUALPRED_EAST_5(30),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_6 = 31;</code>
     */
    PP13_SEL_QUALPRED_EAST_6(31),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_7 = 32;</code>
     */
    PP13_SEL_QUALPRED_EAST_7(32),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_8 = 33;</code>
     */
    PP13_SEL_QUALPRED_EAST_8(33),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_9 = 34;</code>
     */
    PP13_SEL_QUALPRED_EAST_9(34),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_10 = 35;</code>
     */
    PP13_SEL_QUALPRED_EAST_10(35),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_11 = 36;</code>
     */
    PP13_SEL_QUALPRED_EAST_11(36),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_12 = 37;</code>
     */
    PP13_SEL_QUALPRED_EAST_12(37),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_13 = 38;</code>
     */
    PP13_SEL_QUALPRED_EAST_13(38),
    /**
     * <code>PP13_SEL_QUALPRED_EAST_14 = 39;</code>
     */
    PP13_SEL_QUALPRED_EAST_14(39),
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM = 40;</code>
     */
    PP13_SEL_TEAMCUP_TEAM(40),
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER = 41;</code>
     */
    PP13_SEL_TEAMCUP_PLAYER(41),
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM_LOCK = 42;</code>
     */
    PP13_SEL_TEAMCUP_TEAM_LOCK(42),
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER_LOCK = 43;</code>
     */
    PP13_SEL_TEAMCUP_PLAYER_LOCK(43),
    /**
     * <code>PP13_SEL_EVENTPRED_0 = 44;</code>
     */
    PP13_SEL_EVENTPRED_0(44),
    /**
     * <code>PP13_SEL_EVENTPRED_1 = 45;</code>
     */
    PP13_SEL_EVENTPRED_1(45),
    /**
     * <code>PP13_SEL_EVENTPRED_2 = 46;</code>
     */
    PP13_SEL_EVENTPRED_2(46),
    /**
     * <code>PP13_SEL_EVENTPRED_3 = 47;</code>
     */
    PP13_SEL_EVENTPRED_3(47),
    /**
     * <code>PP13_SEL_EVENTPRED_4 = 48;</code>
     */
    PP13_SEL_EVENTPRED_4(48),
    /**
     * <code>PP13_SEL_EVENTPRED_5 = 49;</code>
     */
    PP13_SEL_EVENTPRED_5(49),
    /**
     * <code>PP13_SEL_EVENTPRED_6 = 50;</code>
     */
    PP13_SEL_EVENTPRED_6(50),
    /**
     * <code>PP13_SEL_EVENTPRED_7 = 51;</code>
     */
    PP13_SEL_EVENTPRED_7(51),
    /**
     * <code>PP13_SEL_EVENTPRED_8 = 52;</code>
     */
    PP13_SEL_EVENTPRED_8(52),
    /**
     * <code>PP13_SEL_EVENTPRED_9 = 53;</code>
     */
    PP13_SEL_EVENTPRED_9(53),
    /**
     * <code>PP13_SEL_EVENTPRED_10 = 54;</code>
     */
    PP13_SEL_EVENTPRED_10(54),
    /**
     * <code>PP13_SEL_EVENTPRED_11 = 55;</code>
     */
    PP13_SEL_EVENTPRED_11(55),
    /**
     * <code>PP13_SEL_EVENTPRED_12 = 56;</code>
     */
    PP13_SEL_EVENTPRED_12(56),
    /**
     * <code>PP13_SEL_EVENTPRED_13 = 57;</code>
     */
    PP13_SEL_EVENTPRED_13(57),
    /**
     * <code>PP13_SEL_EVENTPRED_14 = 58;</code>
     */
    PP13_SEL_EVENTPRED_14(58),
    /**
     * <code>PP13_SEL_EVENTPRED_15 = 59;</code>
     */
    PP13_SEL_EVENTPRED_15(59),
    /**
     * <code>PP13_SEL_EVENTPRED_16 = 60;</code>
     */
    PP13_SEL_EVENTPRED_16(60),
    /**
     * <code>PP13_SEL_EVENTPRED_17 = 61;</code>
     */
    PP13_SEL_EVENTPRED_17(61),
    /**
     * <code>PP13_SEL_EVENTPRED_18 = 62;</code>
     */
    PP13_SEL_EVENTPRED_18(62),
    /**
     * <code>PP13_SEL_EVENTPRED_19 = 63;</code>
     */
    PP13_SEL_EVENTPRED_19(63),
    /**
     * <code>PP13_SEL_EVENTPRED_20 = 64;</code>
     */
    PP13_SEL_EVENTPRED_20(64),
    /**
     * <code>PP13_SEL_EVENTPRED_21 = 65;</code>
     */
    PP13_SEL_EVENTPRED_21(65),
    /**
     * <code>PP13_SEL_EVENTPRED_22 = 66;</code>
     */
    PP13_SEL_EVENTPRED_22(66),
    /**
     * <code>PP13_SEL_EVENTPRED_23 = 67;</code>
     */
    PP13_SEL_EVENTPRED_23(67),
    /**
     * <code>PP13_SEL_EVENTPRED_24 = 68;</code>
     */
    PP13_SEL_EVENTPRED_24(68),
    /**
     * <code>PP13_SEL_EVENTPRED_25 = 69;</code>
     */
    PP13_SEL_EVENTPRED_25(69),
    /**
     * <code>PP13_SEL_EVENTPRED_26 = 70;</code>
     */
    PP13_SEL_EVENTPRED_26(70),
    /**
     * <code>PP13_SEL_EVENTPRED_27 = 71;</code>
     */
    PP13_SEL_EVENTPRED_27(71),
    /**
     * <code>PP13_SEL_EVENTPRED_28 = 72;</code>
     */
    PP13_SEL_EVENTPRED_28(72),
    /**
     * <code>PP13_SEL_EVENTPRED_29 = 73;</code>
     */
    PP13_SEL_EVENTPRED_29(73),
    /**
     * <code>PP13_SEL_EVENTPRED_30 = 74;</code>
     */
    PP13_SEL_EVENTPRED_30(74),
    /**
     * <code>PP13_SEL_EVENTPRED_31 = 75;</code>
     */
    PP13_SEL_EVENTPRED_31(75),
    /**
     * <code>PP13_SEL_EVENTPRED_32 = 76;</code>
     */
    PP13_SEL_EVENTPRED_32(76),
    /**
     * <code>PP13_SEL_EVENTPRED_33 = 77;</code>
     */
    PP13_SEL_EVENTPRED_33(77),
    /**
     * <code>PP13_SEL_EVENTPRED_34 = 78;</code>
     */
    PP13_SEL_EVENTPRED_34(78),
    /**
     * <code>PP13_SEL_EVENTPRED_35 = 79;</code>
     */
    PP13_SEL_EVENTPRED_35(79),
    /**
     * <code>PP13_SEL_EVENTPRED_36 = 80;</code>
     */
    PP13_SEL_EVENTPRED_36(80),
    /**
     * <code>PP13_SEL_EVENTPRED_37 = 81;</code>
     */
    PP13_SEL_EVENTPRED_37(81),
    /**
     * <code>PP13_SEL_EVENTPRED_38 = 82;</code>
     */
    PP13_SEL_EVENTPRED_38(82),
    /**
     * <code>PP13_SEL_EVENTPRED_39 = 83;</code>
     */
    PP13_SEL_EVENTPRED_39(83),
    /**
     * <code>PP13_SEL_EVENTPRED_40 = 84;</code>
     */
    PP13_SEL_EVENTPRED_40(84),
    /**
     * <code>PP13_SEL_EVENTPRED_41 = 85;</code>
     */
    PP13_SEL_EVENTPRED_41(85),
    /**
     * <code>PP13_SEL_EVENTPRED_42 = 86;</code>
     */
    PP13_SEL_EVENTPRED_42(86),
    /**
     * <code>PP13_SEL_EVENTPRED_43 = 87;</code>
     */
    PP13_SEL_EVENTPRED_43(87),
    /**
     * <code>PP13_SEL_SOLO_0 = 88;</code>
     */
    PP13_SEL_SOLO_0(88),
    /**
     * <code>PP13_SEL_SOLO_1 = 89;</code>
     */
    PP13_SEL_SOLO_1(89),
    /**
     * <code>PP13_SEL_SOLO_2 = 90;</code>
     */
    PP13_SEL_SOLO_2(90),
    /**
     * <code>PP13_SEL_SOLO_3 = 91;</code>
     */
    PP13_SEL_SOLO_3(91),
    /**
     * <code>PP13_SEL_SOLO_4 = 92;</code>
     */
    PP13_SEL_SOLO_4(92),
    /**
     * <code>PP13_SEL_SOLO_5 = 93;</code>
     */
    PP13_SEL_SOLO_5(93),
    /**
     * <code>PP13_SEL_SOLO_6 = 94;</code>
     */
    PP13_SEL_SOLO_6(94),
    /**
     * <code>PP13_SEL_SOLO_7 = 95;</code>
     */
    PP13_SEL_SOLO_7(95),
    ;

    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_0 = 0;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_0_VALUE = 0;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_1 = 1;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_1_VALUE = 1;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_2 = 2;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_2_VALUE = 2;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_3 = 3;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_3_VALUE = 3;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_4 = 4;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_4_VALUE = 4;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_5 = 5;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_5_VALUE = 5;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_6 = 6;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_6_VALUE = 6;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_7 = 7;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_7_VALUE = 7;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_8 = 8;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_8_VALUE = 8;
    /**
     * <code>PP13_SEL_ALLSTAR_PLAYER_9 = 9;</code>
     */
    public static final int PP13_SEL_ALLSTAR_PLAYER_9_VALUE = 9;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_0 = 10;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_0_VALUE = 10;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_1 = 11;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_1_VALUE = 11;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_2 = 12;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_2_VALUE = 12;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_3 = 13;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_3_VALUE = 13;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_4 = 14;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_4_VALUE = 14;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_5 = 15;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_5_VALUE = 15;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_6 = 16;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_6_VALUE = 16;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_7 = 17;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_7_VALUE = 17;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_8 = 18;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_8_VALUE = 18;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_9 = 19;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_9_VALUE = 19;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_10 = 20;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_10_VALUE = 20;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_11 = 21;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_11_VALUE = 21;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_12 = 22;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_12_VALUE = 22;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_13 = 23;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_13_VALUE = 23;
    /**
     * <code>PP13_SEL_QUALPRED_WEST_14 = 24;</code>
     */
    public static final int PP13_SEL_QUALPRED_WEST_14_VALUE = 24;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_0 = 25;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_0_VALUE = 25;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_1 = 26;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_1_VALUE = 26;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_2 = 27;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_2_VALUE = 27;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_3 = 28;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_3_VALUE = 28;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_4 = 29;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_4_VALUE = 29;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_5 = 30;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_5_VALUE = 30;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_6 = 31;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_6_VALUE = 31;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_7 = 32;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_7_VALUE = 32;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_8 = 33;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_8_VALUE = 33;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_9 = 34;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_9_VALUE = 34;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_10 = 35;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_10_VALUE = 35;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_11 = 36;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_11_VALUE = 36;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_12 = 37;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_12_VALUE = 37;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_13 = 38;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_13_VALUE = 38;
    /**
     * <code>PP13_SEL_QUALPRED_EAST_14 = 39;</code>
     */
    public static final int PP13_SEL_QUALPRED_EAST_14_VALUE = 39;
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM = 40;</code>
     */
    public static final int PP13_SEL_TEAMCUP_TEAM_VALUE = 40;
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER = 41;</code>
     */
    public static final int PP13_SEL_TEAMCUP_PLAYER_VALUE = 41;
    /**
     * <code>PP13_SEL_TEAMCUP_TEAM_LOCK = 42;</code>
     */
    public static final int PP13_SEL_TEAMCUP_TEAM_LOCK_VALUE = 42;
    /**
     * <code>PP13_SEL_TEAMCUP_PLAYER_LOCK = 43;</code>
     */
    public static final int PP13_SEL_TEAMCUP_PLAYER_LOCK_VALUE = 43;
    /**
     * <code>PP13_SEL_EVENTPRED_0 = 44;</code>
     */
    public static final int PP13_SEL_EVENTPRED_0_VALUE = 44;
    /**
     * <code>PP13_SEL_EVENTPRED_1 = 45;</code>
     */
    public static final int PP13_SEL_EVENTPRED_1_VALUE = 45;
    /**
     * <code>PP13_SEL_EVENTPRED_2 = 46;</code>
     */
    public static final int PP13_SEL_EVENTPRED_2_VALUE = 46;
    /**
     * <code>PP13_SEL_EVENTPRED_3 = 47;</code>
     */
    public static final int PP13_SEL_EVENTPRED_3_VALUE = 47;
    /**
     * <code>PP13_SEL_EVENTPRED_4 = 48;</code>
     */
    public static final int PP13_SEL_EVENTPRED_4_VALUE = 48;
    /**
     * <code>PP13_SEL_EVENTPRED_5 = 49;</code>
     */
    public static final int PP13_SEL_EVENTPRED_5_VALUE = 49;
    /**
     * <code>PP13_SEL_EVENTPRED_6 = 50;</code>
     */
    public static final int PP13_SEL_EVENTPRED_6_VALUE = 50;
    /**
     * <code>PP13_SEL_EVENTPRED_7 = 51;</code>
     */
    public static final int PP13_SEL_EVENTPRED_7_VALUE = 51;
    /**
     * <code>PP13_SEL_EVENTPRED_8 = 52;</code>
     */
    public static final int PP13_SEL_EVENTPRED_8_VALUE = 52;
    /**
     * <code>PP13_SEL_EVENTPRED_9 = 53;</code>
     */
    public static final int PP13_SEL_EVENTPRED_9_VALUE = 53;
    /**
     * <code>PP13_SEL_EVENTPRED_10 = 54;</code>
     */
    public static final int PP13_SEL_EVENTPRED_10_VALUE = 54;
    /**
     * <code>PP13_SEL_EVENTPRED_11 = 55;</code>
     */
    public static final int PP13_SEL_EVENTPRED_11_VALUE = 55;
    /**
     * <code>PP13_SEL_EVENTPRED_12 = 56;</code>
     */
    public static final int PP13_SEL_EVENTPRED_12_VALUE = 56;
    /**
     * <code>PP13_SEL_EVENTPRED_13 = 57;</code>
     */
    public static final int PP13_SEL_EVENTPRED_13_VALUE = 57;
    /**
     * <code>PP13_SEL_EVENTPRED_14 = 58;</code>
     */
    public static final int PP13_SEL_EVENTPRED_14_VALUE = 58;
    /**
     * <code>PP13_SEL_EVENTPRED_15 = 59;</code>
     */
    public static final int PP13_SEL_EVENTPRED_15_VALUE = 59;
    /**
     * <code>PP13_SEL_EVENTPRED_16 = 60;</code>
     */
    public static final int PP13_SEL_EVENTPRED_16_VALUE = 60;
    /**
     * <code>PP13_SEL_EVENTPRED_17 = 61;</code>
     */
    public static final int PP13_SEL_EVENTPRED_17_VALUE = 61;
    /**
     * <code>PP13_SEL_EVENTPRED_18 = 62;</code>
     */
    public static final int PP13_SEL_EVENTPRED_18_VALUE = 62;
    /**
     * <code>PP13_SEL_EVENTPRED_19 = 63;</code>
     */
    public static final int PP13_SEL_EVENTPRED_19_VALUE = 63;
    /**
     * <code>PP13_SEL_EVENTPRED_20 = 64;</code>
     */
    public static final int PP13_SEL_EVENTPRED_20_VALUE = 64;
    /**
     * <code>PP13_SEL_EVENTPRED_21 = 65;</code>
     */
    public static final int PP13_SEL_EVENTPRED_21_VALUE = 65;
    /**
     * <code>PP13_SEL_EVENTPRED_22 = 66;</code>
     */
    public static final int PP13_SEL_EVENTPRED_22_VALUE = 66;
    /**
     * <code>PP13_SEL_EVENTPRED_23 = 67;</code>
     */
    public static final int PP13_SEL_EVENTPRED_23_VALUE = 67;
    /**
     * <code>PP13_SEL_EVENTPRED_24 = 68;</code>
     */
    public static final int PP13_SEL_EVENTPRED_24_VALUE = 68;
    /**
     * <code>PP13_SEL_EVENTPRED_25 = 69;</code>
     */
    public static final int PP13_SEL_EVENTPRED_25_VALUE = 69;
    /**
     * <code>PP13_SEL_EVENTPRED_26 = 70;</code>
     */
    public static final int PP13_SEL_EVENTPRED_26_VALUE = 70;
    /**
     * <code>PP13_SEL_EVENTPRED_27 = 71;</code>
     */
    public static final int PP13_SEL_EVENTPRED_27_VALUE = 71;
    /**
     * <code>PP13_SEL_EVENTPRED_28 = 72;</code>
     */
    public static final int PP13_SEL_EVENTPRED_28_VALUE = 72;
    /**
     * <code>PP13_SEL_EVENTPRED_29 = 73;</code>
     */
    public static final int PP13_SEL_EVENTPRED_29_VALUE = 73;
    /**
     * <code>PP13_SEL_EVENTPRED_30 = 74;</code>
     */
    public static final int PP13_SEL_EVENTPRED_30_VALUE = 74;
    /**
     * <code>PP13_SEL_EVENTPRED_31 = 75;</code>
     */
    public static final int PP13_SEL_EVENTPRED_31_VALUE = 75;
    /**
     * <code>PP13_SEL_EVENTPRED_32 = 76;</code>
     */
    public static final int PP13_SEL_EVENTPRED_32_VALUE = 76;
    /**
     * <code>PP13_SEL_EVENTPRED_33 = 77;</code>
     */
    public static final int PP13_SEL_EVENTPRED_33_VALUE = 77;
    /**
     * <code>PP13_SEL_EVENTPRED_34 = 78;</code>
     */
    public static final int PP13_SEL_EVENTPRED_34_VALUE = 78;
    /**
     * <code>PP13_SEL_EVENTPRED_35 = 79;</code>
     */
    public static final int PP13_SEL_EVENTPRED_35_VALUE = 79;
    /**
     * <code>PP13_SEL_EVENTPRED_36 = 80;</code>
     */
    public static final int PP13_SEL_EVENTPRED_36_VALUE = 80;
    /**
     * <code>PP13_SEL_EVENTPRED_37 = 81;</code>
     */
    public static final int PP13_SEL_EVENTPRED_37_VALUE = 81;
    /**
     * <code>PP13_SEL_EVENTPRED_38 = 82;</code>
     */
    public static final int PP13_SEL_EVENTPRED_38_VALUE = 82;
    /**
     * <code>PP13_SEL_EVENTPRED_39 = 83;</code>
     */
    public static final int PP13_SEL_EVENTPRED_39_VALUE = 83;
    /**
     * <code>PP13_SEL_EVENTPRED_40 = 84;</code>
     */
    public static final int PP13_SEL_EVENTPRED_40_VALUE = 84;
    /**
     * <code>PP13_SEL_EVENTPRED_41 = 85;</code>
     */
    public static final int PP13_SEL_EVENTPRED_41_VALUE = 85;
    /**
     * <code>PP13_SEL_EVENTPRED_42 = 86;</code>
     */
    public static final int PP13_SEL_EVENTPRED_42_VALUE = 86;
    /**
     * <code>PP13_SEL_EVENTPRED_43 = 87;</code>
     */
    public static final int PP13_SEL_EVENTPRED_43_VALUE = 87;
    /**
     * <code>PP13_SEL_SOLO_0 = 88;</code>
     */
    public static final int PP13_SEL_SOLO_0_VALUE = 88;
    /**
     * <code>PP13_SEL_SOLO_1 = 89;</code>
     */
    public static final int PP13_SEL_SOLO_1_VALUE = 89;
    /**
     * <code>PP13_SEL_SOLO_2 = 90;</code>
     */
    public static final int PP13_SEL_SOLO_2_VALUE = 90;
    /**
     * <code>PP13_SEL_SOLO_3 = 91;</code>
     */
    public static final int PP13_SEL_SOLO_3_VALUE = 91;
    /**
     * <code>PP13_SEL_SOLO_4 = 92;</code>
     */
    public static final int PP13_SEL_SOLO_4_VALUE = 92;
    /**
     * <code>PP13_SEL_SOLO_5 = 93;</code>
     */
    public static final int PP13_SEL_SOLO_5_VALUE = 93;
    /**
     * <code>PP13_SEL_SOLO_6 = 94;</code>
     */
    public static final int PP13_SEL_SOLO_6_VALUE = 94;
    /**
     * <code>PP13_SEL_SOLO_7 = 95;</code>
     */
    public static final int PP13_SEL_SOLO_7_VALUE = 95;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTA_2013PassportSelectionIndices valueOf(int value) {
      return forNumber(value);
    }

    public static DOTA_2013PassportSelectionIndices forNumber(int value) {
      switch (value) {
        case 0: return PP13_SEL_ALLSTAR_PLAYER_0;
        case 1: return PP13_SEL_ALLSTAR_PLAYER_1;
        case 2: return PP13_SEL_ALLSTAR_PLAYER_2;
        case 3: return PP13_SEL_ALLSTAR_PLAYER_3;
        case 4: return PP13_SEL_ALLSTAR_PLAYER_4;
        case 5: return PP13_SEL_ALLSTAR_PLAYER_5;
        case 6: return PP13_SEL_ALLSTAR_PLAYER_6;
        case 7: return PP13_SEL_ALLSTAR_PLAYER_7;
        case 8: return PP13_SEL_ALLSTAR_PLAYER_8;
        case 9: return PP13_SEL_ALLSTAR_PLAYER_9;
        case 10: return PP13_SEL_QUALPRED_WEST_0;
        case 11: return PP13_SEL_QUALPRED_WEST_1;
        case 12: return PP13_SEL_QUALPRED_WEST_2;
        case 13: return PP13_SEL_QUALPRED_WEST_3;
        case 14: return PP13_SEL_QUALPRED_WEST_4;
        case 15: return PP13_SEL_QUALPRED_WEST_5;
        case 16: return PP13_SEL_QUALPRED_WEST_6;
        case 17: return PP13_SEL_QUALPRED_WEST_7;
        case 18: return PP13_SEL_QUALPRED_WEST_8;
        case 19: return PP13_SEL_QUALPRED_WEST_9;
        case 20: return PP13_SEL_QUALPRED_WEST_10;
        case 21: return PP13_SEL_QUALPRED_WEST_11;
        case 22: return PP13_SEL_QUALPRED_WEST_12;
        case 23: return PP13_SEL_QUALPRED_WEST_13;
        case 24: return PP13_SEL_QUALPRED_WEST_14;
        case 25: return PP13_SEL_QUALPRED_EAST_0;
        case 26: return PP13_SEL_QUALPRED_EAST_1;
        case 27: return PP13_SEL_QUALPRED_EAST_2;
        case 28: return PP13_SEL_QUALPRED_EAST_3;
        case 29: return PP13_SEL_QUALPRED_EAST_4;
        case 30: return PP13_SEL_QUALPRED_EAST_5;
        case 31: return PP13_SEL_QUALPRED_EAST_6;
        case 32: return PP13_SEL_QUALPRED_EAST_7;
        case 33: return PP13_SEL_QUALPRED_EAST_8;
        case 34: return PP13_SEL_QUALPRED_EAST_9;
        case 35: return PP13_SEL_QUALPRED_EAST_10;
        case 36: return PP13_SEL_QUALPRED_EAST_11;
        case 37: return PP13_SEL_QUALPRED_EAST_12;
        case 38: return PP13_SEL_QUALPRED_EAST_13;
        case 39: return PP13_SEL_QUALPRED_EAST_14;
        case 40: return PP13_SEL_TEAMCUP_TEAM;
        case 41: return PP13_SEL_TEAMCUP_PLAYER;
        case 42: return PP13_SEL_TEAMCUP_TEAM_LOCK;
        case 43: return PP13_SEL_TEAMCUP_PLAYER_LOCK;
        case 44: return PP13_SEL_EVENTPRED_0;
        case 45: return PP13_SEL_EVENTPRED_1;
        case 46: return PP13_SEL_EVENTPRED_2;
        case 47: return PP13_SEL_EVENTPRED_3;
        case 48: return PP13_SEL_EVENTPRED_4;
        case 49: return PP13_SEL_EVENTPRED_5;
        case 50: return PP13_SEL_EVENTPRED_6;
        case 51: return PP13_SEL_EVENTPRED_7;
        case 52: return PP13_SEL_EVENTPRED_8;
        case 53: return PP13_SEL_EVENTPRED_9;
        case 54: return PP13_SEL_EVENTPRED_10;
        case 55: return PP13_SEL_EVENTPRED_11;
        case 56: return PP13_SEL_EVENTPRED_12;
        case 57: return PP13_SEL_EVENTPRED_13;
        case 58: return PP13_SEL_EVENTPRED_14;
        case 59: return PP13_SEL_EVENTPRED_15;
        case 60: return PP13_SEL_EVENTPRED_16;
        case 61: return PP13_SEL_EVENTPRED_17;
        case 62: return PP13_SEL_EVENTPRED_18;
        case 63: return PP13_SEL_EVENTPRED_19;
        case 64: return PP13_SEL_EVENTPRED_20;
        case 65: return PP13_SEL_EVENTPRED_21;
        case 66: return PP13_SEL_EVENTPRED_22;
        case 67: return PP13_SEL_EVENTPRED_23;
        case 68: return PP13_SEL_EVENTPRED_24;
        case 69: return PP13_SEL_EVENTPRED_25;
        case 70: return PP13_SEL_EVENTPRED_26;
        case 71: return PP13_SEL_EVENTPRED_27;
        case 72: return PP13_SEL_EVENTPRED_28;
        case 73: return PP13_SEL_EVENTPRED_29;
        case 74: return PP13_SEL_EVENTPRED_30;
        case 75: return PP13_SEL_EVENTPRED_31;
        case 76: return PP13_SEL_EVENTPRED_32;
        case 77: return PP13_SEL_EVENTPRED_33;
        case 78: return PP13_SEL_EVENTPRED_34;
        case 79: return PP13_SEL_EVENTPRED_35;
        case 80: return PP13_SEL_EVENTPRED_36;
        case 81: return PP13_SEL_EVENTPRED_37;
        case 82: return PP13_SEL_EVENTPRED_38;
        case 83: return PP13_SEL_EVENTPRED_39;
        case 84: return PP13_SEL_EVENTPRED_40;
        case 85: return PP13_SEL_EVENTPRED_41;
        case 86: return PP13_SEL_EVENTPRED_42;
        case 87: return PP13_SEL_EVENTPRED_43;
        case 88: return PP13_SEL_SOLO_0;
        case 89: return PP13_SEL_SOLO_1;
        case 90: return PP13_SEL_SOLO_2;
        case 91: return PP13_SEL_SOLO_3;
        case 92: return PP13_SEL_SOLO_4;
        case 93: return PP13_SEL_SOLO_5;
        case 94: return PP13_SEL_SOLO_6;
        case 95: return PP13_SEL_SOLO_7;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_2013PassportSelectionIndices>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTA_2013PassportSelectionIndices> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_2013PassportSelectionIndices>() {
            public DOTA_2013PassportSelectionIndices findValueByNumber(int number) {
              return DOTA_2013PassportSelectionIndices.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgGCClientFantasy.getDescriptor().getEnumTypes().get(0);
    }

    private static final DOTA_2013PassportSelectionIndices[] VALUES = values();

    public static DOTA_2013PassportSelectionIndices valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTA_2013PassportSelectionIndices(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_2013PassportSelectionIndices)
  }

  public interface CMsgGCPlayerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgGCPlayerInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo> 
        getPlayerInfosList();
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo getPlayerInfos(int index);
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    int getPlayerInfosCount();
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder> 
        getPlayerInfosOrBuilderList();
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder getPlayerInfosOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard> 
        getLeaderboardsList();
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard getLeaderboards(int index);
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    int getLeaderboardsCount();
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder> 
        getLeaderboardsOrBuilderList();
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder getLeaderboardsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgGCPlayerInfo}
   */
  public  static final class CMsgGCPlayerInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgGCPlayerInfo)
      CMsgGCPlayerInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgGCPlayerInfo.newBuilder() to construct.
    private CMsgGCPlayerInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgGCPlayerInfo() {
      playerInfos_ = java.util.Collections.emptyList();
      leaderboards_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgGCPlayerInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerInfos_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerInfos_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                leaderboards_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard>();
                mutable_bitField0_ |= 0x00000002;
              }
              leaderboards_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerInfos_ = java.util.Collections.unmodifiableList(playerInfos_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          leaderboards_ = java.util.Collections.unmodifiableList(leaderboards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgGCPlayerInfo.class, MsgGCClientFantasy.CMsgGCPlayerInfo.Builder.class);
    }

    public interface PlayerInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgGCPlayerInfo.PlayerInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      int getAccountId();

      /**
       * <code>optional string name = 2;</code>
       */
      boolean hasName();
      /**
       * <code>optional string name = 2;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 2;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string country_code = 3;</code>
       */
      boolean hasCountryCode();
      /**
       * <code>optional string country_code = 3;</code>
       */
      java.lang.String getCountryCode();
      /**
       * <code>optional string country_code = 3;</code>
       */
      com.google.protobuf.ByteString
          getCountryCodeBytes();

      /**
       * <code>optional uint32 fantasy_role = 4;</code>
       */
      boolean hasFantasyRole();
      /**
       * <code>optional uint32 fantasy_role = 4;</code>
       */
      int getFantasyRole();

      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      boolean hasTeamId();
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      int getTeamId();

      /**
       * <code>optional string team_name = 6;</code>
       */
      boolean hasTeamName();
      /**
       * <code>optional string team_name = 6;</code>
       */
      java.lang.String getTeamName();
      /**
       * <code>optional string team_name = 6;</code>
       */
      com.google.protobuf.ByteString
          getTeamNameBytes();

      /**
       * <code>optional string team_tag = 7;</code>
       */
      boolean hasTeamTag();
      /**
       * <code>optional string team_tag = 7;</code>
       */
      java.lang.String getTeamTag();
      /**
       * <code>optional string team_tag = 7;</code>
       */
      com.google.protobuf.ByteString
          getTeamTagBytes();

      /**
       * <code>optional string sponsor = 8;</code>
       */
      boolean hasSponsor();
      /**
       * <code>optional string sponsor = 8;</code>
       */
      java.lang.String getSponsor();
      /**
       * <code>optional string sponsor = 8;</code>
       */
      com.google.protobuf.ByteString
          getSponsorBytes();

      /**
       * <code>optional bool is_locked = 9;</code>
       */
      boolean hasIsLocked();
      /**
       * <code>optional bool is_locked = 9;</code>
       */
      boolean getIsLocked();

      /**
       * <code>optional bool is_pro = 10;</code>
       */
      boolean hasIsPro();
      /**
       * <code>optional bool is_pro = 10;</code>
       */
      boolean getIsPro();

      /**
       * <code>optional uint32 locked_until = 11;</code>
       */
      boolean hasLockedUntil();
      /**
       * <code>optional uint32 locked_until = 11;</code>
       */
      int getLockedUntil();

      /**
       * <code>optional uint32 timestamp = 12;</code>
       */
      boolean hasTimestamp();
      /**
       * <code>optional uint32 timestamp = 12;</code>
       */
      int getTimestamp();
    }
    /**
     * Protobuf type {@code CMsgGCPlayerInfo.PlayerInfo}
     */
    public  static final class PlayerInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgGCPlayerInfo.PlayerInfo)
        PlayerInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PlayerInfo.newBuilder() to construct.
      private PlayerInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PlayerInfo() {
        accountId_ = 0;
        name_ = "";
        countryCode_ = "";
        fantasyRole_ = 0;
        teamId_ = 0;
        teamName_ = "";
        teamTag_ = "";
        sponsor_ = "";
        isLocked_ = false;
        isPro_ = false;
        lockedUntil_ = 0;
        timestamp_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PlayerInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                name_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                countryCode_ = bs;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                fantasyRole_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                teamId_ = input.readUInt32();
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000020;
                teamName_ = bs;
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000040;
                teamTag_ = bs;
                break;
              }
              case 66: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000080;
                sponsor_ = bs;
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                isLocked_ = input.readBool();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                isPro_ = input.readBool();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                lockedUntil_ = input.readUInt32();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000800;
                timestamp_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_PlayerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.class, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder.class);
      }

      private int bitField0_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object name_;
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int COUNTRY_CODE_FIELD_NUMBER = 3;
      private volatile java.lang.Object countryCode_;
      /**
       * <code>optional string country_code = 3;</code>
       */
      public boolean hasCountryCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string country_code = 3;</code>
       */
      public java.lang.String getCountryCode() {
        java.lang.Object ref = countryCode_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            countryCode_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string country_code = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCountryCodeBytes() {
        java.lang.Object ref = countryCode_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          countryCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FANTASY_ROLE_FIELD_NUMBER = 4;
      private int fantasyRole_;
      /**
       * <code>optional uint32 fantasy_role = 4;</code>
       */
      public boolean hasFantasyRole() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 fantasy_role = 4;</code>
       */
      public int getFantasyRole() {
        return fantasyRole_;
      }

      public static final int TEAM_ID_FIELD_NUMBER = 5;
      private int teamId_;
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public int getTeamId() {
        return teamId_;
      }

      public static final int TEAM_NAME_FIELD_NUMBER = 6;
      private volatile java.lang.Object teamName_;
      /**
       * <code>optional string team_name = 6;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string team_name = 6;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_name = 6;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM_TAG_FIELD_NUMBER = 7;
      private volatile java.lang.Object teamTag_;
      /**
       * <code>optional string team_tag = 7;</code>
       */
      public boolean hasTeamTag() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string team_tag = 7;</code>
       */
      public java.lang.String getTeamTag() {
        java.lang.Object ref = teamTag_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamTag_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_tag = 7;</code>
       */
      public com.google.protobuf.ByteString
          getTeamTagBytes() {
        java.lang.Object ref = teamTag_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SPONSOR_FIELD_NUMBER = 8;
      private volatile java.lang.Object sponsor_;
      /**
       * <code>optional string sponsor = 8;</code>
       */
      public boolean hasSponsor() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string sponsor = 8;</code>
       */
      public java.lang.String getSponsor() {
        java.lang.Object ref = sponsor_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sponsor_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string sponsor = 8;</code>
       */
      public com.google.protobuf.ByteString
          getSponsorBytes() {
        java.lang.Object ref = sponsor_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sponsor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int IS_LOCKED_FIELD_NUMBER = 9;
      private boolean isLocked_;
      /**
       * <code>optional bool is_locked = 9;</code>
       */
      public boolean hasIsLocked() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool is_locked = 9;</code>
       */
      public boolean getIsLocked() {
        return isLocked_;
      }

      public static final int IS_PRO_FIELD_NUMBER = 10;
      private boolean isPro_;
      /**
       * <code>optional bool is_pro = 10;</code>
       */
      public boolean hasIsPro() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool is_pro = 10;</code>
       */
      public boolean getIsPro() {
        return isPro_;
      }

      public static final int LOCKED_UNTIL_FIELD_NUMBER = 11;
      private int lockedUntil_;
      /**
       * <code>optional uint32 locked_until = 11;</code>
       */
      public boolean hasLockedUntil() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 locked_until = 11;</code>
       */
      public int getLockedUntil() {
        return lockedUntil_;
      }

      public static final int TIMESTAMP_FIELD_NUMBER = 12;
      private int timestamp_;
      /**
       * <code>optional uint32 timestamp = 12;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 timestamp = 12;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, countryCode_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, fantasyRole_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, teamId_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 6, teamName_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 7, teamTag_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 8, sponsor_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBool(9, isLocked_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBool(10, isPro_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeUInt32(11, lockedUntil_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeUInt32(12, timestamp_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, countryCode_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, fantasyRole_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, teamId_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, teamName_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, teamTag_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, sponsor_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(9, isLocked_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(10, isPro_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(11, lockedUntil_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(12, timestamp_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo other = (MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo) obj;

        boolean result = true;
        result = result && (hasAccountId() == other.hasAccountId());
        if (hasAccountId()) {
          result = result && (getAccountId()
              == other.getAccountId());
        }
        result = result && (hasName() == other.hasName());
        if (hasName()) {
          result = result && getName()
              .equals(other.getName());
        }
        result = result && (hasCountryCode() == other.hasCountryCode());
        if (hasCountryCode()) {
          result = result && getCountryCode()
              .equals(other.getCountryCode());
        }
        result = result && (hasFantasyRole() == other.hasFantasyRole());
        if (hasFantasyRole()) {
          result = result && (getFantasyRole()
              == other.getFantasyRole());
        }
        result = result && (hasTeamId() == other.hasTeamId());
        if (hasTeamId()) {
          result = result && (getTeamId()
              == other.getTeamId());
        }
        result = result && (hasTeamName() == other.hasTeamName());
        if (hasTeamName()) {
          result = result && getTeamName()
              .equals(other.getTeamName());
        }
        result = result && (hasTeamTag() == other.hasTeamTag());
        if (hasTeamTag()) {
          result = result && getTeamTag()
              .equals(other.getTeamTag());
        }
        result = result && (hasSponsor() == other.hasSponsor());
        if (hasSponsor()) {
          result = result && getSponsor()
              .equals(other.getSponsor());
        }
        result = result && (hasIsLocked() == other.hasIsLocked());
        if (hasIsLocked()) {
          result = result && (getIsLocked()
              == other.getIsLocked());
        }
        result = result && (hasIsPro() == other.hasIsPro());
        if (hasIsPro()) {
          result = result && (getIsPro()
              == other.getIsPro());
        }
        result = result && (hasLockedUntil() == other.hasLockedUntil());
        if (hasLockedUntil()) {
          result = result && (getLockedUntil()
              == other.getLockedUntil());
        }
        result = result && (hasTimestamp() == other.hasTimestamp());
        if (hasTimestamp()) {
          result = result && (getTimestamp()
              == other.getTimestamp());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasAccountId()) {
          hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getAccountId();
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasCountryCode()) {
          hash = (37 * hash) + COUNTRY_CODE_FIELD_NUMBER;
          hash = (53 * hash) + getCountryCode().hashCode();
        }
        if (hasFantasyRole()) {
          hash = (37 * hash) + FANTASY_ROLE_FIELD_NUMBER;
          hash = (53 * hash) + getFantasyRole();
        }
        if (hasTeamId()) {
          hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeamId();
        }
        if (hasTeamName()) {
          hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getTeamName().hashCode();
        }
        if (hasTeamTag()) {
          hash = (37 * hash) + TEAM_TAG_FIELD_NUMBER;
          hash = (53 * hash) + getTeamTag().hashCode();
        }
        if (hasSponsor()) {
          hash = (37 * hash) + SPONSOR_FIELD_NUMBER;
          hash = (53 * hash) + getSponsor().hashCode();
        }
        if (hasIsLocked()) {
          hash = (37 * hash) + IS_LOCKED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsLocked());
        }
        if (hasIsPro()) {
          hash = (37 * hash) + IS_PRO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsPro());
        }
        if (hasLockedUntil()) {
          hash = (37 * hash) + LOCKED_UNTIL_FIELD_NUMBER;
          hash = (53 * hash) + getLockedUntil();
        }
        if (hasTimestamp()) {
          hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + getTimestamp();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgGCPlayerInfo.PlayerInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgGCPlayerInfo.PlayerInfo)
          MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_PlayerInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.class, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          countryCode_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          fantasyRole_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          teamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          teamName_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          teamTag_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          sponsor_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          isLocked_ = false;
          bitField0_ = (bitField0_ & ~0x00000100);
          isPro_ = false;
          bitField0_ = (bitField0_ & ~0x00000200);
          lockedUntil_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          timestamp_ = 0;
          bitField0_ = (bitField0_ & ~0x00000800);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor;
        }

        public MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo build() {
          MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo buildPartial() {
          MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo result = new MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.countryCode_ = countryCode_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.fantasyRole_ = fantasyRole_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.teamId_ = teamId_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.teamName_ = teamName_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.teamTag_ = teamTag_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.sponsor_ = sponsor_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.isLocked_ = isLocked_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.isPro_ = isPro_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.lockedUntil_ = lockedUntil_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.timestamp_ = timestamp_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo) {
            return mergeFrom((MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo other) {
          if (other == MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000002;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasCountryCode()) {
            bitField0_ |= 0x00000004;
            countryCode_ = other.countryCode_;
            onChanged();
          }
          if (other.hasFantasyRole()) {
            setFantasyRole(other.getFantasyRole());
          }
          if (other.hasTeamId()) {
            setTeamId(other.getTeamId());
          }
          if (other.hasTeamName()) {
            bitField0_ |= 0x00000020;
            teamName_ = other.teamName_;
            onChanged();
          }
          if (other.hasTeamTag()) {
            bitField0_ |= 0x00000040;
            teamTag_ = other.teamTag_;
            onChanged();
          }
          if (other.hasSponsor()) {
            bitField0_ |= 0x00000080;
            sponsor_ = other.sponsor_;
            onChanged();
          }
          if (other.hasIsLocked()) {
            setIsLocked(other.getIsLocked());
          }
          if (other.hasIsPro()) {
            setIsPro(other.getIsPro());
          }
          if (other.hasLockedUntil()) {
            setLockedUntil(other.getLockedUntil());
          }
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 2;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object countryCode_ = "";
        /**
         * <code>optional string country_code = 3;</code>
         */
        public boolean hasCountryCode() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string country_code = 3;</code>
         */
        public java.lang.String getCountryCode() {
          java.lang.Object ref = countryCode_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              countryCode_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string country_code = 3;</code>
         */
        public com.google.protobuf.ByteString
            getCountryCodeBytes() {
          java.lang.Object ref = countryCode_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            countryCode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string country_code = 3;</code>
         */
        public Builder setCountryCode(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          countryCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string country_code = 3;</code>
         */
        public Builder clearCountryCode() {
          bitField0_ = (bitField0_ & ~0x00000004);
          countryCode_ = getDefaultInstance().getCountryCode();
          onChanged();
          return this;
        }
        /**
         * <code>optional string country_code = 3;</code>
         */
        public Builder setCountryCodeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          countryCode_ = value;
          onChanged();
          return this;
        }

        private int fantasyRole_ ;
        /**
         * <code>optional uint32 fantasy_role = 4;</code>
         */
        public boolean hasFantasyRole() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 fantasy_role = 4;</code>
         */
        public int getFantasyRole() {
          return fantasyRole_;
        }
        /**
         * <code>optional uint32 fantasy_role = 4;</code>
         */
        public Builder setFantasyRole(int value) {
          bitField0_ |= 0x00000008;
          fantasyRole_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 fantasy_role = 4;</code>
         */
        public Builder clearFantasyRole() {
          bitField0_ = (bitField0_ & ~0x00000008);
          fantasyRole_ = 0;
          onChanged();
          return this;
        }

        private int teamId_ ;
        /**
         * <code>optional uint32 team_id = 5;</code>
         */
        public boolean hasTeamId() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 team_id = 5;</code>
         */
        public int getTeamId() {
          return teamId_;
        }
        /**
         * <code>optional uint32 team_id = 5;</code>
         */
        public Builder setTeamId(int value) {
          bitField0_ |= 0x00000010;
          teamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_id = 5;</code>
         */
        public Builder clearTeamId() {
          bitField0_ = (bitField0_ & ~0x00000010);
          teamId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object teamName_ = "";
        /**
         * <code>optional string team_name = 6;</code>
         */
        public boolean hasTeamName() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string team_name = 6;</code>
         */
        public java.lang.String getTeamName() {
          java.lang.Object ref = teamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_name = 6;</code>
         */
        public com.google.protobuf.ByteString
            getTeamNameBytes() {
          java.lang.Object ref = teamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_name = 6;</code>
         */
        public Builder setTeamName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          teamName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 6;</code>
         */
        public Builder clearTeamName() {
          bitField0_ = (bitField0_ & ~0x00000020);
          teamName_ = getDefaultInstance().getTeamName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 6;</code>
         */
        public Builder setTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          teamName_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object teamTag_ = "";
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public boolean hasTeamTag() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public java.lang.String getTeamTag() {
          java.lang.Object ref = teamTag_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamTag_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public com.google.protobuf.ByteString
            getTeamTagBytes() {
          java.lang.Object ref = teamTag_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamTag_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public Builder setTeamTag(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          teamTag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public Builder clearTeamTag() {
          bitField0_ = (bitField0_ & ~0x00000040);
          teamTag_ = getDefaultInstance().getTeamTag();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_tag = 7;</code>
         */
        public Builder setTeamTagBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          teamTag_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object sponsor_ = "";
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public boolean hasSponsor() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public java.lang.String getSponsor() {
          java.lang.Object ref = sponsor_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              sponsor_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public com.google.protobuf.ByteString
            getSponsorBytes() {
          java.lang.Object ref = sponsor_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sponsor_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public Builder setSponsor(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          sponsor_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public Builder clearSponsor() {
          bitField0_ = (bitField0_ & ~0x00000080);
          sponsor_ = getDefaultInstance().getSponsor();
          onChanged();
          return this;
        }
        /**
         * <code>optional string sponsor = 8;</code>
         */
        public Builder setSponsorBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          sponsor_ = value;
          onChanged();
          return this;
        }

        private boolean isLocked_ ;
        /**
         * <code>optional bool is_locked = 9;</code>
         */
        public boolean hasIsLocked() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional bool is_locked = 9;</code>
         */
        public boolean getIsLocked() {
          return isLocked_;
        }
        /**
         * <code>optional bool is_locked = 9;</code>
         */
        public Builder setIsLocked(boolean value) {
          bitField0_ |= 0x00000100;
          isLocked_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_locked = 9;</code>
         */
        public Builder clearIsLocked() {
          bitField0_ = (bitField0_ & ~0x00000100);
          isLocked_ = false;
          onChanged();
          return this;
        }

        private boolean isPro_ ;
        /**
         * <code>optional bool is_pro = 10;</code>
         */
        public boolean hasIsPro() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional bool is_pro = 10;</code>
         */
        public boolean getIsPro() {
          return isPro_;
        }
        /**
         * <code>optional bool is_pro = 10;</code>
         */
        public Builder setIsPro(boolean value) {
          bitField0_ |= 0x00000200;
          isPro_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_pro = 10;</code>
         */
        public Builder clearIsPro() {
          bitField0_ = (bitField0_ & ~0x00000200);
          isPro_ = false;
          onChanged();
          return this;
        }

        private int lockedUntil_ ;
        /**
         * <code>optional uint32 locked_until = 11;</code>
         */
        public boolean hasLockedUntil() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional uint32 locked_until = 11;</code>
         */
        public int getLockedUntil() {
          return lockedUntil_;
        }
        /**
         * <code>optional uint32 locked_until = 11;</code>
         */
        public Builder setLockedUntil(int value) {
          bitField0_ |= 0x00000400;
          lockedUntil_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 locked_until = 11;</code>
         */
        public Builder clearLockedUntil() {
          bitField0_ = (bitField0_ & ~0x00000400);
          lockedUntil_ = 0;
          onChanged();
          return this;
        }

        private int timestamp_ ;
        /**
         * <code>optional uint32 timestamp = 12;</code>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional uint32 timestamp = 12;</code>
         */
        public int getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional uint32 timestamp = 12;</code>
         */
        public Builder setTimestamp(int value) {
          bitField0_ |= 0x00000800;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 timestamp = 12;</code>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000800);
          timestamp_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgGCPlayerInfo.PlayerInfo)
      }

      // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfo.PlayerInfo)
      private static final MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo();
      }

      public static MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<PlayerInfo>
          PARSER = new com.google.protobuf.AbstractParser<PlayerInfo>() {
        public PlayerInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new PlayerInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PlayerInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PlayerInfo> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RegionLeaderboardOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgGCPlayerInfo.RegionLeaderboard)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 division = 1;</code>
       */
      boolean hasDivision();
      /**
       * <code>optional uint32 division = 1;</code>
       */
      int getDivision();

      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      java.util.List<java.lang.Integer> getAccountIdsList();
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      int getAccountIdsCount();
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      int getAccountIds(int index);
    }
    /**
     * Protobuf type {@code CMsgGCPlayerInfo.RegionLeaderboard}
     */
    public  static final class RegionLeaderboard extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgGCPlayerInfo.RegionLeaderboard)
        RegionLeaderboardOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RegionLeaderboard.newBuilder() to construct.
      private RegionLeaderboard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RegionLeaderboard() {
        division_ = 0;
        accountIds_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RegionLeaderboard(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                division_ = input.readUInt32();
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  accountIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                accountIds_.add(input.readUInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  accountIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  accountIds_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_RegionLeaderboard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.class, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder.class);
      }

      private int bitField0_;
      public static final int DIVISION_FIELD_NUMBER = 1;
      private int division_;
      /**
       * <code>optional uint32 division = 1;</code>
       */
      public boolean hasDivision() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 division = 1;</code>
       */
      public int getDivision() {
        return division_;
      }

      public static final int ACCOUNT_IDS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> accountIds_;
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getAccountIdsList() {
        return accountIds_;
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      public int getAccountIdsCount() {
        return accountIds_.size();
      }
      /**
       * <code>repeated uint32 account_ids = 2;</code>
       */
      public int getAccountIds(int index) {
        return accountIds_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, division_);
        }
        for (int i = 0; i < accountIds_.size(); i++) {
          output.writeUInt32(2, accountIds_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, division_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < accountIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(accountIds_.get(i));
          }
          size += dataSize;
          size += 1 * getAccountIdsList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard other = (MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard) obj;

        boolean result = true;
        result = result && (hasDivision() == other.hasDivision());
        if (hasDivision()) {
          result = result && (getDivision()
              == other.getDivision());
        }
        result = result && getAccountIdsList()
            .equals(other.getAccountIdsList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDivision()) {
          hash = (37 * hash) + DIVISION_FIELD_NUMBER;
          hash = (53 * hash) + getDivision();
        }
        if (getAccountIdsCount() > 0) {
          hash = (37 * hash) + ACCOUNT_IDS_FIELD_NUMBER;
          hash = (53 * hash) + getAccountIdsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgGCPlayerInfo.RegionLeaderboard}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgGCPlayerInfo.RegionLeaderboard)
          MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_RegionLeaderboard_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.class, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          division_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          accountIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor;
        }

        public MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard build() {
          MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard buildPartial() {
          MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard result = new MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.division_ = division_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.accountIds_ = accountIds_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard) {
            return mergeFrom((MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard other) {
          if (other == MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.getDefaultInstance()) return this;
          if (other.hasDivision()) {
            setDivision(other.getDivision());
          }
          if (!other.accountIds_.isEmpty()) {
            if (accountIds_.isEmpty()) {
              accountIds_ = other.accountIds_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAccountIdsIsMutable();
              accountIds_.addAll(other.accountIds_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int division_ ;
        /**
         * <code>optional uint32 division = 1;</code>
         */
        public boolean hasDivision() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 division = 1;</code>
         */
        public int getDivision() {
          return division_;
        }
        /**
         * <code>optional uint32 division = 1;</code>
         */
        public Builder setDivision(int value) {
          bitField0_ |= 0x00000001;
          division_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 division = 1;</code>
         */
        public Builder clearDivision() {
          bitField0_ = (bitField0_ & ~0x00000001);
          division_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> accountIds_ = java.util.Collections.emptyList();
        private void ensureAccountIdsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            accountIds_ = new java.util.ArrayList<java.lang.Integer>(accountIds_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public java.util.List<java.lang.Integer>
            getAccountIdsList() {
          return java.util.Collections.unmodifiableList(accountIds_);
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public int getAccountIdsCount() {
          return accountIds_.size();
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public int getAccountIds(int index) {
          return accountIds_.get(index);
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public Builder setAccountIds(
            int index, int value) {
          ensureAccountIdsIsMutable();
          accountIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public Builder addAccountIds(int value) {
          ensureAccountIdsIsMutable();
          accountIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public Builder addAllAccountIds(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureAccountIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accountIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_ids = 2;</code>
         */
        public Builder clearAccountIds() {
          accountIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgGCPlayerInfo.RegionLeaderboard)
      }

      // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfo.RegionLeaderboard)
      private static final MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard();
      }

      public static MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<RegionLeaderboard>
          PARSER = new com.google.protobuf.AbstractParser<RegionLeaderboard>() {
        public RegionLeaderboard parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new RegionLeaderboard(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RegionLeaderboard> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RegionLeaderboard> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int PLAYER_INFOS_FIELD_NUMBER = 1;
    private java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo> playerInfos_;
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo> getPlayerInfosList() {
      return playerInfos_;
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder> 
        getPlayerInfosOrBuilderList() {
      return playerInfos_;
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    public int getPlayerInfosCount() {
      return playerInfos_.size();
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    public MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo getPlayerInfos(int index) {
      return playerInfos_.get(index);
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
     */
    public MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder getPlayerInfosOrBuilder(
        int index) {
      return playerInfos_.get(index);
    }

    public static final int LEADERBOARDS_FIELD_NUMBER = 2;
    private java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard> leaderboards_;
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard> getLeaderboardsList() {
      return leaderboards_;
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder> 
        getLeaderboardsOrBuilderList() {
      return leaderboards_;
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    public int getLeaderboardsCount() {
      return leaderboards_.size();
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    public MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard getLeaderboards(int index) {
      return leaderboards_.get(index);
    }
    /**
     * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
     */
    public MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder getLeaderboardsOrBuilder(
        int index) {
      return leaderboards_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < playerInfos_.size(); i++) {
        output.writeMessage(1, playerInfos_.get(i));
      }
      for (int i = 0; i < leaderboards_.size(); i++) {
        output.writeMessage(2, leaderboards_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playerInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerInfos_.get(i));
      }
      for (int i = 0; i < leaderboards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, leaderboards_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgGCPlayerInfo)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgGCPlayerInfo other = (MsgGCClientFantasy.CMsgGCPlayerInfo) obj;

      boolean result = true;
      result = result && getPlayerInfosList()
          .equals(other.getPlayerInfosList());
      result = result && getLeaderboardsList()
          .equals(other.getLeaderboardsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPlayerInfosCount() > 0) {
        hash = (37 * hash) + PLAYER_INFOS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerInfosList().hashCode();
      }
      if (getLeaderboardsCount() > 0) {
        hash = (37 * hash) + LEADERBOARDS_FIELD_NUMBER;
        hash = (53 * hash) + getLeaderboardsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgGCPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgGCPlayerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCPlayerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgGCPlayerInfo)
        MsgGCClientFantasy.CMsgGCPlayerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgGCPlayerInfo.class, MsgGCClientFantasy.CMsgGCPlayerInfo.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgGCPlayerInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPlayerInfosFieldBuilder();
          getLeaderboardsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (playerInfosBuilder_ == null) {
          playerInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playerInfosBuilder_.clear();
        }
        if (leaderboardsBuilder_ == null) {
          leaderboards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          leaderboardsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgGCPlayerInfo_descriptor;
      }

      public MsgGCClientFantasy.CMsgGCPlayerInfo getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgGCPlayerInfo.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgGCPlayerInfo build() {
        MsgGCClientFantasy.CMsgGCPlayerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgGCPlayerInfo buildPartial() {
        MsgGCClientFantasy.CMsgGCPlayerInfo result = new MsgGCClientFantasy.CMsgGCPlayerInfo(this);
        int from_bitField0_ = bitField0_;
        if (playerInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            playerInfos_ = java.util.Collections.unmodifiableList(playerInfos_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.playerInfos_ = playerInfos_;
        } else {
          result.playerInfos_ = playerInfosBuilder_.build();
        }
        if (leaderboardsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            leaderboards_ = java.util.Collections.unmodifiableList(leaderboards_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.leaderboards_ = leaderboards_;
        } else {
          result.leaderboards_ = leaderboardsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgGCPlayerInfo) {
          return mergeFrom((MsgGCClientFantasy.CMsgGCPlayerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgGCPlayerInfo other) {
        if (other == MsgGCClientFantasy.CMsgGCPlayerInfo.getDefaultInstance()) return this;
        if (playerInfosBuilder_ == null) {
          if (!other.playerInfos_.isEmpty()) {
            if (playerInfos_.isEmpty()) {
              playerInfos_ = other.playerInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayerInfosIsMutable();
              playerInfos_.addAll(other.playerInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.playerInfos_.isEmpty()) {
            if (playerInfosBuilder_.isEmpty()) {
              playerInfosBuilder_.dispose();
              playerInfosBuilder_ = null;
              playerInfos_ = other.playerInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playerInfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlayerInfosFieldBuilder() : null;
            } else {
              playerInfosBuilder_.addAllMessages(other.playerInfos_);
            }
          }
        }
        if (leaderboardsBuilder_ == null) {
          if (!other.leaderboards_.isEmpty()) {
            if (leaderboards_.isEmpty()) {
              leaderboards_ = other.leaderboards_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLeaderboardsIsMutable();
              leaderboards_.addAll(other.leaderboards_);
            }
            onChanged();
          }
        } else {
          if (!other.leaderboards_.isEmpty()) {
            if (leaderboardsBuilder_.isEmpty()) {
              leaderboardsBuilder_.dispose();
              leaderboardsBuilder_ = null;
              leaderboards_ = other.leaderboards_;
              bitField0_ = (bitField0_ & ~0x00000002);
              leaderboardsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLeaderboardsFieldBuilder() : null;
            } else {
              leaderboardsBuilder_.addAllMessages(other.leaderboards_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgGCPlayerInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgGCPlayerInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo> playerInfos_ =
        java.util.Collections.emptyList();
      private void ensurePlayerInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerInfos_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo>(playerInfos_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder> playerInfosBuilder_;

      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo> getPlayerInfosList() {
        if (playerInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerInfos_);
        } else {
          return playerInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public int getPlayerInfosCount() {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.size();
        } else {
          return playerInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo getPlayerInfos(int index) {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.get(index);
        } else {
          return playerInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder setPlayerInfos(
          int index, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.set(index, value);
          onChanged();
        } else {
          playerInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder setPlayerInfos(
          int index, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.add(value);
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(
          int index, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.add(index, value);
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(
          MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.add(builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder addPlayerInfos(
          int index, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder addAllPlayerInfos(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo> values) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerInfos_);
          onChanged();
        } else {
          playerInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder clearPlayerInfos() {
        if (playerInfosBuilder_ == null) {
          playerInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playerInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public Builder removePlayerInfos(int index) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.remove(index);
          onChanged();
        } else {
          playerInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder getPlayerInfosBuilder(
          int index) {
        return getPlayerInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder getPlayerInfosOrBuilder(
          int index) {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.get(index);  } else {
          return playerInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder> 
           getPlayerInfosOrBuilderList() {
        if (playerInfosBuilder_ != null) {
          return playerInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerInfos_);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder addPlayerInfosBuilder() {
        return getPlayerInfosFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder addPlayerInfosBuilder(
          int index) {
        return getPlayerInfosFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.PlayerInfo player_infos = 1;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder> 
           getPlayerInfosBuilderList() {
        return getPlayerInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder> 
          getPlayerInfosFieldBuilder() {
        if (playerInfosBuilder_ == null) {
          playerInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfo.Builder, MsgGCClientFantasy.CMsgGCPlayerInfo.PlayerInfoOrBuilder>(
                  playerInfos_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          playerInfos_ = null;
        }
        return playerInfosBuilder_;
      }

      private java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard> leaderboards_ =
        java.util.Collections.emptyList();
      private void ensureLeaderboardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          leaderboards_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard>(leaderboards_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder> leaderboardsBuilder_;

      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard> getLeaderboardsList() {
        if (leaderboardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(leaderboards_);
        } else {
          return leaderboardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public int getLeaderboardsCount() {
        if (leaderboardsBuilder_ == null) {
          return leaderboards_.size();
        } else {
          return leaderboardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard getLeaderboards(int index) {
        if (leaderboardsBuilder_ == null) {
          return leaderboards_.get(index);
        } else {
          return leaderboardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder setLeaderboards(
          int index, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard value) {
        if (leaderboardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaderboardsIsMutable();
          leaderboards_.set(index, value);
          onChanged();
        } else {
          leaderboardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder setLeaderboards(
          int index, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder builderForValue) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.set(index, builderForValue.build());
          onChanged();
        } else {
          leaderboardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard value) {
        if (leaderboardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaderboardsIsMutable();
          leaderboards_.add(value);
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(
          int index, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard value) {
        if (leaderboardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeaderboardsIsMutable();
          leaderboards_.add(index, value);
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(
          MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder builderForValue) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.add(builderForValue.build());
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addLeaderboards(
          int index, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder builderForValue) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.add(index, builderForValue.build());
          onChanged();
        } else {
          leaderboardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder addAllLeaderboards(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard> values) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, leaderboards_);
          onChanged();
        } else {
          leaderboardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder clearLeaderboards() {
        if (leaderboardsBuilder_ == null) {
          leaderboards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          leaderboardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public Builder removeLeaderboards(int index) {
        if (leaderboardsBuilder_ == null) {
          ensureLeaderboardsIsMutable();
          leaderboards_.remove(index);
          onChanged();
        } else {
          leaderboardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder getLeaderboardsBuilder(
          int index) {
        return getLeaderboardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder getLeaderboardsOrBuilder(
          int index) {
        if (leaderboardsBuilder_ == null) {
          return leaderboards_.get(index);  } else {
          return leaderboardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder> 
           getLeaderboardsOrBuilderList() {
        if (leaderboardsBuilder_ != null) {
          return leaderboardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(leaderboards_);
        }
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder addLeaderboardsBuilder() {
        return getLeaderboardsFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder addLeaderboardsBuilder(
          int index) {
        return getLeaderboardsFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgGCPlayerInfo.RegionLeaderboard leaderboards = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder> 
           getLeaderboardsBuilderList() {
        return getLeaderboardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder> 
          getLeaderboardsFieldBuilder() {
        if (leaderboardsBuilder_ == null) {
          leaderboardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboard.Builder, MsgGCClientFantasy.CMsgGCPlayerInfo.RegionLeaderboardOrBuilder>(
                  leaderboards_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          leaderboards_ = null;
        }
        return leaderboardsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgGCPlayerInfo)
    }

    // @@protoc_insertion_point(class_scope:CMsgGCPlayerInfo)
    private static final MsgGCClientFantasy.CMsgGCPlayerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgGCPlayerInfo();
    }

    public static MsgGCClientFantasy.CMsgGCPlayerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgGCPlayerInfo>
        PARSER = new com.google.protobuf.AbstractParser<CMsgGCPlayerInfo>() {
      public CMsgGCPlayerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgGCPlayerInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgGCPlayerInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCPlayerInfo> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgGCPlayerInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTACreateFantasyLeagueRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTACreateFantasyLeagueRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string league_name = 1;</code>
     */
    boolean hasLeagueName();
    /**
     * <code>optional string league_name = 1;</code>
     */
    java.lang.String getLeagueName();
    /**
     * <code>optional string league_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getLeagueNameBytes();

    /**
     * <code>optional uint64 league_logo = 2;</code>
     */
    boolean hasLeagueLogo();
    /**
     * <code>optional uint64 league_logo = 2;</code>
     */
    long getLeagueLogo();

    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
     */
    boolean hasSelectionMode();
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
     */
    MsgSharedEnums.Fantasy_Selection_Mode getSelectionMode();

    /**
     * <code>optional uint32 team_count = 4;</code>
     */
    boolean hasTeamCount();
    /**
     * <code>optional uint32 team_count = 4;</code>
     */
    int getTeamCount();
  }
  /**
   * Protobuf type {@code CMsgDOTACreateFantasyLeagueRequest}
   */
  public  static final class CMsgDOTACreateFantasyLeagueRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTACreateFantasyLeagueRequest)
      CMsgDOTACreateFantasyLeagueRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTACreateFantasyLeagueRequest.newBuilder() to construct.
    private CMsgDOTACreateFantasyLeagueRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTACreateFantasyLeagueRequest() {
      leagueName_ = "";
      leagueLogo_ = 0L;
      selectionMode_ = 0;
      teamCount_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTACreateFantasyLeagueRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              leagueName_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              leagueLogo_ = input.readUInt64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              MsgSharedEnums.Fantasy_Selection_Mode value = MsgSharedEnums.Fantasy_Selection_Mode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                selectionMode_ = rawValue;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              teamCount_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTACreateFantasyLeagueRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest.class, MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest.Builder.class);
    }

    private int bitField0_;
    public static final int LEAGUE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object leagueName_;
    /**
     * <code>optional string league_name = 1;</code>
     */
    public boolean hasLeagueName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string league_name = 1;</code>
     */
    public java.lang.String getLeagueName() {
      java.lang.Object ref = leagueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          leagueName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string league_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLeagueNameBytes() {
      java.lang.Object ref = leagueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        leagueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEAGUE_LOGO_FIELD_NUMBER = 2;
    private long leagueLogo_;
    /**
     * <code>optional uint64 league_logo = 2;</code>
     */
    public boolean hasLeagueLogo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 league_logo = 2;</code>
     */
    public long getLeagueLogo() {
      return leagueLogo_;
    }

    public static final int SELECTION_MODE_FIELD_NUMBER = 3;
    private int selectionMode_;
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
     */
    public boolean hasSelectionMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
     */
    public MsgSharedEnums.Fantasy_Selection_Mode getSelectionMode() {
      MsgSharedEnums.Fantasy_Selection_Mode result = MsgSharedEnums.Fantasy_Selection_Mode.valueOf(selectionMode_);
      return result == null ? MsgSharedEnums.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID : result;
    }

    public static final int TEAM_COUNT_FIELD_NUMBER = 4;
    private int teamCount_;
    /**
     * <code>optional uint32 team_count = 4;</code>
     */
    public boolean hasTeamCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 team_count = 4;</code>
     */
    public int getTeamCount() {
      return teamCount_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, leagueName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, leagueLogo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, selectionMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, teamCount_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, leagueName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, leagueLogo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, selectionMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, teamCount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest other = (MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest) obj;

      boolean result = true;
      result = result && (hasLeagueName() == other.hasLeagueName());
      if (hasLeagueName()) {
        result = result && getLeagueName()
            .equals(other.getLeagueName());
      }
      result = result && (hasLeagueLogo() == other.hasLeagueLogo());
      if (hasLeagueLogo()) {
        result = result && (getLeagueLogo()
            == other.getLeagueLogo());
      }
      result = result && (hasSelectionMode() == other.hasSelectionMode());
      if (hasSelectionMode()) {
        result = result && selectionMode_ == other.selectionMode_;
      }
      result = result && (hasTeamCount() == other.hasTeamCount());
      if (hasTeamCount()) {
        result = result && (getTeamCount()
            == other.getTeamCount());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLeagueName()) {
        hash = (37 * hash) + LEAGUE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getLeagueName().hashCode();
      }
      if (hasLeagueLogo()) {
        hash = (37 * hash) + LEAGUE_LOGO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLeagueLogo());
      }
      if (hasSelectionMode()) {
        hash = (37 * hash) + SELECTION_MODE_FIELD_NUMBER;
        hash = (53 * hash) + selectionMode_;
      }
      if (hasTeamCount()) {
        hash = (37 * hash) + TEAM_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getTeamCount();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTACreateFantasyLeagueRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTACreateFantasyLeagueRequest)
        MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTACreateFantasyLeagueRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest.class, MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        leagueName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        selectionMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        teamCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest build() {
        MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest result = new MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.leagueName_ = leagueName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.leagueLogo_ = leagueLogo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.selectionMode_ = selectionMode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamCount_ = teamCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest.getDefaultInstance()) return this;
        if (other.hasLeagueName()) {
          bitField0_ |= 0x00000001;
          leagueName_ = other.leagueName_;
          onChanged();
        }
        if (other.hasLeagueLogo()) {
          setLeagueLogo(other.getLeagueLogo());
        }
        if (other.hasSelectionMode()) {
          setSelectionMode(other.getSelectionMode());
        }
        if (other.hasTeamCount()) {
          setTeamCount(other.getTeamCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object leagueName_ = "";
      /**
       * <code>optional string league_name = 1;</code>
       */
      public boolean hasLeagueName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string league_name = 1;</code>
       */
      public java.lang.String getLeagueName() {
        java.lang.Object ref = leagueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            leagueName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string league_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLeagueNameBytes() {
        java.lang.Object ref = leagueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          leagueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string league_name = 1;</code>
       */
      public Builder setLeagueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        leagueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string league_name = 1;</code>
       */
      public Builder clearLeagueName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueName_ = getDefaultInstance().getLeagueName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string league_name = 1;</code>
       */
      public Builder setLeagueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        leagueName_ = value;
        onChanged();
        return this;
      }

      private long leagueLogo_ ;
      /**
       * <code>optional uint64 league_logo = 2;</code>
       */
      public boolean hasLeagueLogo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 league_logo = 2;</code>
       */
      public long getLeagueLogo() {
        return leagueLogo_;
      }
      /**
       * <code>optional uint64 league_logo = 2;</code>
       */
      public Builder setLeagueLogo(long value) {
        bitField0_ |= 0x00000002;
        leagueLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 league_logo = 2;</code>
       */
      public Builder clearLeagueLogo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        leagueLogo_ = 0L;
        onChanged();
        return this;
      }

      private int selectionMode_ = 0;
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public boolean hasSelectionMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public MsgSharedEnums.Fantasy_Selection_Mode getSelectionMode() {
        MsgSharedEnums.Fantasy_Selection_Mode result = MsgSharedEnums.Fantasy_Selection_Mode.valueOf(selectionMode_);
        return result == null ? MsgSharedEnums.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID : result;
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public Builder setSelectionMode(MsgSharedEnums.Fantasy_Selection_Mode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        selectionMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 3 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public Builder clearSelectionMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        selectionMode_ = 0;
        onChanged();
        return this;
      }

      private int teamCount_ ;
      /**
       * <code>optional uint32 team_count = 4;</code>
       */
      public boolean hasTeamCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 team_count = 4;</code>
       */
      public int getTeamCount() {
        return teamCount_;
      }
      /**
       * <code>optional uint32 team_count = 4;</code>
       */
      public Builder setTeamCount(int value) {
        bitField0_ |= 0x00000008;
        teamCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_count = 4;</code>
       */
      public Builder clearTeamCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamCount_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTACreateFantasyLeagueRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTACreateFantasyLeagueRequest)
    private static final MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTACreateFantasyLeagueRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTACreateFantasyLeagueRequest>() {
      public CMsgDOTACreateFantasyLeagueRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTACreateFantasyLeagueRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTACreateFantasyLeagueRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTACreateFantasyLeagueRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTACreateFantasyLeagueResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTACreateFantasyLeagueResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTACreateFantasyLeagueResponse}
   */
  public  static final class CMsgDOTACreateFantasyLeagueResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTACreateFantasyLeagueResponse)
      CMsgDOTACreateFantasyLeagueResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTACreateFantasyLeagueResponse.newBuilder() to construct.
    private CMsgDOTACreateFantasyLeagueResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTACreateFantasyLeagueResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTACreateFantasyLeagueResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult value = MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTACreateFantasyLeagueResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.class, MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTACreateFantasyLeagueResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_TOO_MANY_LEAGUES = 2;</code>
       */
      ERROR_TOO_MANY_LEAGUES(2),
      /**
       * <code>ERROR_INVALID_TEAM_COUNT = 3;</code>
       */
      ERROR_INVALID_TEAM_COUNT(3),
      /**
       * <code>ERROR_CREATION_DISABLED = 4;</code>
       */
      ERROR_CREATION_DISABLED(4),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_TOO_MANY_LEAGUES = 2;</code>
       */
      public static final int ERROR_TOO_MANY_LEAGUES_VALUE = 2;
      /**
       * <code>ERROR_INVALID_TEAM_COUNT = 3;</code>
       */
      public static final int ERROR_INVALID_TEAM_COUNT_VALUE = 3;
      /**
       * <code>ERROR_CREATION_DISABLED = 4;</code>
       */
      public static final int ERROR_CREATION_DISABLED_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_TOO_MANY_LEAGUES;
          case 3: return ERROR_INVALID_TEAM_COUNT;
          case 4: return ERROR_CREATION_DISABLED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTACreateFantasyLeagueResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult result = MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse other = (MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTACreateFantasyLeagueResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTACreateFantasyLeagueResponse)
        MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTACreateFantasyLeagueResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.class, MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse build() {
        MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse result = new MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult result = MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTACreateFantasyLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTACreateFantasyLeagueResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTACreateFantasyLeagueResponse)
    private static final MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTACreateFantasyLeagueResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTACreateFantasyLeagueResponse>() {
      public CMsgDOTACreateFantasyLeagueResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTACreateFantasyLeagueResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTACreateFantasyLeagueResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTACreateFantasyLeagueResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTACreateFantasyLeagueResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgFantasyLeagueScoringOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgFantasyLeagueScoring)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float level = 1;</code>
     */
    boolean hasLevel();
    /**
     * <code>optional float level = 1;</code>
     */
    float getLevel();

    /**
     * <code>optional float kills = 2;</code>
     */
    boolean hasKills();
    /**
     * <code>optional float kills = 2;</code>
     */
    float getKills();

    /**
     * <code>optional float deaths = 3;</code>
     */
    boolean hasDeaths();
    /**
     * <code>optional float deaths = 3;</code>
     */
    float getDeaths();

    /**
     * <code>optional float assists = 4;</code>
     */
    boolean hasAssists();
    /**
     * <code>optional float assists = 4;</code>
     */
    float getAssists();

    /**
     * <code>optional float last_hits = 5;</code>
     */
    boolean hasLastHits();
    /**
     * <code>optional float last_hits = 5;</code>
     */
    float getLastHits();

    /**
     * <code>optional float denies = 6;</code>
     */
    boolean hasDenies();
    /**
     * <code>optional float denies = 6;</code>
     */
    float getDenies();

    /**
     * <code>optional float gpm = 7;</code>
     */
    boolean hasGpm();
    /**
     * <code>optional float gpm = 7;</code>
     */
    float getGpm();

    /**
     * <code>optional float xppm = 8;</code>
     */
    boolean hasXppm();
    /**
     * <code>optional float xppm = 8;</code>
     */
    float getXppm();

    /**
     * <code>optional float stuns = 9;</code>
     */
    boolean hasStuns();
    /**
     * <code>optional float stuns = 9;</code>
     */
    float getStuns();

    /**
     * <code>optional float healing = 10;</code>
     */
    boolean hasHealing();
    /**
     * <code>optional float healing = 10;</code>
     */
    float getHealing();

    /**
     * <code>optional float tower_kills = 11;</code>
     */
    boolean hasTowerKills();
    /**
     * <code>optional float tower_kills = 11;</code>
     */
    float getTowerKills();

    /**
     * <code>optional float roshan_kills = 12;</code>
     */
    boolean hasRoshanKills();
    /**
     * <code>optional float roshan_kills = 12;</code>
     */
    float getRoshanKills();

    /**
     * <code>optional float multiplier_premium = 13;</code>
     */
    boolean hasMultiplierPremium();
    /**
     * <code>optional float multiplier_premium = 13;</code>
     */
    float getMultiplierPremium();

    /**
     * <code>optional float multiplier_professional = 14;</code>
     */
    boolean hasMultiplierProfessional();
    /**
     * <code>optional float multiplier_professional = 14;</code>
     */
    float getMultiplierProfessional();
  }
  /**
   * Protobuf type {@code CMsgFantasyLeagueScoring}
   */
  public  static final class CMsgFantasyLeagueScoring extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgFantasyLeagueScoring)
      CMsgFantasyLeagueScoringOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgFantasyLeagueScoring.newBuilder() to construct.
    private CMsgFantasyLeagueScoring(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgFantasyLeagueScoring() {
      level_ = 0F;
      kills_ = 0F;
      deaths_ = 0F;
      assists_ = 0F;
      lastHits_ = 0F;
      denies_ = 0F;
      gpm_ = 0F;
      xppm_ = 0F;
      stuns_ = 0F;
      healing_ = 0F;
      towerKills_ = 0F;
      roshanKills_ = 0F;
      multiplierPremium_ = 0F;
      multiplierProfessional_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgFantasyLeagueScoring(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              level_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              kills_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              deaths_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              assists_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              lastHits_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              denies_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              gpm_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              xppm_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              stuns_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              healing_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              towerKills_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              roshanKills_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              multiplierPremium_ = input.readFloat();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              multiplierProfessional_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgFantasyLeagueScoring_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgFantasyLeagueScoring_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgFantasyLeagueScoring.class, MsgGCClientFantasy.CMsgFantasyLeagueScoring.Builder.class);
    }

    private int bitField0_;
    public static final int LEVEL_FIELD_NUMBER = 1;
    private float level_;
    /**
     * <code>optional float level = 1;</code>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float level = 1;</code>
     */
    public float getLevel() {
      return level_;
    }

    public static final int KILLS_FIELD_NUMBER = 2;
    private float kills_;
    /**
     * <code>optional float kills = 2;</code>
     */
    public boolean hasKills() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float kills = 2;</code>
     */
    public float getKills() {
      return kills_;
    }

    public static final int DEATHS_FIELD_NUMBER = 3;
    private float deaths_;
    /**
     * <code>optional float deaths = 3;</code>
     */
    public boolean hasDeaths() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float deaths = 3;</code>
     */
    public float getDeaths() {
      return deaths_;
    }

    public static final int ASSISTS_FIELD_NUMBER = 4;
    private float assists_;
    /**
     * <code>optional float assists = 4;</code>
     */
    public boolean hasAssists() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float assists = 4;</code>
     */
    public float getAssists() {
      return assists_;
    }

    public static final int LAST_HITS_FIELD_NUMBER = 5;
    private float lastHits_;
    /**
     * <code>optional float last_hits = 5;</code>
     */
    public boolean hasLastHits() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float last_hits = 5;</code>
     */
    public float getLastHits() {
      return lastHits_;
    }

    public static final int DENIES_FIELD_NUMBER = 6;
    private float denies_;
    /**
     * <code>optional float denies = 6;</code>
     */
    public boolean hasDenies() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float denies = 6;</code>
     */
    public float getDenies() {
      return denies_;
    }

    public static final int GPM_FIELD_NUMBER = 7;
    private float gpm_;
    /**
     * <code>optional float gpm = 7;</code>
     */
    public boolean hasGpm() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float gpm = 7;</code>
     */
    public float getGpm() {
      return gpm_;
    }

    public static final int XPPM_FIELD_NUMBER = 8;
    private float xppm_;
    /**
     * <code>optional float xppm = 8;</code>
     */
    public boolean hasXppm() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float xppm = 8;</code>
     */
    public float getXppm() {
      return xppm_;
    }

    public static final int STUNS_FIELD_NUMBER = 9;
    private float stuns_;
    /**
     * <code>optional float stuns = 9;</code>
     */
    public boolean hasStuns() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float stuns = 9;</code>
     */
    public float getStuns() {
      return stuns_;
    }

    public static final int HEALING_FIELD_NUMBER = 10;
    private float healing_;
    /**
     * <code>optional float healing = 10;</code>
     */
    public boolean hasHealing() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float healing = 10;</code>
     */
    public float getHealing() {
      return healing_;
    }

    public static final int TOWER_KILLS_FIELD_NUMBER = 11;
    private float towerKills_;
    /**
     * <code>optional float tower_kills = 11;</code>
     */
    public boolean hasTowerKills() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float tower_kills = 11;</code>
     */
    public float getTowerKills() {
      return towerKills_;
    }

    public static final int ROSHAN_KILLS_FIELD_NUMBER = 12;
    private float roshanKills_;
    /**
     * <code>optional float roshan_kills = 12;</code>
     */
    public boolean hasRoshanKills() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float roshan_kills = 12;</code>
     */
    public float getRoshanKills() {
      return roshanKills_;
    }

    public static final int MULTIPLIER_PREMIUM_FIELD_NUMBER = 13;
    private float multiplierPremium_;
    /**
     * <code>optional float multiplier_premium = 13;</code>
     */
    public boolean hasMultiplierPremium() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float multiplier_premium = 13;</code>
     */
    public float getMultiplierPremium() {
      return multiplierPremium_;
    }

    public static final int MULTIPLIER_PROFESSIONAL_FIELD_NUMBER = 14;
    private float multiplierProfessional_;
    /**
     * <code>optional float multiplier_professional = 14;</code>
     */
    public boolean hasMultiplierProfessional() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float multiplier_professional = 14;</code>
     */
    public float getMultiplierProfessional() {
      return multiplierProfessional_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, kills_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, deaths_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, assists_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, lastHits_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, denies_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, gpm_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, xppm_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, stuns_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, healing_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, towerKills_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, roshanKills_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, multiplierPremium_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(14, multiplierProfessional_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, kills_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, deaths_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, assists_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, lastHits_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, denies_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, gpm_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, xppm_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, stuns_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, healing_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, towerKills_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, roshanKills_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, multiplierPremium_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, multiplierProfessional_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgFantasyLeagueScoring)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgFantasyLeagueScoring other = (MsgGCClientFantasy.CMsgFantasyLeagueScoring) obj;

      boolean result = true;
      result = result && (hasLevel() == other.hasLevel());
      if (hasLevel()) {
        result = result && (
            java.lang.Float.floatToIntBits(getLevel())
            == java.lang.Float.floatToIntBits(
                other.getLevel()));
      }
      result = result && (hasKills() == other.hasKills());
      if (hasKills()) {
        result = result && (
            java.lang.Float.floatToIntBits(getKills())
            == java.lang.Float.floatToIntBits(
                other.getKills()));
      }
      result = result && (hasDeaths() == other.hasDeaths());
      if (hasDeaths()) {
        result = result && (
            java.lang.Float.floatToIntBits(getDeaths())
            == java.lang.Float.floatToIntBits(
                other.getDeaths()));
      }
      result = result && (hasAssists() == other.hasAssists());
      if (hasAssists()) {
        result = result && (
            java.lang.Float.floatToIntBits(getAssists())
            == java.lang.Float.floatToIntBits(
                other.getAssists()));
      }
      result = result && (hasLastHits() == other.hasLastHits());
      if (hasLastHits()) {
        result = result && (
            java.lang.Float.floatToIntBits(getLastHits())
            == java.lang.Float.floatToIntBits(
                other.getLastHits()));
      }
      result = result && (hasDenies() == other.hasDenies());
      if (hasDenies()) {
        result = result && (
            java.lang.Float.floatToIntBits(getDenies())
            == java.lang.Float.floatToIntBits(
                other.getDenies()));
      }
      result = result && (hasGpm() == other.hasGpm());
      if (hasGpm()) {
        result = result && (
            java.lang.Float.floatToIntBits(getGpm())
            == java.lang.Float.floatToIntBits(
                other.getGpm()));
      }
      result = result && (hasXppm() == other.hasXppm());
      if (hasXppm()) {
        result = result && (
            java.lang.Float.floatToIntBits(getXppm())
            == java.lang.Float.floatToIntBits(
                other.getXppm()));
      }
      result = result && (hasStuns() == other.hasStuns());
      if (hasStuns()) {
        result = result && (
            java.lang.Float.floatToIntBits(getStuns())
            == java.lang.Float.floatToIntBits(
                other.getStuns()));
      }
      result = result && (hasHealing() == other.hasHealing());
      if (hasHealing()) {
        result = result && (
            java.lang.Float.floatToIntBits(getHealing())
            == java.lang.Float.floatToIntBits(
                other.getHealing()));
      }
      result = result && (hasTowerKills() == other.hasTowerKills());
      if (hasTowerKills()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTowerKills())
            == java.lang.Float.floatToIntBits(
                other.getTowerKills()));
      }
      result = result && (hasRoshanKills() == other.hasRoshanKills());
      if (hasRoshanKills()) {
        result = result && (
            java.lang.Float.floatToIntBits(getRoshanKills())
            == java.lang.Float.floatToIntBits(
                other.getRoshanKills()));
      }
      result = result && (hasMultiplierPremium() == other.hasMultiplierPremium());
      if (hasMultiplierPremium()) {
        result = result && (
            java.lang.Float.floatToIntBits(getMultiplierPremium())
            == java.lang.Float.floatToIntBits(
                other.getMultiplierPremium()));
      }
      result = result && (hasMultiplierProfessional() == other.hasMultiplierProfessional());
      if (hasMultiplierProfessional()) {
        result = result && (
            java.lang.Float.floatToIntBits(getMultiplierProfessional())
            == java.lang.Float.floatToIntBits(
                other.getMultiplierProfessional()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLevel()) {
        hash = (37 * hash) + LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLevel());
      }
      if (hasKills()) {
        hash = (37 * hash) + KILLS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getKills());
      }
      if (hasDeaths()) {
        hash = (37 * hash) + DEATHS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDeaths());
      }
      if (hasAssists()) {
        hash = (37 * hash) + ASSISTS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAssists());
      }
      if (hasLastHits()) {
        hash = (37 * hash) + LAST_HITS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLastHits());
      }
      if (hasDenies()) {
        hash = (37 * hash) + DENIES_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDenies());
      }
      if (hasGpm()) {
        hash = (37 * hash) + GPM_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getGpm());
      }
      if (hasXppm()) {
        hash = (37 * hash) + XPPM_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getXppm());
      }
      if (hasStuns()) {
        hash = (37 * hash) + STUNS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getStuns());
      }
      if (hasHealing()) {
        hash = (37 * hash) + HEALING_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getHealing());
      }
      if (hasTowerKills()) {
        hash = (37 * hash) + TOWER_KILLS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTowerKills());
      }
      if (hasRoshanKills()) {
        hash = (37 * hash) + ROSHAN_KILLS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRoshanKills());
      }
      if (hasMultiplierPremium()) {
        hash = (37 * hash) + MULTIPLIER_PREMIUM_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMultiplierPremium());
      }
      if (hasMultiplierProfessional()) {
        hash = (37 * hash) + MULTIPLIER_PROFESSIONAL_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMultiplierProfessional());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgFantasyLeagueScoring prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgFantasyLeagueScoring}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgFantasyLeagueScoring)
        MsgGCClientFantasy.CMsgFantasyLeagueScoringOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgFantasyLeagueScoring_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgFantasyLeagueScoring_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgFantasyLeagueScoring.class, MsgGCClientFantasy.CMsgFantasyLeagueScoring.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgFantasyLeagueScoring.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        level_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        kills_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        deaths_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        assists_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        lastHits_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        denies_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        gpm_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        xppm_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        stuns_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        healing_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        towerKills_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        roshanKills_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        multiplierPremium_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        multiplierProfessional_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgFantasyLeagueScoring_descriptor;
      }

      public MsgGCClientFantasy.CMsgFantasyLeagueScoring getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgFantasyLeagueScoring.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgFantasyLeagueScoring build() {
        MsgGCClientFantasy.CMsgFantasyLeagueScoring result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgFantasyLeagueScoring buildPartial() {
        MsgGCClientFantasy.CMsgFantasyLeagueScoring result = new MsgGCClientFantasy.CMsgFantasyLeagueScoring(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.kills_ = kills_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.deaths_ = deaths_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.assists_ = assists_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lastHits_ = lastHits_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.denies_ = denies_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gpm_ = gpm_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.xppm_ = xppm_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.stuns_ = stuns_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.healing_ = healing_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.towerKills_ = towerKills_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.roshanKills_ = roshanKills_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.multiplierPremium_ = multiplierPremium_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.multiplierProfessional_ = multiplierProfessional_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgFantasyLeagueScoring) {
          return mergeFrom((MsgGCClientFantasy.CMsgFantasyLeagueScoring)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgFantasyLeagueScoring other) {
        if (other == MsgGCClientFantasy.CMsgFantasyLeagueScoring.getDefaultInstance()) return this;
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasKills()) {
          setKills(other.getKills());
        }
        if (other.hasDeaths()) {
          setDeaths(other.getDeaths());
        }
        if (other.hasAssists()) {
          setAssists(other.getAssists());
        }
        if (other.hasLastHits()) {
          setLastHits(other.getLastHits());
        }
        if (other.hasDenies()) {
          setDenies(other.getDenies());
        }
        if (other.hasGpm()) {
          setGpm(other.getGpm());
        }
        if (other.hasXppm()) {
          setXppm(other.getXppm());
        }
        if (other.hasStuns()) {
          setStuns(other.getStuns());
        }
        if (other.hasHealing()) {
          setHealing(other.getHealing());
        }
        if (other.hasTowerKills()) {
          setTowerKills(other.getTowerKills());
        }
        if (other.hasRoshanKills()) {
          setRoshanKills(other.getRoshanKills());
        }
        if (other.hasMultiplierPremium()) {
          setMultiplierPremium(other.getMultiplierPremium());
        }
        if (other.hasMultiplierProfessional()) {
          setMultiplierProfessional(other.getMultiplierProfessional());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgFantasyLeagueScoring parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgFantasyLeagueScoring) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float level_ ;
      /**
       * <code>optional float level = 1;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float level = 1;</code>
       */
      public float getLevel() {
        return level_;
      }
      /**
       * <code>optional float level = 1;</code>
       */
      public Builder setLevel(float value) {
        bitField0_ |= 0x00000001;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float level = 1;</code>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0F;
        onChanged();
        return this;
      }

      private float kills_ ;
      /**
       * <code>optional float kills = 2;</code>
       */
      public boolean hasKills() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float kills = 2;</code>
       */
      public float getKills() {
        return kills_;
      }
      /**
       * <code>optional float kills = 2;</code>
       */
      public Builder setKills(float value) {
        bitField0_ |= 0x00000002;
        kills_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float kills = 2;</code>
       */
      public Builder clearKills() {
        bitField0_ = (bitField0_ & ~0x00000002);
        kills_ = 0F;
        onChanged();
        return this;
      }

      private float deaths_ ;
      /**
       * <code>optional float deaths = 3;</code>
       */
      public boolean hasDeaths() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float deaths = 3;</code>
       */
      public float getDeaths() {
        return deaths_;
      }
      /**
       * <code>optional float deaths = 3;</code>
       */
      public Builder setDeaths(float value) {
        bitField0_ |= 0x00000004;
        deaths_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float deaths = 3;</code>
       */
      public Builder clearDeaths() {
        bitField0_ = (bitField0_ & ~0x00000004);
        deaths_ = 0F;
        onChanged();
        return this;
      }

      private float assists_ ;
      /**
       * <code>optional float assists = 4;</code>
       */
      public boolean hasAssists() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float assists = 4;</code>
       */
      public float getAssists() {
        return assists_;
      }
      /**
       * <code>optional float assists = 4;</code>
       */
      public Builder setAssists(float value) {
        bitField0_ |= 0x00000008;
        assists_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float assists = 4;</code>
       */
      public Builder clearAssists() {
        bitField0_ = (bitField0_ & ~0x00000008);
        assists_ = 0F;
        onChanged();
        return this;
      }

      private float lastHits_ ;
      /**
       * <code>optional float last_hits = 5;</code>
       */
      public boolean hasLastHits() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float last_hits = 5;</code>
       */
      public float getLastHits() {
        return lastHits_;
      }
      /**
       * <code>optional float last_hits = 5;</code>
       */
      public Builder setLastHits(float value) {
        bitField0_ |= 0x00000010;
        lastHits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float last_hits = 5;</code>
       */
      public Builder clearLastHits() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lastHits_ = 0F;
        onChanged();
        return this;
      }

      private float denies_ ;
      /**
       * <code>optional float denies = 6;</code>
       */
      public boolean hasDenies() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float denies = 6;</code>
       */
      public float getDenies() {
        return denies_;
      }
      /**
       * <code>optional float denies = 6;</code>
       */
      public Builder setDenies(float value) {
        bitField0_ |= 0x00000020;
        denies_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float denies = 6;</code>
       */
      public Builder clearDenies() {
        bitField0_ = (bitField0_ & ~0x00000020);
        denies_ = 0F;
        onChanged();
        return this;
      }

      private float gpm_ ;
      /**
       * <code>optional float gpm = 7;</code>
       */
      public boolean hasGpm() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float gpm = 7;</code>
       */
      public float getGpm() {
        return gpm_;
      }
      /**
       * <code>optional float gpm = 7;</code>
       */
      public Builder setGpm(float value) {
        bitField0_ |= 0x00000040;
        gpm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float gpm = 7;</code>
       */
      public Builder clearGpm() {
        bitField0_ = (bitField0_ & ~0x00000040);
        gpm_ = 0F;
        onChanged();
        return this;
      }

      private float xppm_ ;
      /**
       * <code>optional float xppm = 8;</code>
       */
      public boolean hasXppm() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float xppm = 8;</code>
       */
      public float getXppm() {
        return xppm_;
      }
      /**
       * <code>optional float xppm = 8;</code>
       */
      public Builder setXppm(float value) {
        bitField0_ |= 0x00000080;
        xppm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float xppm = 8;</code>
       */
      public Builder clearXppm() {
        bitField0_ = (bitField0_ & ~0x00000080);
        xppm_ = 0F;
        onChanged();
        return this;
      }

      private float stuns_ ;
      /**
       * <code>optional float stuns = 9;</code>
       */
      public boolean hasStuns() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float stuns = 9;</code>
       */
      public float getStuns() {
        return stuns_;
      }
      /**
       * <code>optional float stuns = 9;</code>
       */
      public Builder setStuns(float value) {
        bitField0_ |= 0x00000100;
        stuns_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float stuns = 9;</code>
       */
      public Builder clearStuns() {
        bitField0_ = (bitField0_ & ~0x00000100);
        stuns_ = 0F;
        onChanged();
        return this;
      }

      private float healing_ ;
      /**
       * <code>optional float healing = 10;</code>
       */
      public boolean hasHealing() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float healing = 10;</code>
       */
      public float getHealing() {
        return healing_;
      }
      /**
       * <code>optional float healing = 10;</code>
       */
      public Builder setHealing(float value) {
        bitField0_ |= 0x00000200;
        healing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float healing = 10;</code>
       */
      public Builder clearHealing() {
        bitField0_ = (bitField0_ & ~0x00000200);
        healing_ = 0F;
        onChanged();
        return this;
      }

      private float towerKills_ ;
      /**
       * <code>optional float tower_kills = 11;</code>
       */
      public boolean hasTowerKills() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float tower_kills = 11;</code>
       */
      public float getTowerKills() {
        return towerKills_;
      }
      /**
       * <code>optional float tower_kills = 11;</code>
       */
      public Builder setTowerKills(float value) {
        bitField0_ |= 0x00000400;
        towerKills_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tower_kills = 11;</code>
       */
      public Builder clearTowerKills() {
        bitField0_ = (bitField0_ & ~0x00000400);
        towerKills_ = 0F;
        onChanged();
        return this;
      }

      private float roshanKills_ ;
      /**
       * <code>optional float roshan_kills = 12;</code>
       */
      public boolean hasRoshanKills() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float roshan_kills = 12;</code>
       */
      public float getRoshanKills() {
        return roshanKills_;
      }
      /**
       * <code>optional float roshan_kills = 12;</code>
       */
      public Builder setRoshanKills(float value) {
        bitField0_ |= 0x00000800;
        roshanKills_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float roshan_kills = 12;</code>
       */
      public Builder clearRoshanKills() {
        bitField0_ = (bitField0_ & ~0x00000800);
        roshanKills_ = 0F;
        onChanged();
        return this;
      }

      private float multiplierPremium_ ;
      /**
       * <code>optional float multiplier_premium = 13;</code>
       */
      public boolean hasMultiplierPremium() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float multiplier_premium = 13;</code>
       */
      public float getMultiplierPremium() {
        return multiplierPremium_;
      }
      /**
       * <code>optional float multiplier_premium = 13;</code>
       */
      public Builder setMultiplierPremium(float value) {
        bitField0_ |= 0x00001000;
        multiplierPremium_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float multiplier_premium = 13;</code>
       */
      public Builder clearMultiplierPremium() {
        bitField0_ = (bitField0_ & ~0x00001000);
        multiplierPremium_ = 0F;
        onChanged();
        return this;
      }

      private float multiplierProfessional_ ;
      /**
       * <code>optional float multiplier_professional = 14;</code>
       */
      public boolean hasMultiplierProfessional() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float multiplier_professional = 14;</code>
       */
      public float getMultiplierProfessional() {
        return multiplierProfessional_;
      }
      /**
       * <code>optional float multiplier_professional = 14;</code>
       */
      public Builder setMultiplierProfessional(float value) {
        bitField0_ |= 0x00002000;
        multiplierProfessional_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float multiplier_professional = 14;</code>
       */
      public Builder clearMultiplierProfessional() {
        bitField0_ = (bitField0_ & ~0x00002000);
        multiplierProfessional_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgFantasyLeagueScoring)
    }

    // @@protoc_insertion_point(class_scope:CMsgFantasyLeagueScoring)
    private static final MsgGCClientFantasy.CMsgFantasyLeagueScoring DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgFantasyLeagueScoring();
    }

    public static MsgGCClientFantasy.CMsgFantasyLeagueScoring getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgFantasyLeagueScoring>
        PARSER = new com.google.protobuf.AbstractParser<CMsgFantasyLeagueScoring>() {
      public CMsgFantasyLeagueScoring parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgFantasyLeagueScoring(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgFantasyLeagueScoring> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgFantasyLeagueScoring> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgFantasyLeagueScoring getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 commissioner_account_id = 2;</code>
     */
    boolean hasCommissionerAccountId();
    /**
     * <code>optional uint32 commissioner_account_id = 2;</code>
     */
    int getCommissionerAccountId();

    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    boolean hasFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    java.lang.String getFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getFantasyLeagueNameBytes();

    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
     */
    boolean hasSelectionMode();
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
     */
    MsgSharedEnums.Fantasy_Selection_Mode getSelectionMode();

    /**
     * <code>optional uint32 team_count = 5;</code>
     */
    boolean hasTeamCount();
    /**
     * <code>optional uint32 team_count = 5;</code>
     */
    int getTeamCount();

    /**
     * <code>optional uint64 logo = 6;</code>
     */
    boolean hasLogo();
    /**
     * <code>optional uint64 logo = 6;</code>
     */
    long getLogo();

    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    boolean hasScoring();
    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    MsgGCClientFantasy.CMsgFantasyLeagueScoring getScoring();
    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    MsgGCClientFantasy.CMsgFantasyLeagueScoringOrBuilder getScoringOrBuilder();

    /**
     * <code>optional uint32 draft_time = 12;</code>
     */
    boolean hasDraftTime();
    /**
     * <code>optional uint32 draft_time = 12;</code>
     */
    int getDraftTime();

    /**
     * <code>optional uint32 draft_pick_time = 13;</code>
     */
    boolean hasDraftPickTime();
    /**
     * <code>optional uint32 draft_pick_time = 13;</code>
     */
    int getDraftPickTime();

    /**
     * <code>optional uint32 season_start = 15;</code>
     */
    boolean hasSeasonStart();
    /**
     * <code>optional uint32 season_start = 15;</code>
     */
    int getSeasonStart();

    /**
     * <code>optional uint32 season_length = 16;</code>
     */
    boolean hasSeasonLength();
    /**
     * <code>optional uint32 season_length = 16;</code>
     */
    int getSeasonLength();

    /**
     * <code>optional uint32 veto_votes = 17;</code>
     */
    boolean hasVetoVotes();
    /**
     * <code>optional uint32 veto_votes = 17;</code>
     */
    int getVetoVotes();

    /**
     * <code>optional uint32 acquisitions = 18;</code>
     */
    boolean hasAcquisitions();
    /**
     * <code>optional uint32 acquisitions = 18;</code>
     */
    int getAcquisitions();

    /**
     * <code>optional uint32 slot_1 = 19;</code>
     */
    boolean hasSlot1();
    /**
     * <code>optional uint32 slot_1 = 19;</code>
     */
    int getSlot1();

    /**
     * <code>optional uint32 slot_2 = 20;</code>
     */
    boolean hasSlot2();
    /**
     * <code>optional uint32 slot_2 = 20;</code>
     */
    int getSlot2();

    /**
     * <code>optional uint32 slot_3 = 21;</code>
     */
    boolean hasSlot3();
    /**
     * <code>optional uint32 slot_3 = 21;</code>
     */
    int getSlot3();

    /**
     * <code>optional uint32 slot_4 = 22;</code>
     */
    boolean hasSlot4();
    /**
     * <code>optional uint32 slot_4 = 22;</code>
     */
    int getSlot4();

    /**
     * <code>optional uint32 slot_5 = 23;</code>
     */
    boolean hasSlot5();
    /**
     * <code>optional uint32 slot_5 = 23;</code>
     */
    int getSlot5();

    /**
     * <code>optional uint32 bench_slots = 24;</code>
     */
    boolean hasBenchSlots();
    /**
     * <code>optional uint32 bench_slots = 24;</code>
     */
    int getBenchSlots();

    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> 
        getOwnerInfoList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo getOwnerInfo(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    int getOwnerInfoCount();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder> 
        getOwnerInfoOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder getOwnerInfoOrBuilder(
        int index);

    /**
     * <code>repeated uint32 players = 26;</code>
     */
    java.util.List<java.lang.Integer> getPlayersList();
    /**
     * <code>repeated uint32 players = 26;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated uint32 players = 26;</code>
     */
    int getPlayers(int index);

    /**
     * <code>optional uint32 time_zone = 27;</code>
     */
    boolean hasTimeZone();
    /**
     * <code>optional uint32 time_zone = 27;</code>
     */
    int getTimeZone();

    /**
     * <code>optional uint32 season = 28;</code>
     */
    boolean hasSeason();
    /**
     * <code>optional uint32 season = 28;</code>
     */
    int getSeason();

    /**
     * <code>optional string password = 29;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 29;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 29;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueInfo}
   */
  public  static final class CMsgDOTAFantasyLeagueInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueInfo)
      CMsgDOTAFantasyLeagueInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueInfo.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueInfo() {
      fantasyLeagueId_ = 0;
      commissionerAccountId_ = 0;
      fantasyLeagueName_ = "";
      selectionMode_ = 0;
      teamCount_ = 0;
      logo_ = 0L;
      draftTime_ = 0;
      draftPickTime_ = 0;
      seasonStart_ = 0;
      seasonLength_ = 0;
      vetoVotes_ = 0;
      acquisitions_ = 0;
      slot1_ = 0;
      slot2_ = 0;
      slot3_ = 0;
      slot4_ = 0;
      slot5_ = 0;
      benchSlots_ = 0;
      ownerInfo_ = java.util.Collections.emptyList();
      players_ = java.util.Collections.emptyList();
      timeZone_ = 0;
      season_ = 0;
      password_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              commissionerAccountId_ = input.readUInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              fantasyLeagueName_ = bs;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              MsgSharedEnums.Fantasy_Selection_Mode value = MsgSharedEnums.Fantasy_Selection_Mode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                selectionMode_ = rawValue;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              teamCount_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              logo_ = input.readUInt64();
              break;
            }
            case 58: {
              MsgGCClientFantasy.CMsgFantasyLeagueScoring.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = scoring_.toBuilder();
              }
              scoring_ = input.readMessage(MsgGCClientFantasy.CMsgFantasyLeagueScoring.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(scoring_);
                scoring_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              draftTime_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000100;
              draftPickTime_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000200;
              seasonStart_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000400;
              seasonLength_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00000800;
              vetoVotes_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00001000;
              acquisitions_ = input.readUInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00002000;
              slot1_ = input.readUInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00004000;
              slot2_ = input.readUInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00008000;
              slot3_ = input.readUInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00010000;
              slot4_ = input.readUInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00020000;
              slot5_ = input.readUInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00040000;
              benchSlots_ = input.readUInt32();
              break;
            }
            case 202: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                ownerInfo_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo>();
                mutable_bitField0_ |= 0x00080000;
              }
              ownerInfo_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.PARSER, extensionRegistry));
              break;
            }
            case 208: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                players_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              players_.add(input.readUInt32());
              break;
            }
            case 210: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                players_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                players_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 216: {
              bitField0_ |= 0x00080000;
              timeZone_ = input.readUInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x00100000;
              season_ = input.readUInt32();
              break;
            }
            case 234: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00200000;
              password_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          ownerInfo_ = java.util.Collections.unmodifiableList(ownerInfo_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.Builder.class);
    }

    public interface OwnerInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueInfo.OwnerInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      boolean hasOwnerAccountId();
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      int getOwnerAccountId();

      /**
       * <code>optional bool left_league = 2;</code>
       */
      boolean hasLeftLeague();
      /**
       * <code>optional bool left_league = 2;</code>
       */
      boolean getLeftLeague();

      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      java.util.List<java.lang.Integer> getPlayerAccountIdList();
      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      int getPlayerAccountIdCount();
      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      int getPlayerAccountId(int index);
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueInfo.OwnerInfo}
     */
    public  static final class OwnerInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueInfo.OwnerInfo)
        OwnerInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use OwnerInfo.newBuilder() to construct.
      private OwnerInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private OwnerInfo() {
        ownerAccountId_ = 0;
        leftLeague_ = false;
        playerAccountId_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private OwnerInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                ownerAccountId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                leftLeague_ = input.readBool();
                break;
              }
              case 24: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  playerAccountId_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                playerAccountId_.add(input.readUInt32());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  playerAccountId_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  playerAccountId_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            playerAccountId_ = java.util.Collections.unmodifiableList(playerAccountId_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder.class);
      }

      private int bitField0_;
      public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 1;
      private int ownerAccountId_;
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }

      public static final int LEFT_LEAGUE_FIELD_NUMBER = 2;
      private boolean leftLeague_;
      /**
       * <code>optional bool left_league = 2;</code>
       */
      public boolean hasLeftLeague() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool left_league = 2;</code>
       */
      public boolean getLeftLeague() {
        return leftLeague_;
      }

      public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Integer> playerAccountId_;
      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayerAccountIdList() {
        return playerAccountId_;
      }
      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      public int getPlayerAccountIdCount() {
        return playerAccountId_.size();
      }
      /**
       * <code>repeated uint32 player_account_id = 3;</code>
       */
      public int getPlayerAccountId(int index) {
        return playerAccountId_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, ownerAccountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, leftLeague_);
        }
        for (int i = 0; i < playerAccountId_.size(); i++) {
          output.writeUInt32(3, playerAccountId_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, ownerAccountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, leftLeague_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < playerAccountId_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(playerAccountId_.get(i));
          }
          size += dataSize;
          size += 1 * getPlayerAccountIdList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo) obj;

        boolean result = true;
        result = result && (hasOwnerAccountId() == other.hasOwnerAccountId());
        if (hasOwnerAccountId()) {
          result = result && (getOwnerAccountId()
              == other.getOwnerAccountId());
        }
        result = result && (hasLeftLeague() == other.hasLeftLeague());
        if (hasLeftLeague()) {
          result = result && (getLeftLeague()
              == other.getLeftLeague());
        }
        result = result && getPlayerAccountIdList()
            .equals(other.getPlayerAccountIdList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasOwnerAccountId()) {
          hash = (37 * hash) + OWNER_ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getOwnerAccountId();
        }
        if (hasLeftLeague()) {
          hash = (37 * hash) + LEFT_LEAGUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLeftLeague());
        }
        if (getPlayerAccountIdCount() > 0) {
          hash = (37 * hash) + PLAYER_ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerAccountIdList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyLeagueInfo.OwnerInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueInfo.OwnerInfo)
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          ownerAccountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          leftLeague_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          playerAccountId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo build() {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.ownerAccountId_ = ownerAccountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.leftLeague_ = leftLeague_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            playerAccountId_ = java.util.Collections.unmodifiableList(playerAccountId_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.playerAccountId_ = playerAccountId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.getDefaultInstance()) return this;
          if (other.hasOwnerAccountId()) {
            setOwnerAccountId(other.getOwnerAccountId());
          }
          if (other.hasLeftLeague()) {
            setLeftLeague(other.getLeftLeague());
          }
          if (!other.playerAccountId_.isEmpty()) {
            if (playerAccountId_.isEmpty()) {
              playerAccountId_ = other.playerAccountId_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayerAccountIdIsMutable();
              playerAccountId_.addAll(other.playerAccountId_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int ownerAccountId_ ;
        /**
         * <code>optional uint32 owner_account_id = 1;</code>
         */
        public boolean hasOwnerAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 owner_account_id = 1;</code>
         */
        public int getOwnerAccountId() {
          return ownerAccountId_;
        }
        /**
         * <code>optional uint32 owner_account_id = 1;</code>
         */
        public Builder setOwnerAccountId(int value) {
          bitField0_ |= 0x00000001;
          ownerAccountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id = 1;</code>
         */
        public Builder clearOwnerAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ownerAccountId_ = 0;
          onChanged();
          return this;
        }

        private boolean leftLeague_ ;
        /**
         * <code>optional bool left_league = 2;</code>
         */
        public boolean hasLeftLeague() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bool left_league = 2;</code>
         */
        public boolean getLeftLeague() {
          return leftLeague_;
        }
        /**
         * <code>optional bool left_league = 2;</code>
         */
        public Builder setLeftLeague(boolean value) {
          bitField0_ |= 0x00000002;
          leftLeague_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool left_league = 2;</code>
         */
        public Builder clearLeftLeague() {
          bitField0_ = (bitField0_ & ~0x00000002);
          leftLeague_ = false;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> playerAccountId_ = java.util.Collections.emptyList();
        private void ensurePlayerAccountIdIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            playerAccountId_ = new java.util.ArrayList<java.lang.Integer>(playerAccountId_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public java.util.List<java.lang.Integer>
            getPlayerAccountIdList() {
          return java.util.Collections.unmodifiableList(playerAccountId_);
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public int getPlayerAccountIdCount() {
          return playerAccountId_.size();
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public int getPlayerAccountId(int index) {
          return playerAccountId_.get(index);
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public Builder setPlayerAccountId(
            int index, int value) {
          ensurePlayerAccountIdIsMutable();
          playerAccountId_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public Builder addPlayerAccountId(int value) {
          ensurePlayerAccountIdIsMutable();
          playerAccountId_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public Builder addAllPlayerAccountId(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensurePlayerAccountIdIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerAccountId_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_account_id = 3;</code>
         */
        public Builder clearPlayerAccountId() {
          playerAccountId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueInfo.OwnerInfo)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueInfo.OwnerInfo)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<OwnerInfo>
          PARSER = new com.google.protobuf.AbstractParser<OwnerInfo>() {
        public OwnerInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new OwnerInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<OwnerInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<OwnerInfo> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int COMMISSIONER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int commissionerAccountId_;
    /**
     * <code>optional uint32 commissioner_account_id = 2;</code>
     */
    public boolean hasCommissionerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 commissioner_account_id = 2;</code>
     */
    public int getCommissionerAccountId() {
      return commissionerAccountId_;
    }

    public static final int FANTASY_LEAGUE_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object fantasyLeagueName_;
    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    public boolean hasFantasyLeagueName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    public java.lang.String getFantasyLeagueName() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fantasyLeagueName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fantasy_league_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFantasyLeagueNameBytes() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fantasyLeagueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SELECTION_MODE_FIELD_NUMBER = 4;
    private int selectionMode_;
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
     */
    public boolean hasSelectionMode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
     */
    public MsgSharedEnums.Fantasy_Selection_Mode getSelectionMode() {
      MsgSharedEnums.Fantasy_Selection_Mode result = MsgSharedEnums.Fantasy_Selection_Mode.valueOf(selectionMode_);
      return result == null ? MsgSharedEnums.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID : result;
    }

    public static final int TEAM_COUNT_FIELD_NUMBER = 5;
    private int teamCount_;
    /**
     * <code>optional uint32 team_count = 5;</code>
     */
    public boolean hasTeamCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 team_count = 5;</code>
     */
    public int getTeamCount() {
      return teamCount_;
    }

    public static final int LOGO_FIELD_NUMBER = 6;
    private long logo_;
    /**
     * <code>optional uint64 logo = 6;</code>
     */
    public boolean hasLogo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 logo = 6;</code>
     */
    public long getLogo() {
      return logo_;
    }

    public static final int SCORING_FIELD_NUMBER = 7;
    private MsgGCClientFantasy.CMsgFantasyLeagueScoring scoring_;
    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    public boolean hasScoring() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    public MsgGCClientFantasy.CMsgFantasyLeagueScoring getScoring() {
      return scoring_ == null ? MsgGCClientFantasy.CMsgFantasyLeagueScoring.getDefaultInstance() : scoring_;
    }
    /**
     * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
     */
    public MsgGCClientFantasy.CMsgFantasyLeagueScoringOrBuilder getScoringOrBuilder() {
      return scoring_ == null ? MsgGCClientFantasy.CMsgFantasyLeagueScoring.getDefaultInstance() : scoring_;
    }

    public static final int DRAFT_TIME_FIELD_NUMBER = 12;
    private int draftTime_;
    /**
     * <code>optional uint32 draft_time = 12;</code>
     */
    public boolean hasDraftTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 draft_time = 12;</code>
     */
    public int getDraftTime() {
      return draftTime_;
    }

    public static final int DRAFT_PICK_TIME_FIELD_NUMBER = 13;
    private int draftPickTime_;
    /**
     * <code>optional uint32 draft_pick_time = 13;</code>
     */
    public boolean hasDraftPickTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 draft_pick_time = 13;</code>
     */
    public int getDraftPickTime() {
      return draftPickTime_;
    }

    public static final int SEASON_START_FIELD_NUMBER = 15;
    private int seasonStart_;
    /**
     * <code>optional uint32 season_start = 15;</code>
     */
    public boolean hasSeasonStart() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 season_start = 15;</code>
     */
    public int getSeasonStart() {
      return seasonStart_;
    }

    public static final int SEASON_LENGTH_FIELD_NUMBER = 16;
    private int seasonLength_;
    /**
     * <code>optional uint32 season_length = 16;</code>
     */
    public boolean hasSeasonLength() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 season_length = 16;</code>
     */
    public int getSeasonLength() {
      return seasonLength_;
    }

    public static final int VETO_VOTES_FIELD_NUMBER = 17;
    private int vetoVotes_;
    /**
     * <code>optional uint32 veto_votes = 17;</code>
     */
    public boolean hasVetoVotes() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 veto_votes = 17;</code>
     */
    public int getVetoVotes() {
      return vetoVotes_;
    }

    public static final int ACQUISITIONS_FIELD_NUMBER = 18;
    private int acquisitions_;
    /**
     * <code>optional uint32 acquisitions = 18;</code>
     */
    public boolean hasAcquisitions() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 acquisitions = 18;</code>
     */
    public int getAcquisitions() {
      return acquisitions_;
    }

    public static final int SLOT_1_FIELD_NUMBER = 19;
    private int slot1_;
    /**
     * <code>optional uint32 slot_1 = 19;</code>
     */
    public boolean hasSlot1() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 slot_1 = 19;</code>
     */
    public int getSlot1() {
      return slot1_;
    }

    public static final int SLOT_2_FIELD_NUMBER = 20;
    private int slot2_;
    /**
     * <code>optional uint32 slot_2 = 20;</code>
     */
    public boolean hasSlot2() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 slot_2 = 20;</code>
     */
    public int getSlot2() {
      return slot2_;
    }

    public static final int SLOT_3_FIELD_NUMBER = 21;
    private int slot3_;
    /**
     * <code>optional uint32 slot_3 = 21;</code>
     */
    public boolean hasSlot3() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 slot_3 = 21;</code>
     */
    public int getSlot3() {
      return slot3_;
    }

    public static final int SLOT_4_FIELD_NUMBER = 22;
    private int slot4_;
    /**
     * <code>optional uint32 slot_4 = 22;</code>
     */
    public boolean hasSlot4() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 slot_4 = 22;</code>
     */
    public int getSlot4() {
      return slot4_;
    }

    public static final int SLOT_5_FIELD_NUMBER = 23;
    private int slot5_;
    /**
     * <code>optional uint32 slot_5 = 23;</code>
     */
    public boolean hasSlot5() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 slot_5 = 23;</code>
     */
    public int getSlot5() {
      return slot5_;
    }

    public static final int BENCH_SLOTS_FIELD_NUMBER = 24;
    private int benchSlots_;
    /**
     * <code>optional uint32 bench_slots = 24;</code>
     */
    public boolean hasBenchSlots() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint32 bench_slots = 24;</code>
     */
    public int getBenchSlots() {
      return benchSlots_;
    }

    public static final int OWNER_INFO_FIELD_NUMBER = 25;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> ownerInfo_;
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> getOwnerInfoList() {
      return ownerInfo_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder> 
        getOwnerInfoOrBuilderList() {
      return ownerInfo_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    public int getOwnerInfoCount() {
      return ownerInfo_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo getOwnerInfo(int index) {
      return ownerInfo_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder getOwnerInfoOrBuilder(
        int index) {
      return ownerInfo_.get(index);
    }

    public static final int PLAYERS_FIELD_NUMBER = 26;
    private java.util.List<java.lang.Integer> players_;
    /**
     * <code>repeated uint32 players = 26;</code>
     */
    public java.util.List<java.lang.Integer>
        getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated uint32 players = 26;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated uint32 players = 26;</code>
     */
    public int getPlayers(int index) {
      return players_.get(index);
    }

    public static final int TIME_ZONE_FIELD_NUMBER = 27;
    private int timeZone_;
    /**
     * <code>optional uint32 time_zone = 27;</code>
     */
    public boolean hasTimeZone() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint32 time_zone = 27;</code>
     */
    public int getTimeZone() {
      return timeZone_;
    }

    public static final int SEASON_FIELD_NUMBER = 28;
    private int season_;
    /**
     * <code>optional uint32 season = 28;</code>
     */
    public boolean hasSeason() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint32 season = 28;</code>
     */
    public int getSeason() {
      return season_;
    }

    public static final int PASSWORD_FIELD_NUMBER = 29;
    private volatile java.lang.Object password_;
    /**
     * <code>optional string password = 29;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional string password = 29;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 29;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, commissionerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fantasyLeagueName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, selectionMode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, teamCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, logo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, getScoring());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(12, draftTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(13, draftPickTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(15, seasonStart_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(16, seasonLength_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(17, vetoVotes_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(18, acquisitions_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(19, slot1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(20, slot2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(21, slot3_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(22, slot4_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(23, slot5_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(24, benchSlots_);
      }
      for (int i = 0; i < ownerInfo_.size(); i++) {
        output.writeMessage(25, ownerInfo_.get(i));
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeUInt32(26, players_.get(i));
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(27, timeZone_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(28, season_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 29, password_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, commissionerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fantasyLeagueName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, selectionMode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, teamCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, logo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getScoring());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, draftTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, draftPickTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, seasonStart_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, seasonLength_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, vetoVotes_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, acquisitions_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, slot1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, slot2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, slot3_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, slot4_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, slot5_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, benchSlots_);
      }
      for (int i = 0; i < ownerInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, ownerInfo_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < players_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(players_.get(i));
        }
        size += dataSize;
        size += 2 * getPlayersList().size();
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, timeZone_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, season_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(29, password_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasCommissionerAccountId() == other.hasCommissionerAccountId());
      if (hasCommissionerAccountId()) {
        result = result && (getCommissionerAccountId()
            == other.getCommissionerAccountId());
      }
      result = result && (hasFantasyLeagueName() == other.hasFantasyLeagueName());
      if (hasFantasyLeagueName()) {
        result = result && getFantasyLeagueName()
            .equals(other.getFantasyLeagueName());
      }
      result = result && (hasSelectionMode() == other.hasSelectionMode());
      if (hasSelectionMode()) {
        result = result && selectionMode_ == other.selectionMode_;
      }
      result = result && (hasTeamCount() == other.hasTeamCount());
      if (hasTeamCount()) {
        result = result && (getTeamCount()
            == other.getTeamCount());
      }
      result = result && (hasLogo() == other.hasLogo());
      if (hasLogo()) {
        result = result && (getLogo()
            == other.getLogo());
      }
      result = result && (hasScoring() == other.hasScoring());
      if (hasScoring()) {
        result = result && getScoring()
            .equals(other.getScoring());
      }
      result = result && (hasDraftTime() == other.hasDraftTime());
      if (hasDraftTime()) {
        result = result && (getDraftTime()
            == other.getDraftTime());
      }
      result = result && (hasDraftPickTime() == other.hasDraftPickTime());
      if (hasDraftPickTime()) {
        result = result && (getDraftPickTime()
            == other.getDraftPickTime());
      }
      result = result && (hasSeasonStart() == other.hasSeasonStart());
      if (hasSeasonStart()) {
        result = result && (getSeasonStart()
            == other.getSeasonStart());
      }
      result = result && (hasSeasonLength() == other.hasSeasonLength());
      if (hasSeasonLength()) {
        result = result && (getSeasonLength()
            == other.getSeasonLength());
      }
      result = result && (hasVetoVotes() == other.hasVetoVotes());
      if (hasVetoVotes()) {
        result = result && (getVetoVotes()
            == other.getVetoVotes());
      }
      result = result && (hasAcquisitions() == other.hasAcquisitions());
      if (hasAcquisitions()) {
        result = result && (getAcquisitions()
            == other.getAcquisitions());
      }
      result = result && (hasSlot1() == other.hasSlot1());
      if (hasSlot1()) {
        result = result && (getSlot1()
            == other.getSlot1());
      }
      result = result && (hasSlot2() == other.hasSlot2());
      if (hasSlot2()) {
        result = result && (getSlot2()
            == other.getSlot2());
      }
      result = result && (hasSlot3() == other.hasSlot3());
      if (hasSlot3()) {
        result = result && (getSlot3()
            == other.getSlot3());
      }
      result = result && (hasSlot4() == other.hasSlot4());
      if (hasSlot4()) {
        result = result && (getSlot4()
            == other.getSlot4());
      }
      result = result && (hasSlot5() == other.hasSlot5());
      if (hasSlot5()) {
        result = result && (getSlot5()
            == other.getSlot5());
      }
      result = result && (hasBenchSlots() == other.hasBenchSlots());
      if (hasBenchSlots()) {
        result = result && (getBenchSlots()
            == other.getBenchSlots());
      }
      result = result && getOwnerInfoList()
          .equals(other.getOwnerInfoList());
      result = result && getPlayersList()
          .equals(other.getPlayersList());
      result = result && (hasTimeZone() == other.hasTimeZone());
      if (hasTimeZone()) {
        result = result && (getTimeZone()
            == other.getTimeZone());
      }
      result = result && (hasSeason() == other.hasSeason());
      if (hasSeason()) {
        result = result && (getSeason()
            == other.getSeason());
      }
      result = result && (hasPassword() == other.hasPassword());
      if (hasPassword()) {
        result = result && getPassword()
            .equals(other.getPassword());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasCommissionerAccountId()) {
        hash = (37 * hash) + COMMISSIONER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getCommissionerAccountId();
      }
      if (hasFantasyLeagueName()) {
        hash = (37 * hash) + FANTASY_LEAGUE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueName().hashCode();
      }
      if (hasSelectionMode()) {
        hash = (37 * hash) + SELECTION_MODE_FIELD_NUMBER;
        hash = (53 * hash) + selectionMode_;
      }
      if (hasTeamCount()) {
        hash = (37 * hash) + TEAM_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getTeamCount();
      }
      if (hasLogo()) {
        hash = (37 * hash) + LOGO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLogo());
      }
      if (hasScoring()) {
        hash = (37 * hash) + SCORING_FIELD_NUMBER;
        hash = (53 * hash) + getScoring().hashCode();
      }
      if (hasDraftTime()) {
        hash = (37 * hash) + DRAFT_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getDraftTime();
      }
      if (hasDraftPickTime()) {
        hash = (37 * hash) + DRAFT_PICK_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getDraftPickTime();
      }
      if (hasSeasonStart()) {
        hash = (37 * hash) + SEASON_START_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonStart();
      }
      if (hasSeasonLength()) {
        hash = (37 * hash) + SEASON_LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonLength();
      }
      if (hasVetoVotes()) {
        hash = (37 * hash) + VETO_VOTES_FIELD_NUMBER;
        hash = (53 * hash) + getVetoVotes();
      }
      if (hasAcquisitions()) {
        hash = (37 * hash) + ACQUISITIONS_FIELD_NUMBER;
        hash = (53 * hash) + getAcquisitions();
      }
      if (hasSlot1()) {
        hash = (37 * hash) + SLOT_1_FIELD_NUMBER;
        hash = (53 * hash) + getSlot1();
      }
      if (hasSlot2()) {
        hash = (37 * hash) + SLOT_2_FIELD_NUMBER;
        hash = (53 * hash) + getSlot2();
      }
      if (hasSlot3()) {
        hash = (37 * hash) + SLOT_3_FIELD_NUMBER;
        hash = (53 * hash) + getSlot3();
      }
      if (hasSlot4()) {
        hash = (37 * hash) + SLOT_4_FIELD_NUMBER;
        hash = (53 * hash) + getSlot4();
      }
      if (hasSlot5()) {
        hash = (37 * hash) + SLOT_5_FIELD_NUMBER;
        hash = (53 * hash) + getSlot5();
      }
      if (hasBenchSlots()) {
        hash = (37 * hash) + BENCH_SLOTS_FIELD_NUMBER;
        hash = (53 * hash) + getBenchSlots();
      }
      if (getOwnerInfoCount() > 0) {
        hash = (37 * hash) + OWNER_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getOwnerInfoList().hashCode();
      }
      if (getPlayersCount() > 0) {
        hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayersList().hashCode();
      }
      if (hasTimeZone()) {
        hash = (37 * hash) + TIME_ZONE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeZone();
      }
      if (hasSeason()) {
        hash = (37 * hash) + SEASON_FIELD_NUMBER;
        hash = (53 * hash) + getSeason();
      }
      if (hasPassword()) {
        hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPassword().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueInfo)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getScoringFieldBuilder();
          getOwnerInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        commissionerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        selectionMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        teamCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        logo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (scoringBuilder_ == null) {
          scoring_ = null;
        } else {
          scoringBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        draftTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        draftPickTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        seasonStart_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        seasonLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        vetoVotes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        acquisitions_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        slot1_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        slot2_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        slot3_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        slot4_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        slot5_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        benchSlots_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        if (ownerInfoBuilder_ == null) {
          ownerInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
        } else {
          ownerInfoBuilder_.clear();
        }
        players_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        timeZone_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        season_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfo_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.commissionerAccountId_ = commissionerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fantasyLeagueName_ = fantasyLeagueName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.selectionMode_ = selectionMode_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.teamCount_ = teamCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.logo_ = logo_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (scoringBuilder_ == null) {
          result.scoring_ = scoring_;
        } else {
          result.scoring_ = scoringBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.draftTime_ = draftTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.draftPickTime_ = draftPickTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.seasonStart_ = seasonStart_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.seasonLength_ = seasonLength_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.vetoVotes_ = vetoVotes_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.acquisitions_ = acquisitions_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.slot1_ = slot1_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.slot2_ = slot2_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.slot3_ = slot3_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.slot4_ = slot4_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.slot5_ = slot5_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.benchSlots_ = benchSlots_;
        if (ownerInfoBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000)) {
            ownerInfo_ = java.util.Collections.unmodifiableList(ownerInfo_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.ownerInfo_ = ownerInfo_;
        } else {
          result.ownerInfo_ = ownerInfoBuilder_.build();
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          players_ = java.util.Collections.unmodifiableList(players_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.players_ = players_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.timeZone_ = timeZone_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.season_ = season_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.password_ = password_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasCommissionerAccountId()) {
          setCommissionerAccountId(other.getCommissionerAccountId());
        }
        if (other.hasFantasyLeagueName()) {
          bitField0_ |= 0x00000004;
          fantasyLeagueName_ = other.fantasyLeagueName_;
          onChanged();
        }
        if (other.hasSelectionMode()) {
          setSelectionMode(other.getSelectionMode());
        }
        if (other.hasTeamCount()) {
          setTeamCount(other.getTeamCount());
        }
        if (other.hasLogo()) {
          setLogo(other.getLogo());
        }
        if (other.hasScoring()) {
          mergeScoring(other.getScoring());
        }
        if (other.hasDraftTime()) {
          setDraftTime(other.getDraftTime());
        }
        if (other.hasDraftPickTime()) {
          setDraftPickTime(other.getDraftPickTime());
        }
        if (other.hasSeasonStart()) {
          setSeasonStart(other.getSeasonStart());
        }
        if (other.hasSeasonLength()) {
          setSeasonLength(other.getSeasonLength());
        }
        if (other.hasVetoVotes()) {
          setVetoVotes(other.getVetoVotes());
        }
        if (other.hasAcquisitions()) {
          setAcquisitions(other.getAcquisitions());
        }
        if (other.hasSlot1()) {
          setSlot1(other.getSlot1());
        }
        if (other.hasSlot2()) {
          setSlot2(other.getSlot2());
        }
        if (other.hasSlot3()) {
          setSlot3(other.getSlot3());
        }
        if (other.hasSlot4()) {
          setSlot4(other.getSlot4());
        }
        if (other.hasSlot5()) {
          setSlot5(other.getSlot5());
        }
        if (other.hasBenchSlots()) {
          setBenchSlots(other.getBenchSlots());
        }
        if (ownerInfoBuilder_ == null) {
          if (!other.ownerInfo_.isEmpty()) {
            if (ownerInfo_.isEmpty()) {
              ownerInfo_ = other.ownerInfo_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureOwnerInfoIsMutable();
              ownerInfo_.addAll(other.ownerInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.ownerInfo_.isEmpty()) {
            if (ownerInfoBuilder_.isEmpty()) {
              ownerInfoBuilder_.dispose();
              ownerInfoBuilder_ = null;
              ownerInfo_ = other.ownerInfo_;
              bitField0_ = (bitField0_ & ~0x00080000);
              ownerInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOwnerInfoFieldBuilder() : null;
            } else {
              ownerInfoBuilder_.addAllMessages(other.ownerInfo_);
            }
          }
        }
        if (!other.players_.isEmpty()) {
          if (players_.isEmpty()) {
            players_ = other.players_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensurePlayersIsMutable();
            players_.addAll(other.players_);
          }
          onChanged();
        }
        if (other.hasTimeZone()) {
          setTimeZone(other.getTimeZone());
        }
        if (other.hasSeason()) {
          setSeason(other.getSeason());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00800000;
          password_ = other.password_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int commissionerAccountId_ ;
      /**
       * <code>optional uint32 commissioner_account_id = 2;</code>
       */
      public boolean hasCommissionerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 commissioner_account_id = 2;</code>
       */
      public int getCommissionerAccountId() {
        return commissionerAccountId_;
      }
      /**
       * <code>optional uint32 commissioner_account_id = 2;</code>
       */
      public Builder setCommissionerAccountId(int value) {
        bitField0_ |= 0x00000002;
        commissionerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 commissioner_account_id = 2;</code>
       */
      public Builder clearCommissionerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        commissionerAccountId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fantasyLeagueName_ = "";
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public boolean hasFantasyLeagueName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public java.lang.String getFantasyLeagueName() {
        java.lang.Object ref = fantasyLeagueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fantasyLeagueName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFantasyLeagueNameBytes() {
        java.lang.Object ref = fantasyLeagueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fantasyLeagueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public Builder setFantasyLeagueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public Builder clearFantasyLeagueName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fantasyLeagueName_ = getDefaultInstance().getFantasyLeagueName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 3;</code>
       */
      public Builder setFantasyLeagueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }

      private int selectionMode_ = 0;
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public boolean hasSelectionMode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public MsgSharedEnums.Fantasy_Selection_Mode getSelectionMode() {
        MsgSharedEnums.Fantasy_Selection_Mode result = MsgSharedEnums.Fantasy_Selection_Mode.valueOf(selectionMode_);
        return result == null ? MsgSharedEnums.Fantasy_Selection_Mode.FANTASY_SELECTION_INVALID : result;
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public Builder setSelectionMode(MsgSharedEnums.Fantasy_Selection_Mode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        selectionMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .Fantasy_Selection_Mode selection_mode = 4 [default = FANTASY_SELECTION_INVALID];</code>
       */
      public Builder clearSelectionMode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        selectionMode_ = 0;
        onChanged();
        return this;
      }

      private int teamCount_ ;
      /**
       * <code>optional uint32 team_count = 5;</code>
       */
      public boolean hasTeamCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 team_count = 5;</code>
       */
      public int getTeamCount() {
        return teamCount_;
      }
      /**
       * <code>optional uint32 team_count = 5;</code>
       */
      public Builder setTeamCount(int value) {
        bitField0_ |= 0x00000010;
        teamCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_count = 5;</code>
       */
      public Builder clearTeamCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        teamCount_ = 0;
        onChanged();
        return this;
      }

      private long logo_ ;
      /**
       * <code>optional uint64 logo = 6;</code>
       */
      public boolean hasLogo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 logo = 6;</code>
       */
      public long getLogo() {
        return logo_;
      }
      /**
       * <code>optional uint64 logo = 6;</code>
       */
      public Builder setLogo(long value) {
        bitField0_ |= 0x00000020;
        logo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 logo = 6;</code>
       */
      public Builder clearLogo() {
        bitField0_ = (bitField0_ & ~0x00000020);
        logo_ = 0L;
        onChanged();
        return this;
      }

      private MsgGCClientFantasy.CMsgFantasyLeagueScoring scoring_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgGCClientFantasy.CMsgFantasyLeagueScoring, MsgGCClientFantasy.CMsgFantasyLeagueScoring.Builder, MsgGCClientFantasy.CMsgFantasyLeagueScoringOrBuilder> scoringBuilder_;
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public boolean hasScoring() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public MsgGCClientFantasy.CMsgFantasyLeagueScoring getScoring() {
        if (scoringBuilder_ == null) {
          return scoring_ == null ? MsgGCClientFantasy.CMsgFantasyLeagueScoring.getDefaultInstance() : scoring_;
        } else {
          return scoringBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public Builder setScoring(MsgGCClientFantasy.CMsgFantasyLeagueScoring value) {
        if (scoringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scoring_ = value;
          onChanged();
        } else {
          scoringBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public Builder setScoring(
          MsgGCClientFantasy.CMsgFantasyLeagueScoring.Builder builderForValue) {
        if (scoringBuilder_ == null) {
          scoring_ = builderForValue.build();
          onChanged();
        } else {
          scoringBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public Builder mergeScoring(MsgGCClientFantasy.CMsgFantasyLeagueScoring value) {
        if (scoringBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              scoring_ != null &&
              scoring_ != MsgGCClientFantasy.CMsgFantasyLeagueScoring.getDefaultInstance()) {
            scoring_ =
              MsgGCClientFantasy.CMsgFantasyLeagueScoring.newBuilder(scoring_).mergeFrom(value).buildPartial();
          } else {
            scoring_ = value;
          }
          onChanged();
        } else {
          scoringBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public Builder clearScoring() {
        if (scoringBuilder_ == null) {
          scoring_ = null;
          onChanged();
        } else {
          scoringBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public MsgGCClientFantasy.CMsgFantasyLeagueScoring.Builder getScoringBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getScoringFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      public MsgGCClientFantasy.CMsgFantasyLeagueScoringOrBuilder getScoringOrBuilder() {
        if (scoringBuilder_ != null) {
          return scoringBuilder_.getMessageOrBuilder();
        } else {
          return scoring_ == null ?
              MsgGCClientFantasy.CMsgFantasyLeagueScoring.getDefaultInstance() : scoring_;
        }
      }
      /**
       * <code>optional .CMsgFantasyLeagueScoring scoring = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgGCClientFantasy.CMsgFantasyLeagueScoring, MsgGCClientFantasy.CMsgFantasyLeagueScoring.Builder, MsgGCClientFantasy.CMsgFantasyLeagueScoringOrBuilder> 
          getScoringFieldBuilder() {
        if (scoringBuilder_ == null) {
          scoringBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MsgGCClientFantasy.CMsgFantasyLeagueScoring, MsgGCClientFantasy.CMsgFantasyLeagueScoring.Builder, MsgGCClientFantasy.CMsgFantasyLeagueScoringOrBuilder>(
                  getScoring(),
                  getParentForChildren(),
                  isClean());
          scoring_ = null;
        }
        return scoringBuilder_;
      }

      private int draftTime_ ;
      /**
       * <code>optional uint32 draft_time = 12;</code>
       */
      public boolean hasDraftTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 draft_time = 12;</code>
       */
      public int getDraftTime() {
        return draftTime_;
      }
      /**
       * <code>optional uint32 draft_time = 12;</code>
       */
      public Builder setDraftTime(int value) {
        bitField0_ |= 0x00000080;
        draftTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 draft_time = 12;</code>
       */
      public Builder clearDraftTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        draftTime_ = 0;
        onChanged();
        return this;
      }

      private int draftPickTime_ ;
      /**
       * <code>optional uint32 draft_pick_time = 13;</code>
       */
      public boolean hasDraftPickTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 draft_pick_time = 13;</code>
       */
      public int getDraftPickTime() {
        return draftPickTime_;
      }
      /**
       * <code>optional uint32 draft_pick_time = 13;</code>
       */
      public Builder setDraftPickTime(int value) {
        bitField0_ |= 0x00000100;
        draftPickTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 draft_pick_time = 13;</code>
       */
      public Builder clearDraftPickTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        draftPickTime_ = 0;
        onChanged();
        return this;
      }

      private int seasonStart_ ;
      /**
       * <code>optional uint32 season_start = 15;</code>
       */
      public boolean hasSeasonStart() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 season_start = 15;</code>
       */
      public int getSeasonStart() {
        return seasonStart_;
      }
      /**
       * <code>optional uint32 season_start = 15;</code>
       */
      public Builder setSeasonStart(int value) {
        bitField0_ |= 0x00000200;
        seasonStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_start = 15;</code>
       */
      public Builder clearSeasonStart() {
        bitField0_ = (bitField0_ & ~0x00000200);
        seasonStart_ = 0;
        onChanged();
        return this;
      }

      private int seasonLength_ ;
      /**
       * <code>optional uint32 season_length = 16;</code>
       */
      public boolean hasSeasonLength() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 season_length = 16;</code>
       */
      public int getSeasonLength() {
        return seasonLength_;
      }
      /**
       * <code>optional uint32 season_length = 16;</code>
       */
      public Builder setSeasonLength(int value) {
        bitField0_ |= 0x00000400;
        seasonLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_length = 16;</code>
       */
      public Builder clearSeasonLength() {
        bitField0_ = (bitField0_ & ~0x00000400);
        seasonLength_ = 0;
        onChanged();
        return this;
      }

      private int vetoVotes_ ;
      /**
       * <code>optional uint32 veto_votes = 17;</code>
       */
      public boolean hasVetoVotes() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 veto_votes = 17;</code>
       */
      public int getVetoVotes() {
        return vetoVotes_;
      }
      /**
       * <code>optional uint32 veto_votes = 17;</code>
       */
      public Builder setVetoVotes(int value) {
        bitField0_ |= 0x00000800;
        vetoVotes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 veto_votes = 17;</code>
       */
      public Builder clearVetoVotes() {
        bitField0_ = (bitField0_ & ~0x00000800);
        vetoVotes_ = 0;
        onChanged();
        return this;
      }

      private int acquisitions_ ;
      /**
       * <code>optional uint32 acquisitions = 18;</code>
       */
      public boolean hasAcquisitions() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 acquisitions = 18;</code>
       */
      public int getAcquisitions() {
        return acquisitions_;
      }
      /**
       * <code>optional uint32 acquisitions = 18;</code>
       */
      public Builder setAcquisitions(int value) {
        bitField0_ |= 0x00001000;
        acquisitions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 acquisitions = 18;</code>
       */
      public Builder clearAcquisitions() {
        bitField0_ = (bitField0_ & ~0x00001000);
        acquisitions_ = 0;
        onChanged();
        return this;
      }

      private int slot1_ ;
      /**
       * <code>optional uint32 slot_1 = 19;</code>
       */
      public boolean hasSlot1() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 slot_1 = 19;</code>
       */
      public int getSlot1() {
        return slot1_;
      }
      /**
       * <code>optional uint32 slot_1 = 19;</code>
       */
      public Builder setSlot1(int value) {
        bitField0_ |= 0x00002000;
        slot1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_1 = 19;</code>
       */
      public Builder clearSlot1() {
        bitField0_ = (bitField0_ & ~0x00002000);
        slot1_ = 0;
        onChanged();
        return this;
      }

      private int slot2_ ;
      /**
       * <code>optional uint32 slot_2 = 20;</code>
       */
      public boolean hasSlot2() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 slot_2 = 20;</code>
       */
      public int getSlot2() {
        return slot2_;
      }
      /**
       * <code>optional uint32 slot_2 = 20;</code>
       */
      public Builder setSlot2(int value) {
        bitField0_ |= 0x00004000;
        slot2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_2 = 20;</code>
       */
      public Builder clearSlot2() {
        bitField0_ = (bitField0_ & ~0x00004000);
        slot2_ = 0;
        onChanged();
        return this;
      }

      private int slot3_ ;
      /**
       * <code>optional uint32 slot_3 = 21;</code>
       */
      public boolean hasSlot3() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 slot_3 = 21;</code>
       */
      public int getSlot3() {
        return slot3_;
      }
      /**
       * <code>optional uint32 slot_3 = 21;</code>
       */
      public Builder setSlot3(int value) {
        bitField0_ |= 0x00008000;
        slot3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_3 = 21;</code>
       */
      public Builder clearSlot3() {
        bitField0_ = (bitField0_ & ~0x00008000);
        slot3_ = 0;
        onChanged();
        return this;
      }

      private int slot4_ ;
      /**
       * <code>optional uint32 slot_4 = 22;</code>
       */
      public boolean hasSlot4() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 slot_4 = 22;</code>
       */
      public int getSlot4() {
        return slot4_;
      }
      /**
       * <code>optional uint32 slot_4 = 22;</code>
       */
      public Builder setSlot4(int value) {
        bitField0_ |= 0x00010000;
        slot4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_4 = 22;</code>
       */
      public Builder clearSlot4() {
        bitField0_ = (bitField0_ & ~0x00010000);
        slot4_ = 0;
        onChanged();
        return this;
      }

      private int slot5_ ;
      /**
       * <code>optional uint32 slot_5 = 23;</code>
       */
      public boolean hasSlot5() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 slot_5 = 23;</code>
       */
      public int getSlot5() {
        return slot5_;
      }
      /**
       * <code>optional uint32 slot_5 = 23;</code>
       */
      public Builder setSlot5(int value) {
        bitField0_ |= 0x00020000;
        slot5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_5 = 23;</code>
       */
      public Builder clearSlot5() {
        bitField0_ = (bitField0_ & ~0x00020000);
        slot5_ = 0;
        onChanged();
        return this;
      }

      private int benchSlots_ ;
      /**
       * <code>optional uint32 bench_slots = 24;</code>
       */
      public boolean hasBenchSlots() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 bench_slots = 24;</code>
       */
      public int getBenchSlots() {
        return benchSlots_;
      }
      /**
       * <code>optional uint32 bench_slots = 24;</code>
       */
      public Builder setBenchSlots(int value) {
        bitField0_ |= 0x00040000;
        benchSlots_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bench_slots = 24;</code>
       */
      public Builder clearBenchSlots() {
        bitField0_ = (bitField0_ & ~0x00040000);
        benchSlots_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> ownerInfo_ =
        java.util.Collections.emptyList();
      private void ensureOwnerInfoIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          ownerInfo_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo>(ownerInfo_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder> ownerInfoBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> getOwnerInfoList() {
        if (ownerInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ownerInfo_);
        } else {
          return ownerInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public int getOwnerInfoCount() {
        if (ownerInfoBuilder_ == null) {
          return ownerInfo_.size();
        } else {
          return ownerInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo getOwnerInfo(int index) {
        if (ownerInfoBuilder_ == null) {
          return ownerInfo_.get(index);
        } else {
          return ownerInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder setOwnerInfo(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo value) {
        if (ownerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOwnerInfoIsMutable();
          ownerInfo_.set(index, value);
          onChanged();
        } else {
          ownerInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder setOwnerInfo(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder builderForValue) {
        if (ownerInfoBuilder_ == null) {
          ensureOwnerInfoIsMutable();
          ownerInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          ownerInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder addOwnerInfo(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo value) {
        if (ownerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOwnerInfoIsMutable();
          ownerInfo_.add(value);
          onChanged();
        } else {
          ownerInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder addOwnerInfo(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo value) {
        if (ownerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOwnerInfoIsMutable();
          ownerInfo_.add(index, value);
          onChanged();
        } else {
          ownerInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder addOwnerInfo(
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder builderForValue) {
        if (ownerInfoBuilder_ == null) {
          ensureOwnerInfoIsMutable();
          ownerInfo_.add(builderForValue.build());
          onChanged();
        } else {
          ownerInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder addOwnerInfo(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder builderForValue) {
        if (ownerInfoBuilder_ == null) {
          ensureOwnerInfoIsMutable();
          ownerInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          ownerInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder addAllOwnerInfo(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo> values) {
        if (ownerInfoBuilder_ == null) {
          ensureOwnerInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ownerInfo_);
          onChanged();
        } else {
          ownerInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder clearOwnerInfo() {
        if (ownerInfoBuilder_ == null) {
          ownerInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          ownerInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public Builder removeOwnerInfo(int index) {
        if (ownerInfoBuilder_ == null) {
          ensureOwnerInfoIsMutable();
          ownerInfo_.remove(index);
          onChanged();
        } else {
          ownerInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder getOwnerInfoBuilder(
          int index) {
        return getOwnerInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder getOwnerInfoOrBuilder(
          int index) {
        if (ownerInfoBuilder_ == null) {
          return ownerInfo_.get(index);  } else {
          return ownerInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder> 
           getOwnerInfoOrBuilderList() {
        if (ownerInfoBuilder_ != null) {
          return ownerInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ownerInfo_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder addOwnerInfoBuilder() {
        return getOwnerInfoFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder addOwnerInfoBuilder(
          int index) {
        return getOwnerInfoFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueInfo.OwnerInfo owner_info = 25;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder> 
           getOwnerInfoBuilderList() {
        return getOwnerInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder> 
          getOwnerInfoFieldBuilder() {
        if (ownerInfoBuilder_ == null) {
          ownerInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfo.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.OwnerInfoOrBuilder>(
                  ownerInfo_,
                  ((bitField0_ & 0x00080000) == 0x00080000),
                  getParentForChildren(),
                  isClean());
          ownerInfo_ = null;
        }
        return ownerInfoBuilder_;
      }

      private java.util.List<java.lang.Integer> players_ = java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          players_ = new java.util.ArrayList<java.lang.Integer>(players_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayersList() {
        return java.util.Collections.unmodifiableList(players_);
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public int getPlayers(int index) {
        return players_.get(index);
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public Builder setPlayers(
          int index, int value) {
        ensurePlayersIsMutable();
        players_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public Builder addPlayers(int value) {
        ensurePlayersIsMutable();
        players_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, players_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 players = 26;</code>
       */
      public Builder clearPlayers() {
        players_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      private int timeZone_ ;
      /**
       * <code>optional uint32 time_zone = 27;</code>
       */
      public boolean hasTimeZone() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 time_zone = 27;</code>
       */
      public int getTimeZone() {
        return timeZone_;
      }
      /**
       * <code>optional uint32 time_zone = 27;</code>
       */
      public Builder setTimeZone(int value) {
        bitField0_ |= 0x00200000;
        timeZone_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 time_zone = 27;</code>
       */
      public Builder clearTimeZone() {
        bitField0_ = (bitField0_ & ~0x00200000);
        timeZone_ = 0;
        onChanged();
        return this;
      }

      private int season_ ;
      /**
       * <code>optional uint32 season = 28;</code>
       */
      public boolean hasSeason() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 season = 28;</code>
       */
      public int getSeason() {
        return season_;
      }
      /**
       * <code>optional uint32 season = 28;</code>
       */
      public Builder setSeason(int value) {
        bitField0_ |= 0x00400000;
        season_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season = 28;</code>
       */
      public Builder clearSeason() {
        bitField0_ = (bitField0_ & ~0x00400000);
        season_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 29;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional string password = 29;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 29;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 29;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 29;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00800000);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 29;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        password_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueInfo)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueInfo)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfo>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueInfo>() {
      public CMsgDOTAFantasyLeagueInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfo> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueEditInfoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueEditInfoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    boolean hasEditInfo();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo getEditInfo();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoOrBuilder getEditInfoOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueEditInfoRequest}
   */
  public  static final class CMsgDOTAFantasyLeagueEditInfoRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueEditInfoRequest)
      CMsgDOTAFantasyLeagueEditInfoRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueEditInfoRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueEditInfoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueEditInfoRequest() {
      fantasyLeagueId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueEditInfoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 18: {
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = editInfo_.toBuilder();
              }
              editInfo_ = input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(editInfo_);
                editInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int EDIT_INFO_FIELD_NUMBER = 2;
    private MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo editInfo_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    public boolean hasEditInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo getEditInfo() {
      return editInfo_ == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance() : editInfo_;
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoOrBuilder getEditInfoOrBuilder() {
      return editInfo_ == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance() : editInfo_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getEditInfo());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEditInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasEditInfo() == other.hasEditInfo());
      if (hasEditInfo()) {
        result = result && getEditInfo()
            .equals(other.getEditInfo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasEditInfo()) {
        hash = (37 * hash) + EDIT_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getEditInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueEditInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueEditInfoRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEditInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (editInfoBuilder_ == null) {
          editInfo_ = null;
        } else {
          editInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (editInfoBuilder_ == null) {
          result.editInfo_ = editInfo_;
        } else {
          result.editInfo_ = editInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasEditInfo()) {
          mergeEditInfo(other.getEditInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo editInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoOrBuilder> editInfoBuilder_;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public boolean hasEditInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo getEditInfo() {
        if (editInfoBuilder_ == null) {
          return editInfo_ == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance() : editInfo_;
        } else {
          return editInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public Builder setEditInfo(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo value) {
        if (editInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          editInfo_ = value;
          onChanged();
        } else {
          editInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public Builder setEditInfo(
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.Builder builderForValue) {
        if (editInfoBuilder_ == null) {
          editInfo_ = builderForValue.build();
          onChanged();
        } else {
          editInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public Builder mergeEditInfo(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo value) {
        if (editInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              editInfo_ != null &&
              editInfo_ != MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance()) {
            editInfo_ =
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.newBuilder(editInfo_).mergeFrom(value).buildPartial();
          } else {
            editInfo_ = value;
          }
          onChanged();
        } else {
          editInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public Builder clearEditInfo() {
        if (editInfoBuilder_ == null) {
          editInfo_ = null;
          onChanged();
        } else {
          editInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.Builder getEditInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEditInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoOrBuilder getEditInfoOrBuilder() {
        if (editInfoBuilder_ != null) {
          return editInfoBuilder_.getMessageOrBuilder();
        } else {
          return editInfo_ == null ?
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.getDefaultInstance() : editInfo_;
        }
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfo edit_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoOrBuilder> 
          getEditInfoFieldBuilder() {
        if (editInfoBuilder_ == null) {
          editInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfo.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoOrBuilder>(
                  getEditInfo(),
                  getParentForChildren(),
                  isClean());
          editInfo_ = null;
        }
        return editInfoBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueEditInfoRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueEditInfoRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInfoRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueEditInfoRequest>() {
      public CMsgDOTAFantasyLeagueEditInfoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueEditInfoRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInfoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInfoRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueEditInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueEditInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueEditInfoResponse}
   */
  public  static final class CMsgDOTAFantasyLeagueEditInfoResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueEditInfoResponse)
      CMsgDOTAFantasyLeagueEditInfoResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueEditInfoResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueEditInfoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueEditInfoResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueEditInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueEditInfoResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueEditInfoResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueEditInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueEditInfoResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueEditInfoResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueEditInfoResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInfoResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueEditInfoResponse>() {
      public CMsgDOTAFantasyLeagueEditInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueEditInfoResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInfoResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInfoResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInfoResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueFindRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueFindRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueFindRequest}
   */
  public  static final class CMsgDOTAFantasyLeagueFindRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueFindRequest)
      CMsgDOTAFantasyLeagueFindRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueFindRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueFindRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueFindRequest() {
      fantasyLeagueId_ = 0;
      password_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueFindRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              password_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueFindRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object password_;
    /**
     * <code>optional string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasPassword() == other.hasPassword());
      if (hasPassword()) {
        result = result && getPassword()
            .equals(other.getPassword());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasPassword()) {
        hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPassword().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueFindRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueFindRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueFindRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.password_ = password_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000002;
          password_ = other.password_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 2;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueFindRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueFindRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueFindRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueFindRequest>() {
      public CMsgDOTAFantasyLeagueFindRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueFindRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueFindRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueFindRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueFindResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueFindResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult getResult();

    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    boolean hasFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    java.lang.String getFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getFantasyLeagueNameBytes();

    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    boolean hasCommissionerName();
    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    java.lang.String getCommissionerName();
    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getCommissionerNameBytes();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueFindResponse}
   */
  public  static final class CMsgDOTAFantasyLeagueFindResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueFindResponse)
      CMsgDOTAFantasyLeagueFindResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueFindResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueFindResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueFindResponse() {
      result_ = 0;
      fantasyLeagueName_ = "";
      commissionerName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueFindResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              fantasyLeagueName_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              commissionerName_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueFindResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueFindResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_LEAGUE_NOT_FOUND = 1;</code>
       */
      ERROR_LEAGUE_NOT_FOUND(1),
      /**
       * <code>ERROR_BAD_PASSWORD = 2;</code>
       */
      ERROR_BAD_PASSWORD(2),
      /**
       * <code>ERROR_UNSPECIFIED = 3;</code>
       */
      ERROR_UNSPECIFIED(3),
      /**
       * <code>ERROR_FULL = 4;</code>
       */
      ERROR_FULL(4),
      /**
       * <code>ERROR_ALREADY_MEMBER = 5;</code>
       */
      ERROR_ALREADY_MEMBER(5),
      /**
       * <code>ERROR_LEAGUE_LOCKED = 6;</code>
       */
      ERROR_LEAGUE_LOCKED(6),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_LEAGUE_NOT_FOUND = 1;</code>
       */
      public static final int ERROR_LEAGUE_NOT_FOUND_VALUE = 1;
      /**
       * <code>ERROR_BAD_PASSWORD = 2;</code>
       */
      public static final int ERROR_BAD_PASSWORD_VALUE = 2;
      /**
       * <code>ERROR_UNSPECIFIED = 3;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 3;
      /**
       * <code>ERROR_FULL = 4;</code>
       */
      public static final int ERROR_FULL_VALUE = 4;
      /**
       * <code>ERROR_ALREADY_MEMBER = 5;</code>
       */
      public static final int ERROR_ALREADY_MEMBER_VALUE = 5;
      /**
       * <code>ERROR_LEAGUE_LOCKED = 6;</code>
       */
      public static final int ERROR_LEAGUE_LOCKED_VALUE = 6;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_LEAGUE_NOT_FOUND;
          case 2: return ERROR_BAD_PASSWORD;
          case 3: return ERROR_UNSPECIFIED;
          case 4: return ERROR_FULL;
          case 5: return ERROR_ALREADY_MEMBER;
          case 6: return ERROR_LEAGUE_LOCKED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueFindResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult.SUCCESS : result;
    }

    public static final int FANTASY_LEAGUE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object fantasyLeagueName_;
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public boolean hasFantasyLeagueName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public java.lang.String getFantasyLeagueName() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fantasyLeagueName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFantasyLeagueNameBytes() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fantasyLeagueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMISSIONER_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object commissionerName_;
    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    public boolean hasCommissionerName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    public java.lang.String getCommissionerName() {
      java.lang.Object ref = commissionerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          commissionerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string commissioner_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCommissionerNameBytes() {
      java.lang.Object ref = commissionerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commissionerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fantasyLeagueName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, commissionerName_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fantasyLeagueName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, commissionerName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && (hasFantasyLeagueName() == other.hasFantasyLeagueName());
      if (hasFantasyLeagueName()) {
        result = result && getFantasyLeagueName()
            .equals(other.getFantasyLeagueName());
      }
      result = result && (hasCommissionerName() == other.hasCommissionerName());
      if (hasCommissionerName()) {
        result = result && getCommissionerName()
            .equals(other.getCommissionerName());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasFantasyLeagueName()) {
        hash = (37 * hash) + FANTASY_LEAGUE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueName().hashCode();
      }
      if (hasCommissionerName()) {
        hash = (37 * hash) + COMMISSIONER_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getCommissionerName().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueFindResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueFindResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueFindResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        commissionerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueName_ = fantasyLeagueName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.commissionerName_ = commissionerName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyLeagueName()) {
          bitField0_ |= 0x00000002;
          fantasyLeagueName_ = other.fantasyLeagueName_;
          onChanged();
        }
        if (other.hasCommissionerName()) {
          bitField0_ |= 0x00000004;
          commissionerName_ = other.commissionerName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueFindResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fantasyLeagueName_ = "";
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public boolean hasFantasyLeagueName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public java.lang.String getFantasyLeagueName() {
        java.lang.Object ref = fantasyLeagueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fantasyLeagueName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFantasyLeagueNameBytes() {
        java.lang.Object ref = fantasyLeagueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fantasyLeagueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder setFantasyLeagueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder clearFantasyLeagueName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueName_ = getDefaultInstance().getFantasyLeagueName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder setFantasyLeagueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object commissionerName_ = "";
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public boolean hasCommissionerName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public java.lang.String getCommissionerName() {
        java.lang.Object ref = commissionerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            commissionerName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCommissionerNameBytes() {
        java.lang.Object ref = commissionerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commissionerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public Builder setCommissionerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        commissionerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public Builder clearCommissionerName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        commissionerName_ = getDefaultInstance().getCommissionerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string commissioner_name = 3;</code>
       */
      public Builder setCommissionerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        commissionerName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueFindResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueFindResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueFindResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueFindResponse>() {
      public CMsgDOTAFantasyLeagueFindResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueFindResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueFindResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueFindResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueFindResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueInfoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueInfoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueInfoRequest}
   */
  public  static final class CMsgDOTAFantasyLeagueInfoRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueInfoRequest)
      CMsgDOTAFantasyLeagueInfoRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueInfoRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueInfoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueInfoRequest() {
      fantasyLeagueId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueInfoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueInfoRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueInfoRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueInfoRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfoRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueInfoRequest>() {
      public CMsgDOTAFantasyLeagueInfoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueInfoRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfoRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueInfoResponse}
   */
  public  static final class CMsgDOTAFantasyLeagueInfoResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueInfoResponse)
      CMsgDOTAFantasyLeagueInfoResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueInfoResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueInfoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueInfoResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueInfoResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_BAD_LEAGUE_ID = 2;</code>
       */
      ERROR_BAD_LEAGUE_ID(2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_BAD_LEAGUE_ID = 2;</code>
       */
      public static final int ERROR_BAD_LEAGUE_ID_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_BAD_LEAGUE_ID;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueInfoResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueInfoResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueInfoResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueInfoResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueInfoResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfoResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueInfoResponse>() {
      public CMsgDOTAFantasyLeagueInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueInfoResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfoResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueInfoResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueInfoResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueMatchupsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueMatchupsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsRequest}
   */
  public  static final class CMsgDOTAFantasyLeagueMatchupsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueMatchupsRequest)
      CMsgDOTAFantasyLeagueMatchupsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueMatchupsRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueMatchupsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueMatchupsRequest() {
      fantasyLeagueId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueMatchupsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueMatchupsRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueMatchupsRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueMatchupsRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueMatchupsRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueMatchupsRequest>() {
      public CMsgDOTAFantasyLeagueMatchupsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueMatchupsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueMatchupsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueMatchupsRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueMatchupsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueMatchupsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult getResult();

    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> 
        getWeeklyMatchupsList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups getWeeklyMatchups(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    int getWeeklyMatchupsCount();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder> 
        getWeeklyMatchupsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder getWeeklyMatchupsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse}
   */
  public  static final class CMsgDOTAFantasyLeagueMatchupsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueMatchupsResponse)
      CMsgDOTAFantasyLeagueMatchupsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueMatchupsResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueMatchupsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueMatchupsResponse() {
      result_ = 0;
      fantasyLeagueId_ = 0;
      weeklyMatchups_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueMatchupsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                weeklyMatchups_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups>();
                mutable_bitField0_ |= 0x00000004;
              }
              weeklyMatchups_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          weeklyMatchups_ = java.util.Collections.unmodifiableList(weeklyMatchups_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueMatchupsResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_BAD_LEAGUE_ID = 2;</code>
       */
      ERROR_BAD_LEAGUE_ID(2),
      /**
       * <code>ERROR_NO_PERMISSION = 3;</code>
       */
      ERROR_NO_PERMISSION(3),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_BAD_LEAGUE_ID = 2;</code>
       */
      public static final int ERROR_BAD_LEAGUE_ID_VALUE = 2;
      /**
       * <code>ERROR_NO_PERMISSION = 3;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_BAD_LEAGUE_ID;
          case 3: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueMatchupsResponse.EResult)
    }

    public interface MatchupOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 owner_account_id_1 = 1;</code>
       */
      boolean hasOwnerAccountId1();
      /**
       * <code>optional uint32 owner_account_id_1 = 1;</code>
       */
      int getOwnerAccountId1();

      /**
       * <code>optional uint32 owner_account_id_2 = 2;</code>
       */
      boolean hasOwnerAccountId2();
      /**
       * <code>optional uint32 owner_account_id_2 = 2;</code>
       */
      int getOwnerAccountId2();

      /**
       * <code>optional float score_1 = 3;</code>
       */
      boolean hasScore1();
      /**
       * <code>optional float score_1 = 3;</code>
       */
      float getScore1();

      /**
       * <code>optional float score_2 = 4;</code>
       */
      boolean hasScore2();
      /**
       * <code>optional float score_2 = 4;</code>
       */
      float getScore2();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse.Matchup}
     */
    public  static final class Matchup extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)
        MatchupOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Matchup.newBuilder() to construct.
      private Matchup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Matchup() {
        ownerAccountId1_ = 0;
        ownerAccountId2_ = 0;
        score1_ = 0F;
        score2_ = 0F;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Matchup(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                ownerAccountId1_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                ownerAccountId2_ = input.readUInt32();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                score1_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                score2_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder.class);
      }

      private int bitField0_;
      public static final int OWNER_ACCOUNT_ID_1_FIELD_NUMBER = 1;
      private int ownerAccountId1_;
      /**
       * <code>optional uint32 owner_account_id_1 = 1;</code>
       */
      public boolean hasOwnerAccountId1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 owner_account_id_1 = 1;</code>
       */
      public int getOwnerAccountId1() {
        return ownerAccountId1_;
      }

      public static final int OWNER_ACCOUNT_ID_2_FIELD_NUMBER = 2;
      private int ownerAccountId2_;
      /**
       * <code>optional uint32 owner_account_id_2 = 2;</code>
       */
      public boolean hasOwnerAccountId2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id_2 = 2;</code>
       */
      public int getOwnerAccountId2() {
        return ownerAccountId2_;
      }

      public static final int SCORE_1_FIELD_NUMBER = 3;
      private float score1_;
      /**
       * <code>optional float score_1 = 3;</code>
       */
      public boolean hasScore1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float score_1 = 3;</code>
       */
      public float getScore1() {
        return score1_;
      }

      public static final int SCORE_2_FIELD_NUMBER = 4;
      private float score2_;
      /**
       * <code>optional float score_2 = 4;</code>
       */
      public boolean hasScore2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float score_2 = 4;</code>
       */
      public float getScore2() {
        return score2_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, ownerAccountId1_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, ownerAccountId2_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, score1_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, score2_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, ownerAccountId1_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, ownerAccountId2_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, score1_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, score2_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup) obj;

        boolean result = true;
        result = result && (hasOwnerAccountId1() == other.hasOwnerAccountId1());
        if (hasOwnerAccountId1()) {
          result = result && (getOwnerAccountId1()
              == other.getOwnerAccountId1());
        }
        result = result && (hasOwnerAccountId2() == other.hasOwnerAccountId2());
        if (hasOwnerAccountId2()) {
          result = result && (getOwnerAccountId2()
              == other.getOwnerAccountId2());
        }
        result = result && (hasScore1() == other.hasScore1());
        if (hasScore1()) {
          result = result && (
              java.lang.Float.floatToIntBits(getScore1())
              == java.lang.Float.floatToIntBits(
                  other.getScore1()));
        }
        result = result && (hasScore2() == other.hasScore2());
        if (hasScore2()) {
          result = result && (
              java.lang.Float.floatToIntBits(getScore2())
              == java.lang.Float.floatToIntBits(
                  other.getScore2()));
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasOwnerAccountId1()) {
          hash = (37 * hash) + OWNER_ACCOUNT_ID_1_FIELD_NUMBER;
          hash = (53 * hash) + getOwnerAccountId1();
        }
        if (hasOwnerAccountId2()) {
          hash = (37 * hash) + OWNER_ACCOUNT_ID_2_FIELD_NUMBER;
          hash = (53 * hash) + getOwnerAccountId2();
        }
        if (hasScore1()) {
          hash = (37 * hash) + SCORE_1_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getScore1());
        }
        if (hasScore2()) {
          hash = (37 * hash) + SCORE_2_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getScore2());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse.Matchup}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          ownerAccountId1_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          ownerAccountId2_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          score1_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          score2_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup build() {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.ownerAccountId1_ = ownerAccountId1_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.ownerAccountId2_ = ownerAccountId2_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.score1_ = score1_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.score2_ = score2_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.getDefaultInstance()) return this;
          if (other.hasOwnerAccountId1()) {
            setOwnerAccountId1(other.getOwnerAccountId1());
          }
          if (other.hasOwnerAccountId2()) {
            setOwnerAccountId2(other.getOwnerAccountId2());
          }
          if (other.hasScore1()) {
            setScore1(other.getScore1());
          }
          if (other.hasScore2()) {
            setScore2(other.getScore2());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int ownerAccountId1_ ;
        /**
         * <code>optional uint32 owner_account_id_1 = 1;</code>
         */
        public boolean hasOwnerAccountId1() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 1;</code>
         */
        public int getOwnerAccountId1() {
          return ownerAccountId1_;
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 1;</code>
         */
        public Builder setOwnerAccountId1(int value) {
          bitField0_ |= 0x00000001;
          ownerAccountId1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 1;</code>
         */
        public Builder clearOwnerAccountId1() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ownerAccountId1_ = 0;
          onChanged();
          return this;
        }

        private int ownerAccountId2_ ;
        /**
         * <code>optional uint32 owner_account_id_2 = 2;</code>
         */
        public boolean hasOwnerAccountId2() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 2;</code>
         */
        public int getOwnerAccountId2() {
          return ownerAccountId2_;
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 2;</code>
         */
        public Builder setOwnerAccountId2(int value) {
          bitField0_ |= 0x00000002;
          ownerAccountId2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 2;</code>
         */
        public Builder clearOwnerAccountId2() {
          bitField0_ = (bitField0_ & ~0x00000002);
          ownerAccountId2_ = 0;
          onChanged();
          return this;
        }

        private float score1_ ;
        /**
         * <code>optional float score_1 = 3;</code>
         */
        public boolean hasScore1() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float score_1 = 3;</code>
         */
        public float getScore1() {
          return score1_;
        }
        /**
         * <code>optional float score_1 = 3;</code>
         */
        public Builder setScore1(float value) {
          bitField0_ |= 0x00000004;
          score1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score_1 = 3;</code>
         */
        public Builder clearScore1() {
          bitField0_ = (bitField0_ & ~0x00000004);
          score1_ = 0F;
          onChanged();
          return this;
        }

        private float score2_ ;
        /**
         * <code>optional float score_2 = 4;</code>
         */
        public boolean hasScore2() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional float score_2 = 4;</code>
         */
        public float getScore2() {
          return score2_;
        }
        /**
         * <code>optional float score_2 = 4;</code>
         */
        public Builder setScore2(float value) {
          bitField0_ |= 0x00000008;
          score2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score_2 = 4;</code>
         */
        public Builder clearScore2() {
          bitField0_ = (bitField0_ & ~0x00000008);
          score2_ = 0F;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueMatchupsResponse.Matchup)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Matchup>
          PARSER = new com.google.protobuf.AbstractParser<Matchup>() {
        public Matchup parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Matchup(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Matchup> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Matchup> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface WeeklyMatchupsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> 
          getMatchupList();
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup getMatchup(int index);
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      int getMatchupCount();
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder> 
          getMatchupOrBuilderList();
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder getMatchupOrBuilder(
          int index);

      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      boolean hasStartTime();
      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      int getStartTime();

      /**
       * <code>optional uint32 end_time = 3;</code>
       */
      boolean hasEndTime();
      /**
       * <code>optional uint32 end_time = 3;</code>
       */
      int getEndTime();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups}
     */
    public  static final class WeeklyMatchups extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)
        WeeklyMatchupsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use WeeklyMatchups.newBuilder() to construct.
      private WeeklyMatchups(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private WeeklyMatchups() {
        matchup_ = java.util.Collections.emptyList();
        startTime_ = 0;
        endTime_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private WeeklyMatchups(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  matchup_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup>();
                  mutable_bitField0_ |= 0x00000001;
                }
                matchup_.add(
                    input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.PARSER, extensionRegistry));
                break;
              }
              case 16: {
                bitField0_ |= 0x00000001;
                startTime_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                endTime_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            matchup_ = java.util.Collections.unmodifiableList(matchup_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder.class);
      }

      private int bitField0_;
      public static final int MATCHUP_FIELD_NUMBER = 1;
      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> matchup_;
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> getMatchupList() {
        return matchup_;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder> 
          getMatchupOrBuilderList() {
        return matchup_;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      public int getMatchupCount() {
        return matchup_.size();
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup getMatchup(int index) {
        return matchup_.get(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder getMatchupOrBuilder(
          int index) {
        return matchup_.get(index);
      }

      public static final int START_TIME_FIELD_NUMBER = 2;
      private int startTime_;
      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      public int getStartTime() {
        return startTime_;
      }

      public static final int END_TIME_FIELD_NUMBER = 3;
      private int endTime_;
      /**
       * <code>optional uint32 end_time = 3;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 end_time = 3;</code>
       */
      public int getEndTime() {
        return endTime_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < matchup_.size(); i++) {
          output.writeMessage(1, matchup_.get(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(2, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(3, endTime_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < matchup_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, matchup_.get(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, startTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, endTime_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups) obj;

        boolean result = true;
        result = result && getMatchupList()
            .equals(other.getMatchupList());
        result = result && (hasStartTime() == other.hasStartTime());
        if (hasStartTime()) {
          result = result && (getStartTime()
              == other.getStartTime());
        }
        result = result && (hasEndTime() == other.hasEndTime());
        if (hasEndTime()) {
          result = result && (getEndTime()
              == other.getEndTime());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getMatchupCount() > 0) {
          hash = (37 * hash) + MATCHUP_FIELD_NUMBER;
          hash = (53 * hash) + getMatchupList().hashCode();
        }
        if (hasStartTime()) {
          hash = (37 * hash) + START_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getStartTime();
        }
        if (hasEndTime()) {
          hash = (37 * hash) + END_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getEndTime();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getMatchupFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (matchupBuilder_ == null) {
            matchup_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            matchupBuilder_.clear();
          }
          startTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          endTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups build() {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (matchupBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              matchup_ = java.util.Collections.unmodifiableList(matchup_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.matchup_ = matchup_;
          } else {
            result.matchup_ = matchupBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000001;
          }
          result.startTime_ = startTime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000002;
          }
          result.endTime_ = endTime_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.getDefaultInstance()) return this;
          if (matchupBuilder_ == null) {
            if (!other.matchup_.isEmpty()) {
              if (matchup_.isEmpty()) {
                matchup_ = other.matchup_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureMatchupIsMutable();
                matchup_.addAll(other.matchup_);
              }
              onChanged();
            }
          } else {
            if (!other.matchup_.isEmpty()) {
              if (matchupBuilder_.isEmpty()) {
                matchupBuilder_.dispose();
                matchupBuilder_ = null;
                matchup_ = other.matchup_;
                bitField0_ = (bitField0_ & ~0x00000001);
                matchupBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getMatchupFieldBuilder() : null;
              } else {
                matchupBuilder_.addAllMessages(other.matchup_);
              }
            }
          }
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          if (other.hasEndTime()) {
            setEndTime(other.getEndTime());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> matchup_ =
          java.util.Collections.emptyList();
        private void ensureMatchupIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            matchup_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup>(matchup_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder> matchupBuilder_;

        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> getMatchupList() {
          if (matchupBuilder_ == null) {
            return java.util.Collections.unmodifiableList(matchup_);
          } else {
            return matchupBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public int getMatchupCount() {
          if (matchupBuilder_ == null) {
            return matchup_.size();
          } else {
            return matchupBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup getMatchup(int index) {
          if (matchupBuilder_ == null) {
            return matchup_.get(index);
          } else {
            return matchupBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder setMatchup(
            int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup value) {
          if (matchupBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMatchupIsMutable();
            matchup_.set(index, value);
            onChanged();
          } else {
            matchupBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder setMatchup(
            int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder builderForValue) {
          if (matchupBuilder_ == null) {
            ensureMatchupIsMutable();
            matchup_.set(index, builderForValue.build());
            onChanged();
          } else {
            matchupBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder addMatchup(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup value) {
          if (matchupBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMatchupIsMutable();
            matchup_.add(value);
            onChanged();
          } else {
            matchupBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder addMatchup(
            int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup value) {
          if (matchupBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMatchupIsMutable();
            matchup_.add(index, value);
            onChanged();
          } else {
            matchupBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder addMatchup(
            MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder builderForValue) {
          if (matchupBuilder_ == null) {
            ensureMatchupIsMutable();
            matchup_.add(builderForValue.build());
            onChanged();
          } else {
            matchupBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder addMatchup(
            int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder builderForValue) {
          if (matchupBuilder_ == null) {
            ensureMatchupIsMutable();
            matchup_.add(index, builderForValue.build());
            onChanged();
          } else {
            matchupBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder addAllMatchup(
            java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup> values) {
          if (matchupBuilder_ == null) {
            ensureMatchupIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, matchup_);
            onChanged();
          } else {
            matchupBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder clearMatchup() {
          if (matchupBuilder_ == null) {
            matchup_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            matchupBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public Builder removeMatchup(int index) {
          if (matchupBuilder_ == null) {
            ensureMatchupIsMutable();
            matchup_.remove(index);
            onChanged();
          } else {
            matchupBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder getMatchupBuilder(
            int index) {
          return getMatchupFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder getMatchupOrBuilder(
            int index) {
          if (matchupBuilder_ == null) {
            return matchup_.get(index);  } else {
            return matchupBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder> 
             getMatchupOrBuilderList() {
          if (matchupBuilder_ != null) {
            return matchupBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(matchup_);
          }
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder addMatchupBuilder() {
          return getMatchupFieldBuilder().addBuilder(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder addMatchupBuilder(
            int index) {
          return getMatchupFieldBuilder().addBuilder(
              index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.Matchup matchup = 1;</code>
         */
        public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder> 
             getMatchupBuilderList() {
          return getMatchupFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder> 
            getMatchupFieldBuilder() {
          if (matchupBuilder_ == null) {
            matchupBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Matchup.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.MatchupOrBuilder>(
                    matchup_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            matchup_ = null;
          }
          return matchupBuilder_;
        }

        private int startTime_ ;
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public int getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public Builder setStartTime(int value) {
          bitField0_ |= 0x00000002;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          startTime_ = 0;
          onChanged();
          return this;
        }

        private int endTime_ ;
        /**
         * <code>optional uint32 end_time = 3;</code>
         */
        public boolean hasEndTime() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 end_time = 3;</code>
         */
        public int getEndTime() {
          return endTime_;
        }
        /**
         * <code>optional uint32 end_time = 3;</code>
         */
        public Builder setEndTime(int value) {
          bitField0_ |= 0x00000004;
          endTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 end_time = 3;</code>
         */
        public Builder clearEndTime() {
          bitField0_ = (bitField0_ & ~0x00000004);
          endTime_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<WeeklyMatchups>
          PARSER = new com.google.protobuf.AbstractParser<WeeklyMatchups>() {
        public WeeklyMatchups parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new WeeklyMatchups(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<WeeklyMatchups> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<WeeklyMatchups> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult.SUCCESS : result;
    }

    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 2;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int WEEKLY_MATCHUPS_FIELD_NUMBER = 3;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> weeklyMatchups_;
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> getWeeklyMatchupsList() {
      return weeklyMatchups_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder> 
        getWeeklyMatchupsOrBuilderList() {
      return weeklyMatchups_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    public int getWeeklyMatchupsCount() {
      return weeklyMatchups_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups getWeeklyMatchups(int index) {
      return weeklyMatchups_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder getWeeklyMatchupsOrBuilder(
        int index) {
      return weeklyMatchups_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyLeagueId_);
      }
      for (int i = 0; i < weeklyMatchups_.size(); i++) {
        output.writeMessage(3, weeklyMatchups_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyLeagueId_);
      }
      for (int i = 0; i < weeklyMatchups_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, weeklyMatchups_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && getWeeklyMatchupsList()
          .equals(other.getWeeklyMatchupsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (getWeeklyMatchupsCount() > 0) {
        hash = (37 * hash) + WEEKLY_MATCHUPS_FIELD_NUMBER;
        hash = (53 * hash) + getWeeklyMatchupsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueMatchupsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueMatchupsResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWeeklyMatchupsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (weeklyMatchupsBuilder_ == null) {
          weeklyMatchups_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          weeklyMatchupsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (weeklyMatchupsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            weeklyMatchups_ = java.util.Collections.unmodifiableList(weeklyMatchups_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.weeklyMatchups_ = weeklyMatchups_;
        } else {
          result.weeklyMatchups_ = weeklyMatchupsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (weeklyMatchupsBuilder_ == null) {
          if (!other.weeklyMatchups_.isEmpty()) {
            if (weeklyMatchups_.isEmpty()) {
              weeklyMatchups_ = other.weeklyMatchups_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureWeeklyMatchupsIsMutable();
              weeklyMatchups_.addAll(other.weeklyMatchups_);
            }
            onChanged();
          }
        } else {
          if (!other.weeklyMatchups_.isEmpty()) {
            if (weeklyMatchupsBuilder_.isEmpty()) {
              weeklyMatchupsBuilder_.dispose();
              weeklyMatchupsBuilder_ = null;
              weeklyMatchups_ = other.weeklyMatchups_;
              bitField0_ = (bitField0_ & ~0x00000004);
              weeklyMatchupsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWeeklyMatchupsFieldBuilder() : null;
            } else {
              weeklyMatchupsBuilder_.addAllMessages(other.weeklyMatchups_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueMatchupsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000002;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> weeklyMatchups_ =
        java.util.Collections.emptyList();
      private void ensureWeeklyMatchupsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          weeklyMatchups_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups>(weeklyMatchups_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder> weeklyMatchupsBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> getWeeklyMatchupsList() {
        if (weeklyMatchupsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(weeklyMatchups_);
        } else {
          return weeklyMatchupsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public int getWeeklyMatchupsCount() {
        if (weeklyMatchupsBuilder_ == null) {
          return weeklyMatchups_.size();
        } else {
          return weeklyMatchupsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups getWeeklyMatchups(int index) {
        if (weeklyMatchupsBuilder_ == null) {
          return weeklyMatchups_.get(index);
        } else {
          return weeklyMatchupsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder setWeeklyMatchups(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups value) {
        if (weeklyMatchupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.set(index, value);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder setWeeklyMatchups(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder builderForValue) {
        if (weeklyMatchupsBuilder_ == null) {
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.set(index, builderForValue.build());
          onChanged();
        } else {
          weeklyMatchupsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder addWeeklyMatchups(MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups value) {
        if (weeklyMatchupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.add(value);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder addWeeklyMatchups(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups value) {
        if (weeklyMatchupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.add(index, value);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder addWeeklyMatchups(
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder builderForValue) {
        if (weeklyMatchupsBuilder_ == null) {
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.add(builderForValue.build());
          onChanged();
        } else {
          weeklyMatchupsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder addWeeklyMatchups(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder builderForValue) {
        if (weeklyMatchupsBuilder_ == null) {
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.add(index, builderForValue.build());
          onChanged();
        } else {
          weeklyMatchupsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder addAllWeeklyMatchups(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups> values) {
        if (weeklyMatchupsBuilder_ == null) {
          ensureWeeklyMatchupsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, weeklyMatchups_);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder clearWeeklyMatchups() {
        if (weeklyMatchupsBuilder_ == null) {
          weeklyMatchups_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public Builder removeWeeklyMatchups(int index) {
        if (weeklyMatchupsBuilder_ == null) {
          ensureWeeklyMatchupsIsMutable();
          weeklyMatchups_.remove(index);
          onChanged();
        } else {
          weeklyMatchupsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder getWeeklyMatchupsBuilder(
          int index) {
        return getWeeklyMatchupsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder getWeeklyMatchupsOrBuilder(
          int index) {
        if (weeklyMatchupsBuilder_ == null) {
          return weeklyMatchups_.get(index);  } else {
          return weeklyMatchupsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder> 
           getWeeklyMatchupsOrBuilderList() {
        if (weeklyMatchupsBuilder_ != null) {
          return weeklyMatchupsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(weeklyMatchups_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder addWeeklyMatchupsBuilder() {
        return getWeeklyMatchupsFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder addWeeklyMatchupsBuilder(
          int index) {
        return getWeeklyMatchupsFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups weekly_matchups = 3;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder> 
           getWeeklyMatchupsBuilderList() {
        return getWeeklyMatchupsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder> 
          getWeeklyMatchupsFieldBuilder() {
        if (weeklyMatchupsBuilder_ == null) {
          weeklyMatchupsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchupsOrBuilder>(
                  weeklyMatchups_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          weeklyMatchups_ = null;
        }
        return weeklyMatchupsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueMatchupsResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueMatchupsResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueMatchupsResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueMatchupsResponse>() {
      public CMsgDOTAFantasyLeagueMatchupsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueMatchupsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueMatchupsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueMatchupsResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueMatchupsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAEditFantasyTeamRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAEditFantasyTeamRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    int getTeamIndex();

    /**
     * <code>optional string team_name = 3;</code>
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 3;</code>
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <code>optional uint64 team_logo = 4;</code>
     */
    boolean hasTeamLogo();
    /**
     * <code>optional uint64 team_logo = 4;</code>
     */
    long getTeamLogo();
  }
  /**
   * Protobuf type {@code CMsgDOTAEditFantasyTeamRequest}
   */
  public  static final class CMsgDOTAEditFantasyTeamRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAEditFantasyTeamRequest)
      CMsgDOTAEditFantasyTeamRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAEditFantasyTeamRequest.newBuilder() to construct.
    private CMsgDOTAEditFantasyTeamRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAEditFantasyTeamRequest() {
      fantasyLeagueId_ = 0;
      teamIndex_ = 0;
      teamName_ = "";
      teamLogo_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAEditFantasyTeamRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              teamIndex_ = input.readUInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              teamName_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              teamLogo_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAEditFantasyTeamRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest.class, MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 2;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    public static final int TEAM_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object teamName_;
    /**
     * <code>optional string team_name = 3;</code>
     */
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string team_name = 3;</code>
     */
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_LOGO_FIELD_NUMBER = 4;
    private long teamLogo_;
    /**
     * <code>optional uint64 team_logo = 4;</code>
     */
    public boolean hasTeamLogo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 team_logo = 4;</code>
     */
    public long getTeamLogo() {
      return teamLogo_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, teamName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, teamLogo_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, teamName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, teamLogo_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest other = (MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasTeamIndex() == other.hasTeamIndex());
      if (hasTeamIndex()) {
        result = result && (getTeamIndex()
            == other.getTeamIndex());
      }
      result = result && (hasTeamName() == other.hasTeamName());
      if (hasTeamName()) {
        result = result && getTeamName()
            .equals(other.getTeamName());
      }
      result = result && (hasTeamLogo() == other.hasTeamLogo());
      if (hasTeamLogo()) {
        result = result && (getTeamLogo()
            == other.getTeamLogo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasTeamIndex()) {
        hash = (37 * hash) + TEAM_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTeamIndex();
      }
      if (hasTeamName()) {
        hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTeamName().hashCode();
      }
      if (hasTeamLogo()) {
        hash = (37 * hash) + TEAM_LOGO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTeamLogo());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAEditFantasyTeamRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAEditFantasyTeamRequest)
        MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAEditFantasyTeamRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest.class, MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        teamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        teamLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest build() {
        MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest result = new MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex_ = teamIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.teamName_ = teamName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamLogo_ = teamLogo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        if (other.hasTeamName()) {
          bitField0_ |= 0x00000004;
          teamName_ = other.teamName_;
          onChanged();
        }
        if (other.hasTeamLogo()) {
          setTeamLogo(other.getTeamLogo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 3;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder clearTeamName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        teamName_ = value;
        onChanged();
        return this;
      }

      private long teamLogo_ ;
      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      public boolean hasTeamLogo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      public long getTeamLogo() {
        return teamLogo_;
      }
      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      public Builder setTeamLogo(long value) {
        bitField0_ |= 0x00000008;
        teamLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      public Builder clearTeamLogo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamLogo_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAEditFantasyTeamRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAEditFantasyTeamRequest)
    private static final MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAEditFantasyTeamRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAEditFantasyTeamRequest>() {
      public CMsgDOTAEditFantasyTeamRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAEditFantasyTeamRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAEditFantasyTeamRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAEditFantasyTeamRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAEditFantasyTeamRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAEditFantasyTeamResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAEditFantasyTeamResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAEditFantasyTeamResponse}
   */
  public  static final class CMsgDOTAEditFantasyTeamResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAEditFantasyTeamResponse)
      CMsgDOTAEditFantasyTeamResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAEditFantasyTeamResponse.newBuilder() to construct.
    private CMsgDOTAEditFantasyTeamResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAEditFantasyTeamResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAEditFantasyTeamResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult value = MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAEditFantasyTeamResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.class, MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAEditFantasyTeamResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_INVALID_TEAM_INFO = 2;</code>
       */
      ERROR_INVALID_TEAM_INFO(2),
      /**
       * <code>ERROR_NAME_ALREADY_TAKEN = 3;</code>
       */
      ERROR_NAME_ALREADY_TAKEN(3),
      /**
       * <code>ERROR_NO_PERMISSION = 4;</code>
       */
      ERROR_NO_PERMISSION(4),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_INVALID_TEAM_INFO = 2;</code>
       */
      public static final int ERROR_INVALID_TEAM_INFO_VALUE = 2;
      /**
       * <code>ERROR_NAME_ALREADY_TAKEN = 3;</code>
       */
      public static final int ERROR_NAME_ALREADY_TAKEN_VALUE = 3;
      /**
       * <code>ERROR_NO_PERMISSION = 4;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_INVALID_TEAM_INFO;
          case 3: return ERROR_NAME_ALREADY_TAKEN;
          case 4: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAEditFantasyTeamResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult result = MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse other = (MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAEditFantasyTeamResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAEditFantasyTeamResponse)
        MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAEditFantasyTeamResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.class, MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse build() {
        MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse result = new MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult result = MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAEditFantasyTeamResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAEditFantasyTeamResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAEditFantasyTeamResponse)
    private static final MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAEditFantasyTeamResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAEditFantasyTeamResponse>() {
      public CMsgDOTAEditFantasyTeamResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAEditFantasyTeamResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAEditFantasyTeamResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAEditFantasyTeamResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAEditFantasyTeamResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueIDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID}
   */
  public  static final class CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)
      CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueIDOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.newBuilder() to construct.
    private CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID() {
      fantasyLeagueId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueIDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID>() {
      public CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamInfoRequestByOwnerAccountIDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 owner_account_id = 1;</code>
     */
    boolean hasOwnerAccountId();
    /**
     * <code>optional uint32 owner_account_id = 1;</code>
     */
    int getOwnerAccountId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID}
   */
  public  static final class CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)
      CMsgDOTAFantasyTeamInfoRequestByOwnerAccountIDOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.newBuilder() to construct.
    private CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID() {
      ownerAccountId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ownerAccountId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.Builder.class);
    }

    private int bitField0_;
    public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 1;
    private int ownerAccountId_;
    /**
     * <code>optional uint32 owner_account_id = 1;</code>
     */
    public boolean hasOwnerAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 owner_account_id = 1;</code>
     */
    public int getOwnerAccountId() {
      return ownerAccountId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, ownerAccountId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ownerAccountId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) obj;

      boolean result = true;
      result = result && (hasOwnerAccountId() == other.hasOwnerAccountId());
      if (hasOwnerAccountId()) {
        result = result && (getOwnerAccountId()
            == other.getOwnerAccountId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOwnerAccountId()) {
        hash = (37 * hash) + OWNER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getOwnerAccountId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountIDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        ownerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ownerAccountId_ = ownerAccountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.getDefaultInstance()) return this;
        if (other.hasOwnerAccountId()) {
          setOwnerAccountId(other.getOwnerAccountId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int ownerAccountId_ ;
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public Builder setOwnerAccountId(int value) {
        bitField0_ |= 0x00000001;
        ownerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id = 1;</code>
       */
      public Builder clearOwnerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ownerAccountId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID>() {
      public CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo> 
        getResultsList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo getResults(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    int getResultsCount();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoOrBuilder> 
        getResultsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoOrBuilder getResultsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamInfoResponse}
   */
  public  static final class CMsgDOTAFantasyTeamInfoResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamInfoResponse)
      CMsgDOTAFantasyTeamInfoResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamInfoResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamInfoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamInfoResponse() {
      results_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                results_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              results_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = java.util.Collections.unmodifiableList(results_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse.Builder.class);
    }

    public static final int RESULTS_FIELD_NUMBER = 1;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo> results_;
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo> getResultsList() {
      return results_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoOrBuilder> 
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo getResults(int index) {
      return results_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(1, results_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, results_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse) obj;

      boolean result = true;
      result = result && getResultsList()
          .equals(other.getResultsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getResultsCount() > 0) {
        hash = (37 * hash) + RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getResultsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamInfoResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getResultsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse(this);
        int from_bitField0_ = bitField0_;
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse.getDefaultInstance()) return this;
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resultsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo>(results_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoOrBuilder> resultsBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo> getResultsList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder setResults(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder setResults(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder addResults(MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder addResults(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder addResults(
          MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder addResults(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder addAllResults(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoOrBuilder> 
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamInfo results = 1;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder> 
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoOrBuilder> 
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamInfoResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamInfoResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamInfoResponse>() {
      public CMsgDOTAFantasyTeamInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamInfoResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfoResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    boolean hasOwnerAccountId();
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    int getOwnerAccountId();

    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    boolean hasFantasyTeamIndex();
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    int getFantasyTeamIndex();

    /**
     * <code>optional string team_name = 4;</code>
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 4;</code>
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    boolean hasTeamLogo();
    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    long getTeamLogo();

    /**
     * <code>optional uint32 wins = 6;</code>
     */
    boolean hasWins();
    /**
     * <code>optional uint32 wins = 6;</code>
     */
    int getWins();

    /**
     * <code>optional uint32 losses = 7;</code>
     */
    boolean hasLosses();
    /**
     * <code>optional uint32 losses = 7;</code>
     */
    int getLosses();

    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    java.util.List<java.lang.Integer> getCurrentRosterList();
    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    int getCurrentRosterCount();
    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    int getCurrentRoster(int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamInfo}
   */
  public  static final class CMsgDOTAFantasyTeamInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamInfo)
      CMsgDOTAFantasyTeamInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamInfo.newBuilder() to construct.
    private CMsgDOTAFantasyTeamInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamInfo() {
      fantasyLeagueId_ = 0;
      ownerAccountId_ = 0;
      fantasyTeamIndex_ = 0;
      teamName_ = "";
      teamLogo_ = 0L;
      wins_ = 0;
      losses_ = 0;
      currentRoster_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ownerAccountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fantasyTeamIndex_ = input.readUInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              teamName_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              teamLogo_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              wins_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              losses_ = input.readUInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                currentRoster_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              currentRoster_.add(input.readUInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                currentRoster_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                currentRoster_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          currentRoster_ = java.util.Collections.unmodifiableList(currentRoster_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int ownerAccountId_;
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public boolean hasOwnerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public int getOwnerAccountId() {
      return ownerAccountId_;
    }

    public static final int FANTASY_TEAM_INDEX_FIELD_NUMBER = 3;
    private int fantasyTeamIndex_;
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    public boolean hasFantasyTeamIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    public int getFantasyTeamIndex() {
      return fantasyTeamIndex_;
    }

    public static final int TEAM_NAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object teamName_;
    /**
     * <code>optional string team_name = 4;</code>
     */
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string team_name = 4;</code>
     */
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_LOGO_FIELD_NUMBER = 5;
    private long teamLogo_;
    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    public boolean hasTeamLogo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    public long getTeamLogo() {
      return teamLogo_;
    }

    public static final int WINS_FIELD_NUMBER = 6;
    private int wins_;
    /**
     * <code>optional uint32 wins = 6;</code>
     */
    public boolean hasWins() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 wins = 6;</code>
     */
    public int getWins() {
      return wins_;
    }

    public static final int LOSSES_FIELD_NUMBER = 7;
    private int losses_;
    /**
     * <code>optional uint32 losses = 7;</code>
     */
    public boolean hasLosses() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 losses = 7;</code>
     */
    public int getLosses() {
      return losses_;
    }

    public static final int CURRENT_ROSTER_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> currentRoster_;
    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getCurrentRosterList() {
      return currentRoster_;
    }
    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    public int getCurrentRosterCount() {
      return currentRoster_.size();
    }
    /**
     * <code>repeated uint32 current_roster = 8;</code>
     */
    public int getCurrentRoster(int index) {
      return currentRoster_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, fantasyTeamIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, teamName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, teamLogo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, wins_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, losses_);
      }
      for (int i = 0; i < currentRoster_.size(); i++) {
        output.writeUInt32(8, currentRoster_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, fantasyTeamIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, teamName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, teamLogo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, wins_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, losses_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < currentRoster_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(currentRoster_.get(i));
        }
        size += dataSize;
        size += 1 * getCurrentRosterList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasOwnerAccountId() == other.hasOwnerAccountId());
      if (hasOwnerAccountId()) {
        result = result && (getOwnerAccountId()
            == other.getOwnerAccountId());
      }
      result = result && (hasFantasyTeamIndex() == other.hasFantasyTeamIndex());
      if (hasFantasyTeamIndex()) {
        result = result && (getFantasyTeamIndex()
            == other.getFantasyTeamIndex());
      }
      result = result && (hasTeamName() == other.hasTeamName());
      if (hasTeamName()) {
        result = result && getTeamName()
            .equals(other.getTeamName());
      }
      result = result && (hasTeamLogo() == other.hasTeamLogo());
      if (hasTeamLogo()) {
        result = result && (getTeamLogo()
            == other.getTeamLogo());
      }
      result = result && (hasWins() == other.hasWins());
      if (hasWins()) {
        result = result && (getWins()
            == other.getWins());
      }
      result = result && (hasLosses() == other.hasLosses());
      if (hasLosses()) {
        result = result && (getLosses()
            == other.getLosses());
      }
      result = result && getCurrentRosterList()
          .equals(other.getCurrentRosterList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasOwnerAccountId()) {
        hash = (37 * hash) + OWNER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getOwnerAccountId();
      }
      if (hasFantasyTeamIndex()) {
        hash = (37 * hash) + FANTASY_TEAM_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyTeamIndex();
      }
      if (hasTeamName()) {
        hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTeamName().hashCode();
      }
      if (hasTeamLogo()) {
        hash = (37 * hash) + TEAM_LOGO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTeamLogo());
      }
      if (hasWins()) {
        hash = (37 * hash) + WINS_FIELD_NUMBER;
        hash = (53 * hash) + getWins();
      }
      if (hasLosses()) {
        hash = (37 * hash) + LOSSES_FIELD_NUMBER;
        hash = (53 * hash) + getLosses();
      }
      if (getCurrentRosterCount() > 0) {
        hash = (37 * hash) + CURRENT_ROSTER_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentRosterList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamInfo)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ownerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyTeamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        teamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        teamLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        wins_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        losses_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        currentRoster_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamInfo_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ownerAccountId_ = ownerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fantasyTeamIndex_ = fantasyTeamIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamName_ = teamName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.teamLogo_ = teamLogo_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.wins_ = wins_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.losses_ = losses_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          currentRoster_ = java.util.Collections.unmodifiableList(currentRoster_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.currentRoster_ = currentRoster_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasOwnerAccountId()) {
          setOwnerAccountId(other.getOwnerAccountId());
        }
        if (other.hasFantasyTeamIndex()) {
          setFantasyTeamIndex(other.getFantasyTeamIndex());
        }
        if (other.hasTeamName()) {
          bitField0_ |= 0x00000008;
          teamName_ = other.teamName_;
          onChanged();
        }
        if (other.hasTeamLogo()) {
          setTeamLogo(other.getTeamLogo());
        }
        if (other.hasWins()) {
          setWins(other.getWins());
        }
        if (other.hasLosses()) {
          setLosses(other.getLosses());
        }
        if (!other.currentRoster_.isEmpty()) {
          if (currentRoster_.isEmpty()) {
            currentRoster_ = other.currentRoster_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCurrentRosterIsMutable();
            currentRoster_.addAll(other.currentRoster_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int ownerAccountId_ ;
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder setOwnerAccountId(int value) {
        bitField0_ |= 0x00000002;
        ownerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder clearOwnerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int fantasyTeamIndex_ ;
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public boolean hasFantasyTeamIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public int getFantasyTeamIndex() {
        return fantasyTeamIndex_;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public Builder setFantasyTeamIndex(int value) {
        bitField0_ |= 0x00000004;
        fantasyTeamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public Builder clearFantasyTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fantasyTeamIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 4;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder clearTeamName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        teamName_ = value;
        onChanged();
        return this;
      }

      private long teamLogo_ ;
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public boolean hasTeamLogo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public long getTeamLogo() {
        return teamLogo_;
      }
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public Builder setTeamLogo(long value) {
        bitField0_ |= 0x00000010;
        teamLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public Builder clearTeamLogo() {
        bitField0_ = (bitField0_ & ~0x00000010);
        teamLogo_ = 0L;
        onChanged();
        return this;
      }

      private int wins_ ;
      /**
       * <code>optional uint32 wins = 6;</code>
       */
      public boolean hasWins() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 wins = 6;</code>
       */
      public int getWins() {
        return wins_;
      }
      /**
       * <code>optional uint32 wins = 6;</code>
       */
      public Builder setWins(int value) {
        bitField0_ |= 0x00000020;
        wins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 wins = 6;</code>
       */
      public Builder clearWins() {
        bitField0_ = (bitField0_ & ~0x00000020);
        wins_ = 0;
        onChanged();
        return this;
      }

      private int losses_ ;
      /**
       * <code>optional uint32 losses = 7;</code>
       */
      public boolean hasLosses() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 losses = 7;</code>
       */
      public int getLosses() {
        return losses_;
      }
      /**
       * <code>optional uint32 losses = 7;</code>
       */
      public Builder setLosses(int value) {
        bitField0_ |= 0x00000040;
        losses_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 losses = 7;</code>
       */
      public Builder clearLosses() {
        bitField0_ = (bitField0_ & ~0x00000040);
        losses_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> currentRoster_ = java.util.Collections.emptyList();
      private void ensureCurrentRosterIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          currentRoster_ = new java.util.ArrayList<java.lang.Integer>(currentRoster_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getCurrentRosterList() {
        return java.util.Collections.unmodifiableList(currentRoster_);
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public int getCurrentRosterCount() {
        return currentRoster_.size();
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public int getCurrentRoster(int index) {
        return currentRoster_.get(index);
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public Builder setCurrentRoster(
          int index, int value) {
        ensureCurrentRosterIsMutable();
        currentRoster_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public Builder addCurrentRoster(int value) {
        ensureCurrentRosterIsMutable();
        currentRoster_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public Builder addAllCurrentRoster(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCurrentRosterIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, currentRoster_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 current_roster = 8;</code>
       */
      public Builder clearCurrentRoster() {
        currentRoster_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamInfo)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamInfo)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfo>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamInfo>() {
      public CMsgDOTAFantasyTeamInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamInfo> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamScoreRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamScoreRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    boolean hasOwnerAccountId();
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    int getOwnerAccountId();

    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    boolean hasFantasyTeamIndex();
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    int getFantasyTeamIndex();

    /**
     * <code>optional uint64 filter_match_id = 4;</code>
     */
    boolean hasFilterMatchId();
    /**
     * <code>optional uint64 filter_match_id = 4;</code>
     */
    long getFilterMatchId();

    /**
     * <code>optional uint32 filter_start_time = 5;</code>
     */
    boolean hasFilterStartTime();
    /**
     * <code>optional uint32 filter_start_time = 5;</code>
     */
    int getFilterStartTime();

    /**
     * <code>optional uint32 filter_end_time = 6;</code>
     */
    boolean hasFilterEndTime();
    /**
     * <code>optional uint32 filter_end_time = 6;</code>
     */
    int getFilterEndTime();

    /**
     * <code>optional bool include_bench = 7;</code>
     */
    boolean hasIncludeBench();
    /**
     * <code>optional bool include_bench = 7;</code>
     */
    boolean getIncludeBench();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamScoreRequest}
   */
  public  static final class CMsgDOTAFantasyTeamScoreRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamScoreRequest)
      CMsgDOTAFantasyTeamScoreRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamScoreRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamScoreRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamScoreRequest() {
      fantasyLeagueId_ = 0;
      ownerAccountId_ = 0;
      fantasyTeamIndex_ = 0;
      filterMatchId_ = 0L;
      filterStartTime_ = 0;
      filterEndTime_ = 0;
      includeBench_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamScoreRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ownerAccountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fantasyTeamIndex_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              filterMatchId_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              filterStartTime_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              filterEndTime_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              includeBench_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int ownerAccountId_;
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public boolean hasOwnerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public int getOwnerAccountId() {
      return ownerAccountId_;
    }

    public static final int FANTASY_TEAM_INDEX_FIELD_NUMBER = 3;
    private int fantasyTeamIndex_;
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    public boolean hasFantasyTeamIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 fantasy_team_index = 3;</code>
     */
    public int getFantasyTeamIndex() {
      return fantasyTeamIndex_;
    }

    public static final int FILTER_MATCH_ID_FIELD_NUMBER = 4;
    private long filterMatchId_;
    /**
     * <code>optional uint64 filter_match_id = 4;</code>
     */
    public boolean hasFilterMatchId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 filter_match_id = 4;</code>
     */
    public long getFilterMatchId() {
      return filterMatchId_;
    }

    public static final int FILTER_START_TIME_FIELD_NUMBER = 5;
    private int filterStartTime_;
    /**
     * <code>optional uint32 filter_start_time = 5;</code>
     */
    public boolean hasFilterStartTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 filter_start_time = 5;</code>
     */
    public int getFilterStartTime() {
      return filterStartTime_;
    }

    public static final int FILTER_END_TIME_FIELD_NUMBER = 6;
    private int filterEndTime_;
    /**
     * <code>optional uint32 filter_end_time = 6;</code>
     */
    public boolean hasFilterEndTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 filter_end_time = 6;</code>
     */
    public int getFilterEndTime() {
      return filterEndTime_;
    }

    public static final int INCLUDE_BENCH_FIELD_NUMBER = 7;
    private boolean includeBench_;
    /**
     * <code>optional bool include_bench = 7;</code>
     */
    public boolean hasIncludeBench() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool include_bench = 7;</code>
     */
    public boolean getIncludeBench() {
      return includeBench_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, fantasyTeamIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, filterMatchId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, filterStartTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, filterEndTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, includeBench_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, fantasyTeamIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, filterMatchId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, filterStartTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, filterEndTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, includeBench_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasOwnerAccountId() == other.hasOwnerAccountId());
      if (hasOwnerAccountId()) {
        result = result && (getOwnerAccountId()
            == other.getOwnerAccountId());
      }
      result = result && (hasFantasyTeamIndex() == other.hasFantasyTeamIndex());
      if (hasFantasyTeamIndex()) {
        result = result && (getFantasyTeamIndex()
            == other.getFantasyTeamIndex());
      }
      result = result && (hasFilterMatchId() == other.hasFilterMatchId());
      if (hasFilterMatchId()) {
        result = result && (getFilterMatchId()
            == other.getFilterMatchId());
      }
      result = result && (hasFilterStartTime() == other.hasFilterStartTime());
      if (hasFilterStartTime()) {
        result = result && (getFilterStartTime()
            == other.getFilterStartTime());
      }
      result = result && (hasFilterEndTime() == other.hasFilterEndTime());
      if (hasFilterEndTime()) {
        result = result && (getFilterEndTime()
            == other.getFilterEndTime());
      }
      result = result && (hasIncludeBench() == other.hasIncludeBench());
      if (hasIncludeBench()) {
        result = result && (getIncludeBench()
            == other.getIncludeBench());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasOwnerAccountId()) {
        hash = (37 * hash) + OWNER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getOwnerAccountId();
      }
      if (hasFantasyTeamIndex()) {
        hash = (37 * hash) + FANTASY_TEAM_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyTeamIndex();
      }
      if (hasFilterMatchId()) {
        hash = (37 * hash) + FILTER_MATCH_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFilterMatchId());
      }
      if (hasFilterStartTime()) {
        hash = (37 * hash) + FILTER_START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getFilterStartTime();
      }
      if (hasFilterEndTime()) {
        hash = (37 * hash) + FILTER_END_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getFilterEndTime();
      }
      if (hasIncludeBench()) {
        hash = (37 * hash) + INCLUDE_BENCH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIncludeBench());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamScoreRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamScoreRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ownerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyTeamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        filterMatchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        filterStartTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        filterEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        includeBench_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ownerAccountId_ = ownerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fantasyTeamIndex_ = fantasyTeamIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.filterMatchId_ = filterMatchId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.filterStartTime_ = filterStartTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.filterEndTime_ = filterEndTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.includeBench_ = includeBench_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasOwnerAccountId()) {
          setOwnerAccountId(other.getOwnerAccountId());
        }
        if (other.hasFantasyTeamIndex()) {
          setFantasyTeamIndex(other.getFantasyTeamIndex());
        }
        if (other.hasFilterMatchId()) {
          setFilterMatchId(other.getFilterMatchId());
        }
        if (other.hasFilterStartTime()) {
          setFilterStartTime(other.getFilterStartTime());
        }
        if (other.hasFilterEndTime()) {
          setFilterEndTime(other.getFilterEndTime());
        }
        if (other.hasIncludeBench()) {
          setIncludeBench(other.getIncludeBench());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int ownerAccountId_ ;
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder setOwnerAccountId(int value) {
        bitField0_ |= 0x00000002;
        ownerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder clearOwnerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int fantasyTeamIndex_ ;
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public boolean hasFantasyTeamIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public int getFantasyTeamIndex() {
        return fantasyTeamIndex_;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public Builder setFantasyTeamIndex(int value) {
        bitField0_ |= 0x00000004;
        fantasyTeamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public Builder clearFantasyTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fantasyTeamIndex_ = 0;
        onChanged();
        return this;
      }

      private long filterMatchId_ ;
      /**
       * <code>optional uint64 filter_match_id = 4;</code>
       */
      public boolean hasFilterMatchId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 filter_match_id = 4;</code>
       */
      public long getFilterMatchId() {
        return filterMatchId_;
      }
      /**
       * <code>optional uint64 filter_match_id = 4;</code>
       */
      public Builder setFilterMatchId(long value) {
        bitField0_ |= 0x00000008;
        filterMatchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 filter_match_id = 4;</code>
       */
      public Builder clearFilterMatchId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        filterMatchId_ = 0L;
        onChanged();
        return this;
      }

      private int filterStartTime_ ;
      /**
       * <code>optional uint32 filter_start_time = 5;</code>
       */
      public boolean hasFilterStartTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 filter_start_time = 5;</code>
       */
      public int getFilterStartTime() {
        return filterStartTime_;
      }
      /**
       * <code>optional uint32 filter_start_time = 5;</code>
       */
      public Builder setFilterStartTime(int value) {
        bitField0_ |= 0x00000010;
        filterStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_start_time = 5;</code>
       */
      public Builder clearFilterStartTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        filterStartTime_ = 0;
        onChanged();
        return this;
      }

      private int filterEndTime_ ;
      /**
       * <code>optional uint32 filter_end_time = 6;</code>
       */
      public boolean hasFilterEndTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 filter_end_time = 6;</code>
       */
      public int getFilterEndTime() {
        return filterEndTime_;
      }
      /**
       * <code>optional uint32 filter_end_time = 6;</code>
       */
      public Builder setFilterEndTime(int value) {
        bitField0_ |= 0x00000020;
        filterEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_end_time = 6;</code>
       */
      public Builder clearFilterEndTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        filterEndTime_ = 0;
        onChanged();
        return this;
      }

      private boolean includeBench_ ;
      /**
       * <code>optional bool include_bench = 7;</code>
       */
      public boolean hasIncludeBench() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool include_bench = 7;</code>
       */
      public boolean getIncludeBench() {
        return includeBench_;
      }
      /**
       * <code>optional bool include_bench = 7;</code>
       */
      public Builder setIncludeBench(boolean value) {
        bitField0_ |= 0x00000040;
        includeBench_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_bench = 7;</code>
       */
      public Builder clearIncludeBench() {
        bitField0_ = (bitField0_ & ~0x00000040);
        includeBench_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamScoreRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamScoreRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamScoreRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamScoreRequest>() {
      public CMsgDOTAFantasyTeamScoreRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamScoreRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamScoreRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamScoreRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamScoreResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamScoreResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult getResult();

    /**
     * <code>optional float fantasy_team_score = 2;</code>
     */
    boolean hasFantasyTeamScore();
    /**
     * <code>optional float fantasy_team_score = 2;</code>
     */
    float getFantasyTeamScore();

    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> 
        getFantasyPlayerScoreList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore getFantasyPlayerScore(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    int getFantasyPlayerScoreCount();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder> 
        getFantasyPlayerScoreOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder getFantasyPlayerScoreOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamScoreResponse}
   */
  public  static final class CMsgDOTAFantasyTeamScoreResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamScoreResponse)
      CMsgDOTAFantasyTeamScoreResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamScoreResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamScoreResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamScoreResponse() {
      result_ = 0;
      fantasyTeamScore_ = 0F;
      fantasyPlayerScore_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamScoreResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              fantasyTeamScore_ = input.readFloat();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                fantasyPlayerScore_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore>();
                mutable_bitField0_ |= 0x00000004;
              }
              fantasyPlayerScore_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          fantasyPlayerScore_ = java.util.Collections.unmodifiableList(fantasyPlayerScore_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamScoreResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2),
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 3;</code>
       */
      ERROR_OWNER_NOT_IN_LEAGUE(3),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 3;</code>
       */
      public static final int ERROR_OWNER_NOT_IN_LEAGUE_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          case 3: return ERROR_OWNER_NOT_IN_LEAGUE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamScoreResponse.EResult)
    }

    public interface CMsgPlayerScoreOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      int getAccountId();

      /**
       * <code>optional float score = 2;</code>
       */
      boolean hasScore();
      /**
       * <code>optional float score = 2;</code>
       */
      float getScore();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore}
     */
    public  static final class CMsgPlayerScore extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)
        CMsgPlayerScoreOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CMsgPlayerScore.newBuilder() to construct.
      private CMsgPlayerScore(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CMsgPlayerScore() {
        accountId_ = 0;
        score_ = 0F;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CMsgPlayerScore(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readUInt32();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                score_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder.class);
      }

      private int bitField0_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      public static final int SCORE_FIELD_NUMBER = 2;
      private float score_;
      /**
       * <code>optional float score = 2;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float score = 2;</code>
       */
      public float getScore() {
        return score_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, score_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, score_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore) obj;

        boolean result = true;
        result = result && (hasAccountId() == other.hasAccountId());
        if (hasAccountId()) {
          result = result && (getAccountId()
              == other.getAccountId());
        }
        result = result && (hasScore() == other.hasScore());
        if (hasScore()) {
          result = result && (
              java.lang.Float.floatToIntBits(getScore())
              == java.lang.Float.floatToIntBits(
                  other.getScore()));
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasAccountId()) {
          hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getAccountId();
        }
        if (hasScore()) {
          hash = (37 * hash) + SCORE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getScore());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)
          MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          score_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore build() {
          MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.score_ = score_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private float score_ ;
        /**
         * <code>optional float score = 2;</code>
         */
        public boolean hasScore() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float score = 2;</code>
         */
        public float getScore() {
          return score_;
        }
        /**
         * <code>optional float score = 2;</code>
         */
        public Builder setScore(float value) {
          bitField0_ |= 0x00000002;
          score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score = 2;</code>
         */
        public Builder clearScore() {
          bitField0_ = (bitField0_ & ~0x00000002);
          score_ = 0F;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgPlayerScore>
          PARSER = new com.google.protobuf.AbstractParser<CMsgPlayerScore>() {
        public CMsgPlayerScore parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new CMsgPlayerScore(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CMsgPlayerScore> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CMsgPlayerScore> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult.SUCCESS : result;
    }

    public static final int FANTASY_TEAM_SCORE_FIELD_NUMBER = 2;
    private float fantasyTeamScore_;
    /**
     * <code>optional float fantasy_team_score = 2;</code>
     */
    public boolean hasFantasyTeamScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float fantasy_team_score = 2;</code>
     */
    public float getFantasyTeamScore() {
      return fantasyTeamScore_;
    }

    public static final int FANTASY_PLAYER_SCORE_FIELD_NUMBER = 3;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> fantasyPlayerScore_;
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> getFantasyPlayerScoreList() {
      return fantasyPlayerScore_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder> 
        getFantasyPlayerScoreOrBuilderList() {
      return fantasyPlayerScore_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    public int getFantasyPlayerScoreCount() {
      return fantasyPlayerScore_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore getFantasyPlayerScore(int index) {
      return fantasyPlayerScore_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder getFantasyPlayerScoreOrBuilder(
        int index) {
      return fantasyPlayerScore_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, fantasyTeamScore_);
      }
      for (int i = 0; i < fantasyPlayerScore_.size(); i++) {
        output.writeMessage(3, fantasyPlayerScore_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, fantasyTeamScore_);
      }
      for (int i = 0; i < fantasyPlayerScore_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fantasyPlayerScore_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && (hasFantasyTeamScore() == other.hasFantasyTeamScore());
      if (hasFantasyTeamScore()) {
        result = result && (
            java.lang.Float.floatToIntBits(getFantasyTeamScore())
            == java.lang.Float.floatToIntBits(
                other.getFantasyTeamScore()));
      }
      result = result && getFantasyPlayerScoreList()
          .equals(other.getFantasyPlayerScoreList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasFantasyTeamScore()) {
        hash = (37 * hash) + FANTASY_TEAM_SCORE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFantasyTeamScore());
      }
      if (getFantasyPlayerScoreCount() > 0) {
        hash = (37 * hash) + FANTASY_PLAYER_SCORE_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyPlayerScoreList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamScoreResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamScoreResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFantasyPlayerScoreFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyTeamScore_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (fantasyPlayerScoreBuilder_ == null) {
          fantasyPlayerScore_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          fantasyPlayerScoreBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyTeamScore_ = fantasyTeamScore_;
        if (fantasyPlayerScoreBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            fantasyPlayerScore_ = java.util.Collections.unmodifiableList(fantasyPlayerScore_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.fantasyPlayerScore_ = fantasyPlayerScore_;
        } else {
          result.fantasyPlayerScore_ = fantasyPlayerScoreBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyTeamScore()) {
          setFantasyTeamScore(other.getFantasyTeamScore());
        }
        if (fantasyPlayerScoreBuilder_ == null) {
          if (!other.fantasyPlayerScore_.isEmpty()) {
            if (fantasyPlayerScore_.isEmpty()) {
              fantasyPlayerScore_ = other.fantasyPlayerScore_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureFantasyPlayerScoreIsMutable();
              fantasyPlayerScore_.addAll(other.fantasyPlayerScore_);
            }
            onChanged();
          }
        } else {
          if (!other.fantasyPlayerScore_.isEmpty()) {
            if (fantasyPlayerScoreBuilder_.isEmpty()) {
              fantasyPlayerScoreBuilder_.dispose();
              fantasyPlayerScoreBuilder_ = null;
              fantasyPlayerScore_ = other.fantasyPlayerScore_;
              bitField0_ = (bitField0_ & ~0x00000004);
              fantasyPlayerScoreBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFantasyPlayerScoreFieldBuilder() : null;
            } else {
              fantasyPlayerScoreBuilder_.addAllMessages(other.fantasyPlayerScore_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private float fantasyTeamScore_ ;
      /**
       * <code>optional float fantasy_team_score = 2;</code>
       */
      public boolean hasFantasyTeamScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float fantasy_team_score = 2;</code>
       */
      public float getFantasyTeamScore() {
        return fantasyTeamScore_;
      }
      /**
       * <code>optional float fantasy_team_score = 2;</code>
       */
      public Builder setFantasyTeamScore(float value) {
        bitField0_ |= 0x00000002;
        fantasyTeamScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fantasy_team_score = 2;</code>
       */
      public Builder clearFantasyTeamScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyTeamScore_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> fantasyPlayerScore_ =
        java.util.Collections.emptyList();
      private void ensureFantasyPlayerScoreIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          fantasyPlayerScore_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore>(fantasyPlayerScore_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder> fantasyPlayerScoreBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> getFantasyPlayerScoreList() {
        if (fantasyPlayerScoreBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fantasyPlayerScore_);
        } else {
          return fantasyPlayerScoreBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public int getFantasyPlayerScoreCount() {
        if (fantasyPlayerScoreBuilder_ == null) {
          return fantasyPlayerScore_.size();
        } else {
          return fantasyPlayerScoreBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore getFantasyPlayerScore(int index) {
        if (fantasyPlayerScoreBuilder_ == null) {
          return fantasyPlayerScore_.get(index);
        } else {
          return fantasyPlayerScoreBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder setFantasyPlayerScore(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore value) {
        if (fantasyPlayerScoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.set(index, value);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder setFantasyPlayerScore(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder builderForValue) {
        if (fantasyPlayerScoreBuilder_ == null) {
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.set(index, builderForValue.build());
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder addFantasyPlayerScore(MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore value) {
        if (fantasyPlayerScoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.add(value);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder addFantasyPlayerScore(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore value) {
        if (fantasyPlayerScoreBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.add(index, value);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder addFantasyPlayerScore(
          MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder builderForValue) {
        if (fantasyPlayerScoreBuilder_ == null) {
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.add(builderForValue.build());
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder addFantasyPlayerScore(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder builderForValue) {
        if (fantasyPlayerScoreBuilder_ == null) {
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.add(index, builderForValue.build());
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder addAllFantasyPlayerScore(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore> values) {
        if (fantasyPlayerScoreBuilder_ == null) {
          ensureFantasyPlayerScoreIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fantasyPlayerScore_);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder clearFantasyPlayerScore() {
        if (fantasyPlayerScoreBuilder_ == null) {
          fantasyPlayerScore_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public Builder removeFantasyPlayerScore(int index) {
        if (fantasyPlayerScoreBuilder_ == null) {
          ensureFantasyPlayerScoreIsMutable();
          fantasyPlayerScore_.remove(index);
          onChanged();
        } else {
          fantasyPlayerScoreBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder getFantasyPlayerScoreBuilder(
          int index) {
        return getFantasyPlayerScoreFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder getFantasyPlayerScoreOrBuilder(
          int index) {
        if (fantasyPlayerScoreBuilder_ == null) {
          return fantasyPlayerScore_.get(index);  } else {
          return fantasyPlayerScoreBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder> 
           getFantasyPlayerScoreOrBuilderList() {
        if (fantasyPlayerScoreBuilder_ != null) {
          return fantasyPlayerScoreBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fantasyPlayerScore_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder addFantasyPlayerScoreBuilder() {
        return getFantasyPlayerScoreFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder addFantasyPlayerScoreBuilder(
          int index) {
        return getFantasyPlayerScoreFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore fantasy_player_score = 3;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder> 
           getFantasyPlayerScoreBuilderList() {
        return getFantasyPlayerScoreFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder> 
          getFantasyPlayerScoreFieldBuilder() {
        if (fantasyPlayerScoreBuilder_ == null) {
          fantasyPlayerScoreBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScoreOrBuilder>(
                  fantasyPlayerScore_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          fantasyPlayerScore_ = null;
        }
        return fantasyPlayerScoreBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamScoreResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamScoreResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamScoreResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamScoreResponse>() {
      public CMsgDOTAFantasyTeamScoreResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamScoreResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamScoreResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamScoreResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamScoreResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamStandingsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamStandingsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 count = 2;</code>
     */
    boolean hasCount();
    /**
     * <code>optional uint32 count = 2;</code>
     */
    int getCount();

    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    boolean hasFilterStartTime();
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    int getFilterStartTime();

    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    boolean hasFilterEndTime();
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    int getFilterEndTime();

    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    boolean hasFilterMatchId();
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    long getFilterMatchId();

    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    boolean hasFilterLastMatch();
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    boolean getFilterLastMatch();

    /**
     * <code>optional bool filter_in_hall = 7;</code>
     */
    boolean hasFilterInHall();
    /**
     * <code>optional bool filter_in_hall = 7;</code>
     */
    boolean getFilterInHall();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamStandingsRequest}
   */
  public  static final class CMsgDOTAFantasyTeamStandingsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamStandingsRequest)
      CMsgDOTAFantasyTeamStandingsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamStandingsRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamStandingsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamStandingsRequest() {
      fantasyLeagueId_ = 0;
      count_ = 0;
      filterStartTime_ = 0;
      filterEndTime_ = 0;
      filterMatchId_ = 0L;
      filterLastMatch_ = false;
      filterInHall_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamStandingsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              filterStartTime_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              filterEndTime_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              filterMatchId_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              filterLastMatch_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              filterInHall_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>optional uint32 count = 2;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 count = 2;</code>
     */
    public int getCount() {
      return count_;
    }

    public static final int FILTER_START_TIME_FIELD_NUMBER = 3;
    private int filterStartTime_;
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    public boolean hasFilterStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    public int getFilterStartTime() {
      return filterStartTime_;
    }

    public static final int FILTER_END_TIME_FIELD_NUMBER = 4;
    private int filterEndTime_;
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    public boolean hasFilterEndTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    public int getFilterEndTime() {
      return filterEndTime_;
    }

    public static final int FILTER_MATCH_ID_FIELD_NUMBER = 5;
    private long filterMatchId_;
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    public boolean hasFilterMatchId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    public long getFilterMatchId() {
      return filterMatchId_;
    }

    public static final int FILTER_LAST_MATCH_FIELD_NUMBER = 6;
    private boolean filterLastMatch_;
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    public boolean hasFilterLastMatch() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    public boolean getFilterLastMatch() {
      return filterLastMatch_;
    }

    public static final int FILTER_IN_HALL_FIELD_NUMBER = 7;
    private boolean filterInHall_;
    /**
     * <code>optional bool filter_in_hall = 7;</code>
     */
    public boolean hasFilterInHall() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool filter_in_hall = 7;</code>
     */
    public boolean getFilterInHall() {
      return filterInHall_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, count_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, filterStartTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, filterEndTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, filterMatchId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, filterLastMatch_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, filterInHall_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, count_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, filterStartTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, filterEndTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, filterMatchId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, filterLastMatch_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, filterInHall_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasCount() == other.hasCount());
      if (hasCount()) {
        result = result && (getCount()
            == other.getCount());
      }
      result = result && (hasFilterStartTime() == other.hasFilterStartTime());
      if (hasFilterStartTime()) {
        result = result && (getFilterStartTime()
            == other.getFilterStartTime());
      }
      result = result && (hasFilterEndTime() == other.hasFilterEndTime());
      if (hasFilterEndTime()) {
        result = result && (getFilterEndTime()
            == other.getFilterEndTime());
      }
      result = result && (hasFilterMatchId() == other.hasFilterMatchId());
      if (hasFilterMatchId()) {
        result = result && (getFilterMatchId()
            == other.getFilterMatchId());
      }
      result = result && (hasFilterLastMatch() == other.hasFilterLastMatch());
      if (hasFilterLastMatch()) {
        result = result && (getFilterLastMatch()
            == other.getFilterLastMatch());
      }
      result = result && (hasFilterInHall() == other.hasFilterInHall());
      if (hasFilterInHall()) {
        result = result && (getFilterInHall()
            == other.getFilterInHall());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasCount()) {
        hash = (37 * hash) + COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getCount();
      }
      if (hasFilterStartTime()) {
        hash = (37 * hash) + FILTER_START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getFilterStartTime();
      }
      if (hasFilterEndTime()) {
        hash = (37 * hash) + FILTER_END_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getFilterEndTime();
      }
      if (hasFilterMatchId()) {
        hash = (37 * hash) + FILTER_MATCH_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFilterMatchId());
      }
      if (hasFilterLastMatch()) {
        hash = (37 * hash) + FILTER_LAST_MATCH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFilterLastMatch());
      }
      if (hasFilterInHall()) {
        hash = (37 * hash) + FILTER_IN_HALL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFilterInHall());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamStandingsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamStandingsRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        filterStartTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        filterEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        filterMatchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        filterLastMatch_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        filterInHall_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.filterStartTime_ = filterStartTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.filterEndTime_ = filterEndTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.filterMatchId_ = filterMatchId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.filterLastMatch_ = filterLastMatch_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.filterInHall_ = filterInHall_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasFilterStartTime()) {
          setFilterStartTime(other.getFilterStartTime());
        }
        if (other.hasFilterEndTime()) {
          setFilterEndTime(other.getFilterEndTime());
        }
        if (other.hasFilterMatchId()) {
          setFilterMatchId(other.getFilterMatchId());
        }
        if (other.hasFilterLastMatch()) {
          setFilterLastMatch(other.getFilterLastMatch());
        }
        if (other.hasFilterInHall()) {
          setFilterInHall(other.getFilterInHall());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        onChanged();
        return this;
      }

      private int filterStartTime_ ;
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public boolean hasFilterStartTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public int getFilterStartTime() {
        return filterStartTime_;
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public Builder setFilterStartTime(int value) {
        bitField0_ |= 0x00000004;
        filterStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public Builder clearFilterStartTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filterStartTime_ = 0;
        onChanged();
        return this;
      }

      private int filterEndTime_ ;
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public boolean hasFilterEndTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public int getFilterEndTime() {
        return filterEndTime_;
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public Builder setFilterEndTime(int value) {
        bitField0_ |= 0x00000008;
        filterEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public Builder clearFilterEndTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        filterEndTime_ = 0;
        onChanged();
        return this;
      }

      private long filterMatchId_ ;
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public boolean hasFilterMatchId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public long getFilterMatchId() {
        return filterMatchId_;
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public Builder setFilterMatchId(long value) {
        bitField0_ |= 0x00000010;
        filterMatchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public Builder clearFilterMatchId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        filterMatchId_ = 0L;
        onChanged();
        return this;
      }

      private boolean filterLastMatch_ ;
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public boolean hasFilterLastMatch() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public boolean getFilterLastMatch() {
        return filterLastMatch_;
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public Builder setFilterLastMatch(boolean value) {
        bitField0_ |= 0x00000020;
        filterLastMatch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public Builder clearFilterLastMatch() {
        bitField0_ = (bitField0_ & ~0x00000020);
        filterLastMatch_ = false;
        onChanged();
        return this;
      }

      private boolean filterInHall_ ;
      /**
       * <code>optional bool filter_in_hall = 7;</code>
       */
      public boolean hasFilterInHall() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool filter_in_hall = 7;</code>
       */
      public boolean getFilterInHall() {
        return filterInHall_;
      }
      /**
       * <code>optional bool filter_in_hall = 7;</code>
       */
      public Builder setFilterInHall(boolean value) {
        bitField0_ |= 0x00000040;
        filterInHall_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool filter_in_hall = 7;</code>
       */
      public Builder clearFilterInHall() {
        bitField0_ = (bitField0_ & ~0x00000040);
        filterInHall_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamStandingsRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamStandingsRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamStandingsRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamStandingsRequest>() {
      public CMsgDOTAFantasyTeamStandingsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamStandingsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamStandingsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamStandingsRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamStandingsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamStandingsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> 
        getTeamScoresList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore getTeamScores(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    int getTeamScoresCount();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder> 
        getTeamScoresOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder getTeamScoresOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamStandingsResponse}
   */
  public  static final class CMsgDOTAFantasyTeamStandingsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamStandingsResponse)
      CMsgDOTAFantasyTeamStandingsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamStandingsResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamStandingsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamStandingsResponse() {
      result_ = 0;
      teamScores_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamStandingsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                teamScores_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore>();
                mutable_bitField0_ |= 0x00000002;
              }
              teamScores_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          teamScores_ = java.util.Collections.unmodifiableList(teamScores_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamStandingsResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamStandingsResponse.EResult)
    }

    public interface CMsgTeamScoreOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      boolean hasFantasyLeagueId();
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      int getFantasyLeagueId();

      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      boolean hasOwnerAccountId();
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      int getOwnerAccountId();

      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      boolean hasFantasyTeamIndex();
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      int getFantasyTeamIndex();

      /**
       * <code>optional uint64 fantasy_team_logo = 4;</code>
       */
      boolean hasFantasyTeamLogo();
      /**
       * <code>optional uint64 fantasy_team_logo = 4;</code>
       */
      long getFantasyTeamLogo();

      /**
       * <code>optional string owner_name = 5;</code>
       */
      boolean hasOwnerName();
      /**
       * <code>optional string owner_name = 5;</code>
       */
      java.lang.String getOwnerName();
      /**
       * <code>optional string owner_name = 5;</code>
       */
      com.google.protobuf.ByteString
          getOwnerNameBytes();

      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      boolean hasFantasyTeamName();
      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      java.lang.String getFantasyTeamName();
      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      com.google.protobuf.ByteString
          getFantasyTeamNameBytes();

      /**
       * <code>optional float score = 7;</code>
       */
      boolean hasScore();
      /**
       * <code>optional float score = 7;</code>
       */
      float getScore();

      /**
       * <code>optional float score_against = 8;</code>
       */
      boolean hasScoreAgainst();
      /**
       * <code>optional float score_against = 8;</code>
       */
      float getScoreAgainst();

      /**
       * <code>optional uint32 wins = 9;</code>
       */
      boolean hasWins();
      /**
       * <code>optional uint32 wins = 9;</code>
       */
      int getWins();

      /**
       * <code>optional uint32 losses = 10;</code>
       */
      boolean hasLosses();
      /**
       * <code>optional uint32 losses = 10;</code>
       */
      int getLosses();

      /**
       * <code>optional int32 streak = 11;</code>
       */
      boolean hasStreak();
      /**
       * <code>optional int32 streak = 11;</code>
       */
      int getStreak();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore}
     */
    public  static final class CMsgTeamScore extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)
        CMsgTeamScoreOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CMsgTeamScore.newBuilder() to construct.
      private CMsgTeamScore(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CMsgTeamScore() {
        fantasyLeagueId_ = 0;
        ownerAccountId_ = 0;
        fantasyTeamIndex_ = 0;
        fantasyTeamLogo_ = 0L;
        ownerName_ = "";
        fantasyTeamName_ = "";
        score_ = 0F;
        scoreAgainst_ = 0F;
        wins_ = 0;
        losses_ = 0;
        streak_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CMsgTeamScore(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                fantasyLeagueId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                ownerAccountId_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                fantasyTeamIndex_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                fantasyTeamLogo_ = input.readUInt64();
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                ownerName_ = bs;
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000020;
                fantasyTeamName_ = bs;
                break;
              }
              case 61: {
                bitField0_ |= 0x00000040;
                score_ = input.readFloat();
                break;
              }
              case 69: {
                bitField0_ |= 0x00000080;
                scoreAgainst_ = input.readFloat();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                wins_ = input.readUInt32();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                losses_ = input.readUInt32();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                streak_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder.class);
      }

      private int bitField0_;
      public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
      private int fantasyLeagueId_;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }

      public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 2;
      private int ownerAccountId_;
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }

      public static final int FANTASY_TEAM_INDEX_FIELD_NUMBER = 3;
      private int fantasyTeamIndex_;
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public boolean hasFantasyTeamIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 fantasy_team_index = 3;</code>
       */
      public int getFantasyTeamIndex() {
        return fantasyTeamIndex_;
      }

      public static final int FANTASY_TEAM_LOGO_FIELD_NUMBER = 4;
      private long fantasyTeamLogo_;
      /**
       * <code>optional uint64 fantasy_team_logo = 4;</code>
       */
      public boolean hasFantasyTeamLogo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 fantasy_team_logo = 4;</code>
       */
      public long getFantasyTeamLogo() {
        return fantasyTeamLogo_;
      }

      public static final int OWNER_NAME_FIELD_NUMBER = 5;
      private volatile java.lang.Object ownerName_;
      /**
       * <code>optional string owner_name = 5;</code>
       */
      public boolean hasOwnerName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string owner_name = 5;</code>
       */
      public java.lang.String getOwnerName() {
        java.lang.Object ref = ownerName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ownerName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string owner_name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getOwnerNameBytes() {
        java.lang.Object ref = ownerName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ownerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FANTASY_TEAM_NAME_FIELD_NUMBER = 6;
      private volatile java.lang.Object fantasyTeamName_;
      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      public boolean hasFantasyTeamName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      public java.lang.String getFantasyTeamName() {
        java.lang.Object ref = fantasyTeamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fantasyTeamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string fantasy_team_name = 6;</code>
       */
      public com.google.protobuf.ByteString
          getFantasyTeamNameBytes() {
        java.lang.Object ref = fantasyTeamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fantasyTeamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SCORE_FIELD_NUMBER = 7;
      private float score_;
      /**
       * <code>optional float score = 7;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float score = 7;</code>
       */
      public float getScore() {
        return score_;
      }

      public static final int SCORE_AGAINST_FIELD_NUMBER = 8;
      private float scoreAgainst_;
      /**
       * <code>optional float score_against = 8;</code>
       */
      public boolean hasScoreAgainst() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float score_against = 8;</code>
       */
      public float getScoreAgainst() {
        return scoreAgainst_;
      }

      public static final int WINS_FIELD_NUMBER = 9;
      private int wins_;
      /**
       * <code>optional uint32 wins = 9;</code>
       */
      public boolean hasWins() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 wins = 9;</code>
       */
      public int getWins() {
        return wins_;
      }

      public static final int LOSSES_FIELD_NUMBER = 10;
      private int losses_;
      /**
       * <code>optional uint32 losses = 10;</code>
       */
      public boolean hasLosses() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 losses = 10;</code>
       */
      public int getLosses() {
        return losses_;
      }

      public static final int STREAK_FIELD_NUMBER = 11;
      private int streak_;
      /**
       * <code>optional int32 streak = 11;</code>
       */
      public boolean hasStreak() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 streak = 11;</code>
       */
      public int getStreak() {
        return streak_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, fantasyLeagueId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, ownerAccountId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, fantasyTeamIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(4, fantasyTeamLogo_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, ownerName_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 6, fantasyTeamName_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeFloat(7, score_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeFloat(8, scoreAgainst_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeUInt32(9, wins_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeUInt32(10, losses_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeInt32(11, streak_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, fantasyLeagueId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, ownerAccountId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, fantasyTeamIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, fantasyTeamLogo_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, ownerName_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, fantasyTeamName_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, score_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, scoreAgainst_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, wins_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, losses_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(11, streak_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore) obj;

        boolean result = true;
        result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
        if (hasFantasyLeagueId()) {
          result = result && (getFantasyLeagueId()
              == other.getFantasyLeagueId());
        }
        result = result && (hasOwnerAccountId() == other.hasOwnerAccountId());
        if (hasOwnerAccountId()) {
          result = result && (getOwnerAccountId()
              == other.getOwnerAccountId());
        }
        result = result && (hasFantasyTeamIndex() == other.hasFantasyTeamIndex());
        if (hasFantasyTeamIndex()) {
          result = result && (getFantasyTeamIndex()
              == other.getFantasyTeamIndex());
        }
        result = result && (hasFantasyTeamLogo() == other.hasFantasyTeamLogo());
        if (hasFantasyTeamLogo()) {
          result = result && (getFantasyTeamLogo()
              == other.getFantasyTeamLogo());
        }
        result = result && (hasOwnerName() == other.hasOwnerName());
        if (hasOwnerName()) {
          result = result && getOwnerName()
              .equals(other.getOwnerName());
        }
        result = result && (hasFantasyTeamName() == other.hasFantasyTeamName());
        if (hasFantasyTeamName()) {
          result = result && getFantasyTeamName()
              .equals(other.getFantasyTeamName());
        }
        result = result && (hasScore() == other.hasScore());
        if (hasScore()) {
          result = result && (
              java.lang.Float.floatToIntBits(getScore())
              == java.lang.Float.floatToIntBits(
                  other.getScore()));
        }
        result = result && (hasScoreAgainst() == other.hasScoreAgainst());
        if (hasScoreAgainst()) {
          result = result && (
              java.lang.Float.floatToIntBits(getScoreAgainst())
              == java.lang.Float.floatToIntBits(
                  other.getScoreAgainst()));
        }
        result = result && (hasWins() == other.hasWins());
        if (hasWins()) {
          result = result && (getWins()
              == other.getWins());
        }
        result = result && (hasLosses() == other.hasLosses());
        if (hasLosses()) {
          result = result && (getLosses()
              == other.getLosses());
        }
        result = result && (hasStreak() == other.hasStreak());
        if (hasStreak()) {
          result = result && (getStreak()
              == other.getStreak());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasFantasyLeagueId()) {
          hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getFantasyLeagueId();
        }
        if (hasOwnerAccountId()) {
          hash = (37 * hash) + OWNER_ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getOwnerAccountId();
        }
        if (hasFantasyTeamIndex()) {
          hash = (37 * hash) + FANTASY_TEAM_INDEX_FIELD_NUMBER;
          hash = (53 * hash) + getFantasyTeamIndex();
        }
        if (hasFantasyTeamLogo()) {
          hash = (37 * hash) + FANTASY_TEAM_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getFantasyTeamLogo());
        }
        if (hasOwnerName()) {
          hash = (37 * hash) + OWNER_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getOwnerName().hashCode();
        }
        if (hasFantasyTeamName()) {
          hash = (37 * hash) + FANTASY_TEAM_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getFantasyTeamName().hashCode();
        }
        if (hasScore()) {
          hash = (37 * hash) + SCORE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getScore());
        }
        if (hasScoreAgainst()) {
          hash = (37 * hash) + SCORE_AGAINST_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getScoreAgainst());
        }
        if (hasWins()) {
          hash = (37 * hash) + WINS_FIELD_NUMBER;
          hash = (53 * hash) + getWins();
        }
        if (hasLosses()) {
          hash = (37 * hash) + LOSSES_FIELD_NUMBER;
          hash = (53 * hash) + getLosses();
        }
        if (hasStreak()) {
          hash = (37 * hash) + STREAK_FIELD_NUMBER;
          hash = (53 * hash) + getStreak();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)
          MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          fantasyLeagueId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          ownerAccountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          fantasyTeamIndex_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          fantasyTeamLogo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          ownerName_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          fantasyTeamName_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          score_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000040);
          scoreAgainst_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000080);
          wins_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          losses_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          streak_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore build() {
          MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.fantasyLeagueId_ = fantasyLeagueId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.ownerAccountId_ = ownerAccountId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.fantasyTeamIndex_ = fantasyTeamIndex_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.fantasyTeamLogo_ = fantasyTeamLogo_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.ownerName_ = ownerName_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.fantasyTeamName_ = fantasyTeamName_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.score_ = score_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.scoreAgainst_ = scoreAgainst_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.wins_ = wins_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.losses_ = losses_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.streak_ = streak_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.getDefaultInstance()) return this;
          if (other.hasFantasyLeagueId()) {
            setFantasyLeagueId(other.getFantasyLeagueId());
          }
          if (other.hasOwnerAccountId()) {
            setOwnerAccountId(other.getOwnerAccountId());
          }
          if (other.hasFantasyTeamIndex()) {
            setFantasyTeamIndex(other.getFantasyTeamIndex());
          }
          if (other.hasFantasyTeamLogo()) {
            setFantasyTeamLogo(other.getFantasyTeamLogo());
          }
          if (other.hasOwnerName()) {
            bitField0_ |= 0x00000010;
            ownerName_ = other.ownerName_;
            onChanged();
          }
          if (other.hasFantasyTeamName()) {
            bitField0_ |= 0x00000020;
            fantasyTeamName_ = other.fantasyTeamName_;
            onChanged();
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          if (other.hasScoreAgainst()) {
            setScoreAgainst(other.getScoreAgainst());
          }
          if (other.hasWins()) {
            setWins(other.getWins());
          }
          if (other.hasLosses()) {
            setLosses(other.getLosses());
          }
          if (other.hasStreak()) {
            setStreak(other.getStreak());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int fantasyLeagueId_ ;
        /**
         * <code>optional uint32 fantasy_league_id = 1;</code>
         */
        public boolean hasFantasyLeagueId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 fantasy_league_id = 1;</code>
         */
        public int getFantasyLeagueId() {
          return fantasyLeagueId_;
        }
        /**
         * <code>optional uint32 fantasy_league_id = 1;</code>
         */
        public Builder setFantasyLeagueId(int value) {
          bitField0_ |= 0x00000001;
          fantasyLeagueId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 fantasy_league_id = 1;</code>
         */
        public Builder clearFantasyLeagueId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          fantasyLeagueId_ = 0;
          onChanged();
          return this;
        }

        private int ownerAccountId_ ;
        /**
         * <code>optional uint32 owner_account_id = 2;</code>
         */
        public boolean hasOwnerAccountId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 owner_account_id = 2;</code>
         */
        public int getOwnerAccountId() {
          return ownerAccountId_;
        }
        /**
         * <code>optional uint32 owner_account_id = 2;</code>
         */
        public Builder setOwnerAccountId(int value) {
          bitField0_ |= 0x00000002;
          ownerAccountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id = 2;</code>
         */
        public Builder clearOwnerAccountId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          ownerAccountId_ = 0;
          onChanged();
          return this;
        }

        private int fantasyTeamIndex_ ;
        /**
         * <code>optional uint32 fantasy_team_index = 3;</code>
         */
        public boolean hasFantasyTeamIndex() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 fantasy_team_index = 3;</code>
         */
        public int getFantasyTeamIndex() {
          return fantasyTeamIndex_;
        }
        /**
         * <code>optional uint32 fantasy_team_index = 3;</code>
         */
        public Builder setFantasyTeamIndex(int value) {
          bitField0_ |= 0x00000004;
          fantasyTeamIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 fantasy_team_index = 3;</code>
         */
        public Builder clearFantasyTeamIndex() {
          bitField0_ = (bitField0_ & ~0x00000004);
          fantasyTeamIndex_ = 0;
          onChanged();
          return this;
        }

        private long fantasyTeamLogo_ ;
        /**
         * <code>optional uint64 fantasy_team_logo = 4;</code>
         */
        public boolean hasFantasyTeamLogo() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint64 fantasy_team_logo = 4;</code>
         */
        public long getFantasyTeamLogo() {
          return fantasyTeamLogo_;
        }
        /**
         * <code>optional uint64 fantasy_team_logo = 4;</code>
         */
        public Builder setFantasyTeamLogo(long value) {
          bitField0_ |= 0x00000008;
          fantasyTeamLogo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 fantasy_team_logo = 4;</code>
         */
        public Builder clearFantasyTeamLogo() {
          bitField0_ = (bitField0_ & ~0x00000008);
          fantasyTeamLogo_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object ownerName_ = "";
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public boolean hasOwnerName() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public java.lang.String getOwnerName() {
          java.lang.Object ref = ownerName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              ownerName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public com.google.protobuf.ByteString
            getOwnerNameBytes() {
          java.lang.Object ref = ownerName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ownerName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public Builder setOwnerName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          ownerName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public Builder clearOwnerName() {
          bitField0_ = (bitField0_ & ~0x00000010);
          ownerName_ = getDefaultInstance().getOwnerName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string owner_name = 5;</code>
         */
        public Builder setOwnerNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          ownerName_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object fantasyTeamName_ = "";
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public boolean hasFantasyTeamName() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public java.lang.String getFantasyTeamName() {
          java.lang.Object ref = fantasyTeamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              fantasyTeamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public com.google.protobuf.ByteString
            getFantasyTeamNameBytes() {
          java.lang.Object ref = fantasyTeamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fantasyTeamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public Builder setFantasyTeamName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          fantasyTeamName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public Builder clearFantasyTeamName() {
          bitField0_ = (bitField0_ & ~0x00000020);
          fantasyTeamName_ = getDefaultInstance().getFantasyTeamName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string fantasy_team_name = 6;</code>
         */
        public Builder setFantasyTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          fantasyTeamName_ = value;
          onChanged();
          return this;
        }

        private float score_ ;
        /**
         * <code>optional float score = 7;</code>
         */
        public boolean hasScore() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional float score = 7;</code>
         */
        public float getScore() {
          return score_;
        }
        /**
         * <code>optional float score = 7;</code>
         */
        public Builder setScore(float value) {
          bitField0_ |= 0x00000040;
          score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score = 7;</code>
         */
        public Builder clearScore() {
          bitField0_ = (bitField0_ & ~0x00000040);
          score_ = 0F;
          onChanged();
          return this;
        }

        private float scoreAgainst_ ;
        /**
         * <code>optional float score_against = 8;</code>
         */
        public boolean hasScoreAgainst() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional float score_against = 8;</code>
         */
        public float getScoreAgainst() {
          return scoreAgainst_;
        }
        /**
         * <code>optional float score_against = 8;</code>
         */
        public Builder setScoreAgainst(float value) {
          bitField0_ |= 0x00000080;
          scoreAgainst_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score_against = 8;</code>
         */
        public Builder clearScoreAgainst() {
          bitField0_ = (bitField0_ & ~0x00000080);
          scoreAgainst_ = 0F;
          onChanged();
          return this;
        }

        private int wins_ ;
        /**
         * <code>optional uint32 wins = 9;</code>
         */
        public boolean hasWins() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional uint32 wins = 9;</code>
         */
        public int getWins() {
          return wins_;
        }
        /**
         * <code>optional uint32 wins = 9;</code>
         */
        public Builder setWins(int value) {
          bitField0_ |= 0x00000100;
          wins_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 wins = 9;</code>
         */
        public Builder clearWins() {
          bitField0_ = (bitField0_ & ~0x00000100);
          wins_ = 0;
          onChanged();
          return this;
        }

        private int losses_ ;
        /**
         * <code>optional uint32 losses = 10;</code>
         */
        public boolean hasLosses() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional uint32 losses = 10;</code>
         */
        public int getLosses() {
          return losses_;
        }
        /**
         * <code>optional uint32 losses = 10;</code>
         */
        public Builder setLosses(int value) {
          bitField0_ |= 0x00000200;
          losses_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 losses = 10;</code>
         */
        public Builder clearLosses() {
          bitField0_ = (bitField0_ & ~0x00000200);
          losses_ = 0;
          onChanged();
          return this;
        }

        private int streak_ ;
        /**
         * <code>optional int32 streak = 11;</code>
         */
        public boolean hasStreak() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional int32 streak = 11;</code>
         */
        public int getStreak() {
          return streak_;
        }
        /**
         * <code>optional int32 streak = 11;</code>
         */
        public Builder setStreak(int value) {
          bitField0_ |= 0x00000400;
          streak_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 streak = 11;</code>
         */
        public Builder clearStreak() {
          bitField0_ = (bitField0_ & ~0x00000400);
          streak_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgTeamScore>
          PARSER = new com.google.protobuf.AbstractParser<CMsgTeamScore>() {
        public CMsgTeamScore parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new CMsgTeamScore(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CMsgTeamScore> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CMsgTeamScore> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult.SUCCESS : result;
    }

    public static final int TEAM_SCORES_FIELD_NUMBER = 3;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> teamScores_;
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> getTeamScoresList() {
      return teamScores_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder> 
        getTeamScoresOrBuilderList() {
      return teamScores_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    public int getTeamScoresCount() {
      return teamScores_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore getTeamScores(int index) {
      return teamScores_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder getTeamScoresOrBuilder(
        int index) {
      return teamScores_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      for (int i = 0; i < teamScores_.size(); i++) {
        output.writeMessage(3, teamScores_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      for (int i = 0; i < teamScores_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, teamScores_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && getTeamScoresList()
          .equals(other.getTeamScoresList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (getTeamScoresCount() > 0) {
        hash = (37 * hash) + TEAM_SCORES_FIELD_NUMBER;
        hash = (53 * hash) + getTeamScoresList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamStandingsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamStandingsResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTeamScoresFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (teamScoresBuilder_ == null) {
          teamScores_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          teamScoresBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (teamScoresBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            teamScores_ = java.util.Collections.unmodifiableList(teamScores_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.teamScores_ = teamScores_;
        } else {
          result.teamScores_ = teamScoresBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (teamScoresBuilder_ == null) {
          if (!other.teamScores_.isEmpty()) {
            if (teamScores_.isEmpty()) {
              teamScores_ = other.teamScores_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTeamScoresIsMutable();
              teamScores_.addAll(other.teamScores_);
            }
            onChanged();
          }
        } else {
          if (!other.teamScores_.isEmpty()) {
            if (teamScoresBuilder_.isEmpty()) {
              teamScoresBuilder_.dispose();
              teamScoresBuilder_ = null;
              teamScores_ = other.teamScores_;
              bitField0_ = (bitField0_ & ~0x00000002);
              teamScoresBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTeamScoresFieldBuilder() : null;
            } else {
              teamScoresBuilder_.addAllMessages(other.teamScores_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> teamScores_ =
        java.util.Collections.emptyList();
      private void ensureTeamScoresIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          teamScores_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore>(teamScores_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder> teamScoresBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> getTeamScoresList() {
        if (teamScoresBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teamScores_);
        } else {
          return teamScoresBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public int getTeamScoresCount() {
        if (teamScoresBuilder_ == null) {
          return teamScores_.size();
        } else {
          return teamScoresBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore getTeamScores(int index) {
        if (teamScoresBuilder_ == null) {
          return teamScores_.get(index);
        } else {
          return teamScoresBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder setTeamScores(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore value) {
        if (teamScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamScoresIsMutable();
          teamScores_.set(index, value);
          onChanged();
        } else {
          teamScoresBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder setTeamScores(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder builderForValue) {
        if (teamScoresBuilder_ == null) {
          ensureTeamScoresIsMutable();
          teamScores_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamScoresBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder addTeamScores(MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore value) {
        if (teamScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamScoresIsMutable();
          teamScores_.add(value);
          onChanged();
        } else {
          teamScoresBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder addTeamScores(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore value) {
        if (teamScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamScoresIsMutable();
          teamScores_.add(index, value);
          onChanged();
        } else {
          teamScoresBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder addTeamScores(
          MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder builderForValue) {
        if (teamScoresBuilder_ == null) {
          ensureTeamScoresIsMutable();
          teamScores_.add(builderForValue.build());
          onChanged();
        } else {
          teamScoresBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder addTeamScores(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder builderForValue) {
        if (teamScoresBuilder_ == null) {
          ensureTeamScoresIsMutable();
          teamScores_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamScoresBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder addAllTeamScores(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore> values) {
        if (teamScoresBuilder_ == null) {
          ensureTeamScoresIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teamScores_);
          onChanged();
        } else {
          teamScoresBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder clearTeamScores() {
        if (teamScoresBuilder_ == null) {
          teamScores_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          teamScoresBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public Builder removeTeamScores(int index) {
        if (teamScoresBuilder_ == null) {
          ensureTeamScoresIsMutable();
          teamScores_.remove(index);
          onChanged();
        } else {
          teamScoresBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder getTeamScoresBuilder(
          int index) {
        return getTeamScoresFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder getTeamScoresOrBuilder(
          int index) {
        if (teamScoresBuilder_ == null) {
          return teamScores_.get(index);  } else {
          return teamScoresBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder> 
           getTeamScoresOrBuilderList() {
        if (teamScoresBuilder_ != null) {
          return teamScoresBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teamScores_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder addTeamScoresBuilder() {
        return getTeamScoresFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder addTeamScoresBuilder(
          int index) {
        return getTeamScoresFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore team_scores = 3;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder> 
           getTeamScoresBuilderList() {
        return getTeamScoresFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder> 
          getTeamScoresFieldBuilder() {
        if (teamScoresBuilder_ == null) {
          teamScoresBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScoreOrBuilder>(
                  teamScores_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          teamScores_ = null;
        }
        return teamScoresBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamStandingsResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamStandingsResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamStandingsResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamStandingsResponse>() {
      public CMsgDOTAFantasyTeamStandingsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamStandingsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamStandingsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamStandingsResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamStandingsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyPlayerScoreRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerScoreRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    boolean hasPlayerAccountId();
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    int getPlayerAccountId();

    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    boolean hasFilterStartTime();
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    int getFilterStartTime();

    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    boolean hasFilterEndTime();
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    int getFilterEndTime();

    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    boolean hasFilterMatchId();
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    long getFilterMatchId();

    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    boolean hasFilterLastMatch();
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    boolean getFilterLastMatch();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerScoreRequest}
   */
  public  static final class CMsgDOTAFantasyPlayerScoreRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerScoreRequest)
      CMsgDOTAFantasyPlayerScoreRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyPlayerScoreRequest.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerScoreRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyPlayerScoreRequest() {
      fantasyLeagueId_ = 0;
      playerAccountId_ = 0;
      filterStartTime_ = 0;
      filterEndTime_ = 0;
      filterMatchId_ = 0L;
      filterLastMatch_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerScoreRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerAccountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              filterStartTime_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              filterEndTime_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              filterMatchId_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              filterLastMatch_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int playerAccountId_;
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    public boolean hasPlayerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    public int getPlayerAccountId() {
      return playerAccountId_;
    }

    public static final int FILTER_START_TIME_FIELD_NUMBER = 3;
    private int filterStartTime_;
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    public boolean hasFilterStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 filter_start_time = 3;</code>
     */
    public int getFilterStartTime() {
      return filterStartTime_;
    }

    public static final int FILTER_END_TIME_FIELD_NUMBER = 4;
    private int filterEndTime_;
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    public boolean hasFilterEndTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 filter_end_time = 4;</code>
     */
    public int getFilterEndTime() {
      return filterEndTime_;
    }

    public static final int FILTER_MATCH_ID_FIELD_NUMBER = 5;
    private long filterMatchId_;
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    public boolean hasFilterMatchId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 filter_match_id = 5;</code>
     */
    public long getFilterMatchId() {
      return filterMatchId_;
    }

    public static final int FILTER_LAST_MATCH_FIELD_NUMBER = 6;
    private boolean filterLastMatch_;
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    public boolean hasFilterLastMatch() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool filter_last_match = 6;</code>
     */
    public boolean getFilterLastMatch() {
      return filterLastMatch_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, filterStartTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, filterEndTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, filterMatchId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, filterLastMatch_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, filterStartTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, filterEndTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, filterMatchId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, filterLastMatch_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasPlayerAccountId() == other.hasPlayerAccountId());
      if (hasPlayerAccountId()) {
        result = result && (getPlayerAccountId()
            == other.getPlayerAccountId());
      }
      result = result && (hasFilterStartTime() == other.hasFilterStartTime());
      if (hasFilterStartTime()) {
        result = result && (getFilterStartTime()
            == other.getFilterStartTime());
      }
      result = result && (hasFilterEndTime() == other.hasFilterEndTime());
      if (hasFilterEndTime()) {
        result = result && (getFilterEndTime()
            == other.getFilterEndTime());
      }
      result = result && (hasFilterMatchId() == other.hasFilterMatchId());
      if (hasFilterMatchId()) {
        result = result && (getFilterMatchId()
            == other.getFilterMatchId());
      }
      result = result && (hasFilterLastMatch() == other.hasFilterLastMatch());
      if (hasFilterLastMatch()) {
        result = result && (getFilterLastMatch()
            == other.getFilterLastMatch());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasPlayerAccountId()) {
        hash = (37 * hash) + PLAYER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerAccountId();
      }
      if (hasFilterStartTime()) {
        hash = (37 * hash) + FILTER_START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getFilterStartTime();
      }
      if (hasFilterEndTime()) {
        hash = (37 * hash) + FILTER_END_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getFilterEndTime();
      }
      if (hasFilterMatchId()) {
        hash = (37 * hash) + FILTER_MATCH_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFilterMatchId());
      }
      if (hasFilterLastMatch()) {
        hash = (37 * hash) + FILTER_LAST_MATCH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFilterLastMatch());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerScoreRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerScoreRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        filterStartTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        filterEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        filterMatchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        filterLastMatch_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerAccountId_ = playerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.filterStartTime_ = filterStartTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.filterEndTime_ = filterEndTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.filterMatchId_ = filterMatchId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.filterLastMatch_ = filterLastMatch_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPlayerAccountId()) {
          setPlayerAccountId(other.getPlayerAccountId());
        }
        if (other.hasFilterStartTime()) {
          setFilterStartTime(other.getFilterStartTime());
        }
        if (other.hasFilterEndTime()) {
          setFilterEndTime(other.getFilterEndTime());
        }
        if (other.hasFilterMatchId()) {
          setFilterMatchId(other.getFilterMatchId());
        }
        if (other.hasFilterLastMatch()) {
          setFilterLastMatch(other.getFilterLastMatch());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int playerAccountId_ ;
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public boolean hasPlayerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public int getPlayerAccountId() {
        return playerAccountId_;
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public Builder setPlayerAccountId(int value) {
        bitField0_ |= 0x00000002;
        playerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public Builder clearPlayerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int filterStartTime_ ;
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public boolean hasFilterStartTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public int getFilterStartTime() {
        return filterStartTime_;
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public Builder setFilterStartTime(int value) {
        bitField0_ |= 0x00000004;
        filterStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_start_time = 3;</code>
       */
      public Builder clearFilterStartTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filterStartTime_ = 0;
        onChanged();
        return this;
      }

      private int filterEndTime_ ;
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public boolean hasFilterEndTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public int getFilterEndTime() {
        return filterEndTime_;
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public Builder setFilterEndTime(int value) {
        bitField0_ |= 0x00000008;
        filterEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_end_time = 4;</code>
       */
      public Builder clearFilterEndTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        filterEndTime_ = 0;
        onChanged();
        return this;
      }

      private long filterMatchId_ ;
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public boolean hasFilterMatchId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public long getFilterMatchId() {
        return filterMatchId_;
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public Builder setFilterMatchId(long value) {
        bitField0_ |= 0x00000010;
        filterMatchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 filter_match_id = 5;</code>
       */
      public Builder clearFilterMatchId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        filterMatchId_ = 0L;
        onChanged();
        return this;
      }

      private boolean filterLastMatch_ ;
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public boolean hasFilterLastMatch() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public boolean getFilterLastMatch() {
        return filterLastMatch_;
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public Builder setFilterLastMatch(boolean value) {
        bitField0_ |= 0x00000020;
        filterLastMatch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool filter_last_match = 6;</code>
       */
      public Builder clearFilterLastMatch() {
        bitField0_ = (bitField0_ & ~0x00000020);
        filterLastMatch_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerScoreRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerScoreRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerScoreRequest>() {
      public CMsgDOTAFantasyPlayerScoreRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyPlayerScoreRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyPlayerScoreResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerScoreResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult getResult();

    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    boolean hasPlayerAccountId();
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    int getPlayerAccountId();

    /**
     * <code>optional string player_name = 4;</code>
     */
    boolean hasPlayerName();
    /**
     * <code>optional string player_name = 4;</code>
     */
    java.lang.String getPlayerName();
    /**
     * <code>optional string player_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getPlayerNameBytes();

    /**
     * <code>optional float score = 5;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 5;</code>
     */
    float getScore();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerScoreResponse}
   */
  public  static final class CMsgDOTAFantasyPlayerScoreResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerScoreResponse)
      CMsgDOTAFantasyPlayerScoreResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyPlayerScoreResponse.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerScoreResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyPlayerScoreResponse() {
      result_ = 0;
      fantasyLeagueId_ = 0;
      playerAccountId_ = 0;
      playerName_ = "";
      score_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerScoreResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              playerAccountId_ = input.readUInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              playerName_ = bs;
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              score_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyPlayerScoreResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyPlayerScoreResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult.SUCCESS : result;
    }

    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 2;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 3;
    private int playerAccountId_;
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    public boolean hasPlayerAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    public int getPlayerAccountId() {
      return playerAccountId_;
    }

    public static final int PLAYER_NAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object playerName_;
    /**
     * <code>optional string player_name = 4;</code>
     */
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string player_name = 4;</code>
     */
    public java.lang.String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string player_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCORE_FIELD_NUMBER = 5;
    private float score_;
    /**
     * <code>optional float score = 5;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float score = 5;</code>
     */
    public float getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, playerAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, playerName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, score_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, playerAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, playerName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, score_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasPlayerAccountId() == other.hasPlayerAccountId());
      if (hasPlayerAccountId()) {
        result = result && (getPlayerAccountId()
            == other.getPlayerAccountId());
      }
      result = result && (hasPlayerName() == other.hasPlayerName());
      if (hasPlayerName()) {
        result = result && getPlayerName()
            .equals(other.getPlayerName());
      }
      result = result && (hasScore() == other.hasScore());
      if (hasScore()) {
        result = result && (
            java.lang.Float.floatToIntBits(getScore())
            == java.lang.Float.floatToIntBits(
                other.getScore()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasPlayerAccountId()) {
        hash = (37 * hash) + PLAYER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerAccountId();
      }
      if (hasPlayerName()) {
        hash = (37 * hash) + PLAYER_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerName().hashCode();
      }
      if (hasScore()) {
        hash = (37 * hash) + SCORE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getScore());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerScoreResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerScoreResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        playerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerAccountId_ = playerAccountId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerName_ = playerName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPlayerAccountId()) {
          setPlayerAccountId(other.getPlayerAccountId());
        }
        if (other.hasPlayerName()) {
          bitField0_ |= 0x00000008;
          playerName_ = other.playerName_;
          onChanged();
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000002;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int playerAccountId_ ;
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public boolean hasPlayerAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public int getPlayerAccountId() {
        return playerAccountId_;
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public Builder setPlayerAccountId(int value) {
        bitField0_ |= 0x00000004;
        playerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public Builder clearPlayerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerAccountId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object playerName_ = "";
      /**
       * <code>optional string player_name = 4;</code>
       */
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string player_name = 4;</code>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            playerName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string player_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string player_name = 4;</code>
       */
      public Builder setPlayerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        playerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_name = 4;</code>
       */
      public Builder clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_name = 4;</code>
       */
      public Builder setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        playerName_ = value;
        onChanged();
        return this;
      }

      private float score_ ;
      /**
       * <code>optional float score = 5;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float score = 5;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 5;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000010;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 5;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        score_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerScoreResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerScoreResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerScoreResponse>() {
      public CMsgDOTAFantasyPlayerScoreResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyPlayerScoreResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyPlayerStandingsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerStandingsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 count = 2;</code>
     */
    boolean hasCount();
    /**
     * <code>optional uint32 count = 2;</code>
     */
    int getCount();

    /**
     * <code>optional uint32 role = 3;</code>
     */
    boolean hasRole();
    /**
     * <code>optional uint32 role = 3;</code>
     */
    int getRole();

    /**
     * <code>optional uint32 filter_start_time = 4;</code>
     */
    boolean hasFilterStartTime();
    /**
     * <code>optional uint32 filter_start_time = 4;</code>
     */
    int getFilterStartTime();

    /**
     * <code>optional uint32 filter_end_time = 5;</code>
     */
    boolean hasFilterEndTime();
    /**
     * <code>optional uint32 filter_end_time = 5;</code>
     */
    int getFilterEndTime();

    /**
     * <code>optional uint64 filter_match_id = 6;</code>
     */
    boolean hasFilterMatchId();
    /**
     * <code>optional uint64 filter_match_id = 6;</code>
     */
    long getFilterMatchId();

    /**
     * <code>optional bool filter_last_match = 7;</code>
     */
    boolean hasFilterLastMatch();
    /**
     * <code>optional bool filter_last_match = 7;</code>
     */
    boolean getFilterLastMatch();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsRequest}
   */
  public  static final class CMsgDOTAFantasyPlayerStandingsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerStandingsRequest)
      CMsgDOTAFantasyPlayerStandingsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyPlayerStandingsRequest.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerStandingsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyPlayerStandingsRequest() {
      fantasyLeagueId_ = 0;
      count_ = 0;
      role_ = 0;
      filterStartTime_ = 0;
      filterEndTime_ = 0;
      filterMatchId_ = 0L;
      filterLastMatch_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerStandingsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              role_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              filterStartTime_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              filterEndTime_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              filterMatchId_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              filterLastMatch_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <code>optional uint32 count = 2;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 count = 2;</code>
     */
    public int getCount() {
      return count_;
    }

    public static final int ROLE_FIELD_NUMBER = 3;
    private int role_;
    /**
     * <code>optional uint32 role = 3;</code>
     */
    public boolean hasRole() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 role = 3;</code>
     */
    public int getRole() {
      return role_;
    }

    public static final int FILTER_START_TIME_FIELD_NUMBER = 4;
    private int filterStartTime_;
    /**
     * <code>optional uint32 filter_start_time = 4;</code>
     */
    public boolean hasFilterStartTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 filter_start_time = 4;</code>
     */
    public int getFilterStartTime() {
      return filterStartTime_;
    }

    public static final int FILTER_END_TIME_FIELD_NUMBER = 5;
    private int filterEndTime_;
    /**
     * <code>optional uint32 filter_end_time = 5;</code>
     */
    public boolean hasFilterEndTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 filter_end_time = 5;</code>
     */
    public int getFilterEndTime() {
      return filterEndTime_;
    }

    public static final int FILTER_MATCH_ID_FIELD_NUMBER = 6;
    private long filterMatchId_;
    /**
     * <code>optional uint64 filter_match_id = 6;</code>
     */
    public boolean hasFilterMatchId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 filter_match_id = 6;</code>
     */
    public long getFilterMatchId() {
      return filterMatchId_;
    }

    public static final int FILTER_LAST_MATCH_FIELD_NUMBER = 7;
    private boolean filterLastMatch_;
    /**
     * <code>optional bool filter_last_match = 7;</code>
     */
    public boolean hasFilterLastMatch() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool filter_last_match = 7;</code>
     */
    public boolean getFilterLastMatch() {
      return filterLastMatch_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, count_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, role_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, filterStartTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, filterEndTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, filterMatchId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, filterLastMatch_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, count_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, role_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, filterStartTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, filterEndTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, filterMatchId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, filterLastMatch_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasCount() == other.hasCount());
      if (hasCount()) {
        result = result && (getCount()
            == other.getCount());
      }
      result = result && (hasRole() == other.hasRole());
      if (hasRole()) {
        result = result && (getRole()
            == other.getRole());
      }
      result = result && (hasFilterStartTime() == other.hasFilterStartTime());
      if (hasFilterStartTime()) {
        result = result && (getFilterStartTime()
            == other.getFilterStartTime());
      }
      result = result && (hasFilterEndTime() == other.hasFilterEndTime());
      if (hasFilterEndTime()) {
        result = result && (getFilterEndTime()
            == other.getFilterEndTime());
      }
      result = result && (hasFilterMatchId() == other.hasFilterMatchId());
      if (hasFilterMatchId()) {
        result = result && (getFilterMatchId()
            == other.getFilterMatchId());
      }
      result = result && (hasFilterLastMatch() == other.hasFilterLastMatch());
      if (hasFilterLastMatch()) {
        result = result && (getFilterLastMatch()
            == other.getFilterLastMatch());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasCount()) {
        hash = (37 * hash) + COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getCount();
      }
      if (hasRole()) {
        hash = (37 * hash) + ROLE_FIELD_NUMBER;
        hash = (53 * hash) + getRole();
      }
      if (hasFilterStartTime()) {
        hash = (37 * hash) + FILTER_START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getFilterStartTime();
      }
      if (hasFilterEndTime()) {
        hash = (37 * hash) + FILTER_END_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getFilterEndTime();
      }
      if (hasFilterMatchId()) {
        hash = (37 * hash) + FILTER_MATCH_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFilterMatchId());
      }
      if (hasFilterLastMatch()) {
        hash = (37 * hash) + FILTER_LAST_MATCH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFilterLastMatch());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerStandingsRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        role_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        filterStartTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        filterEndTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        filterMatchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        filterLastMatch_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.role_ = role_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.filterStartTime_ = filterStartTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.filterEndTime_ = filterEndTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.filterMatchId_ = filterMatchId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.filterLastMatch_ = filterLastMatch_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasRole()) {
          setRole(other.getRole());
        }
        if (other.hasFilterStartTime()) {
          setFilterStartTime(other.getFilterStartTime());
        }
        if (other.hasFilterEndTime()) {
          setFilterEndTime(other.getFilterEndTime());
        }
        if (other.hasFilterMatchId()) {
          setFilterMatchId(other.getFilterMatchId());
        }
        if (other.hasFilterLastMatch()) {
          setFilterLastMatch(other.getFilterLastMatch());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 count = 2;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0;
        onChanged();
        return this;
      }

      private int role_ ;
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public boolean hasRole() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public int getRole() {
        return role_;
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public Builder setRole(int value) {
        bitField0_ |= 0x00000004;
        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public Builder clearRole() {
        bitField0_ = (bitField0_ & ~0x00000004);
        role_ = 0;
        onChanged();
        return this;
      }

      private int filterStartTime_ ;
      /**
       * <code>optional uint32 filter_start_time = 4;</code>
       */
      public boolean hasFilterStartTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 filter_start_time = 4;</code>
       */
      public int getFilterStartTime() {
        return filterStartTime_;
      }
      /**
       * <code>optional uint32 filter_start_time = 4;</code>
       */
      public Builder setFilterStartTime(int value) {
        bitField0_ |= 0x00000008;
        filterStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_start_time = 4;</code>
       */
      public Builder clearFilterStartTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        filterStartTime_ = 0;
        onChanged();
        return this;
      }

      private int filterEndTime_ ;
      /**
       * <code>optional uint32 filter_end_time = 5;</code>
       */
      public boolean hasFilterEndTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 filter_end_time = 5;</code>
       */
      public int getFilterEndTime() {
        return filterEndTime_;
      }
      /**
       * <code>optional uint32 filter_end_time = 5;</code>
       */
      public Builder setFilterEndTime(int value) {
        bitField0_ |= 0x00000010;
        filterEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 filter_end_time = 5;</code>
       */
      public Builder clearFilterEndTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        filterEndTime_ = 0;
        onChanged();
        return this;
      }

      private long filterMatchId_ ;
      /**
       * <code>optional uint64 filter_match_id = 6;</code>
       */
      public boolean hasFilterMatchId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 filter_match_id = 6;</code>
       */
      public long getFilterMatchId() {
        return filterMatchId_;
      }
      /**
       * <code>optional uint64 filter_match_id = 6;</code>
       */
      public Builder setFilterMatchId(long value) {
        bitField0_ |= 0x00000020;
        filterMatchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 filter_match_id = 6;</code>
       */
      public Builder clearFilterMatchId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        filterMatchId_ = 0L;
        onChanged();
        return this;
      }

      private boolean filterLastMatch_ ;
      /**
       * <code>optional bool filter_last_match = 7;</code>
       */
      public boolean hasFilterLastMatch() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool filter_last_match = 7;</code>
       */
      public boolean getFilterLastMatch() {
        return filterLastMatch_;
      }
      /**
       * <code>optional bool filter_last_match = 7;</code>
       */
      public Builder setFilterLastMatch(boolean value) {
        bitField0_ |= 0x00000040;
        filterLastMatch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool filter_last_match = 7;</code>
       */
      public Builder clearFilterLastMatch() {
        bitField0_ = (bitField0_ & ~0x00000040);
        filterLastMatch_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerStandingsRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerStandingsRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyPlayerStandingsRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerStandingsRequest>() {
      public CMsgDOTAFantasyPlayerStandingsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyPlayerStandingsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerStandingsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerStandingsRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyPlayerStandingsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerStandingsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult getResult();

    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 role = 3;</code>
     */
    boolean hasRole();
    /**
     * <code>optional uint32 role = 3;</code>
     */
    int getRole();

    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> 
        getPlayerScoresList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore getPlayerScores(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    int getPlayerScoresCount();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder> 
        getPlayerScoresOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder getPlayerScoresOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsResponse}
   */
  public  static final class CMsgDOTAFantasyPlayerStandingsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerStandingsResponse)
      CMsgDOTAFantasyPlayerStandingsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyPlayerStandingsResponse.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerStandingsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyPlayerStandingsResponse() {
      result_ = 0;
      fantasyLeagueId_ = 0;
      role_ = 0;
      playerScores_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerStandingsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              role_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                playerScores_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore>();
                mutable_bitField0_ |= 0x00000008;
              }
              playerScores_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          playerScores_ = java.util.Collections.unmodifiableList(playerScores_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyPlayerStandingsResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyPlayerStandingsResponse.EResult)
    }

    public interface CMsgPlayerScoreOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 player_account_id = 1;</code>
       */
      boolean hasPlayerAccountId();
      /**
       * <code>optional uint32 player_account_id = 1;</code>
       */
      int getPlayerAccountId();

      /**
       * <code>optional string player_name = 2;</code>
       */
      boolean hasPlayerName();
      /**
       * <code>optional string player_name = 2;</code>
       */
      java.lang.String getPlayerName();
      /**
       * <code>optional string player_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getPlayerNameBytes();

      /**
       * <code>optional float score = 3;</code>
       */
      boolean hasScore();
      /**
       * <code>optional float score = 3;</code>
       */
      float getScore();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore}
     */
    public  static final class CMsgPlayerScore extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)
        CMsgPlayerScoreOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CMsgPlayerScore.newBuilder() to construct.
      private CMsgPlayerScore(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CMsgPlayerScore() {
        playerAccountId_ = 0;
        playerName_ = "";
        score_ = 0F;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CMsgPlayerScore(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                playerAccountId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                playerName_ = bs;
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                score_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder.class);
      }

      private int bitField0_;
      public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 1;
      private int playerAccountId_;
      /**
       * <code>optional uint32 player_account_id = 1;</code>
       */
      public boolean hasPlayerAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_account_id = 1;</code>
       */
      public int getPlayerAccountId() {
        return playerAccountId_;
      }

      public static final int PLAYER_NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object playerName_;
      /**
       * <code>optional string player_name = 2;</code>
       */
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string player_name = 2;</code>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            playerName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string player_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SCORE_FIELD_NUMBER = 3;
      private float score_;
      /**
       * <code>optional float score = 3;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float score = 3;</code>
       */
      public float getScore() {
        return score_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, playerAccountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, playerName_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, score_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, playerAccountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, playerName_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, score_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore) obj;

        boolean result = true;
        result = result && (hasPlayerAccountId() == other.hasPlayerAccountId());
        if (hasPlayerAccountId()) {
          result = result && (getPlayerAccountId()
              == other.getPlayerAccountId());
        }
        result = result && (hasPlayerName() == other.hasPlayerName());
        if (hasPlayerName()) {
          result = result && getPlayerName()
              .equals(other.getPlayerName());
        }
        result = result && (hasScore() == other.hasScore());
        if (hasScore()) {
          result = result && (
              java.lang.Float.floatToIntBits(getScore())
              == java.lang.Float.floatToIntBits(
                  other.getScore()));
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPlayerAccountId()) {
          hash = (37 * hash) + PLAYER_ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerAccountId();
        }
        if (hasPlayerName()) {
          hash = (37 * hash) + PLAYER_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerName().hashCode();
        }
        if (hasScore()) {
          hash = (37 * hash) + SCORE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getScore());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          playerAccountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          playerName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          score_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore build() {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.playerAccountId_ = playerAccountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.playerName_ = playerName_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.score_ = score_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.getDefaultInstance()) return this;
          if (other.hasPlayerAccountId()) {
            setPlayerAccountId(other.getPlayerAccountId());
          }
          if (other.hasPlayerName()) {
            bitField0_ |= 0x00000002;
            playerName_ = other.playerName_;
            onChanged();
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int playerAccountId_ ;
        /**
         * <code>optional uint32 player_account_id = 1;</code>
         */
        public boolean hasPlayerAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 player_account_id = 1;</code>
         */
        public int getPlayerAccountId() {
          return playerAccountId_;
        }
        /**
         * <code>optional uint32 player_account_id = 1;</code>
         */
        public Builder setPlayerAccountId(int value) {
          bitField0_ |= 0x00000001;
          playerAccountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 player_account_id = 1;</code>
         */
        public Builder clearPlayerAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          playerAccountId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object playerName_ = "";
        /**
         * <code>optional string player_name = 2;</code>
         */
        public boolean hasPlayerName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string player_name = 2;</code>
         */
        public java.lang.String getPlayerName() {
          java.lang.Object ref = playerName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              playerName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string player_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getPlayerNameBytes() {
          java.lang.Object ref = playerName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            playerName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string player_name = 2;</code>
         */
        public Builder setPlayerName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          playerName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string player_name = 2;</code>
         */
        public Builder clearPlayerName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          playerName_ = getDefaultInstance().getPlayerName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string player_name = 2;</code>
         */
        public Builder setPlayerNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          playerName_ = value;
          onChanged();
          return this;
        }

        private float score_ ;
        /**
         * <code>optional float score = 3;</code>
         */
        public boolean hasScore() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float score = 3;</code>
         */
        public float getScore() {
          return score_;
        }
        /**
         * <code>optional float score = 3;</code>
         */
        public Builder setScore(float value) {
          bitField0_ |= 0x00000004;
          score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score = 3;</code>
         */
        public Builder clearScore() {
          bitField0_ = (bitField0_ & ~0x00000004);
          score_ = 0F;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgPlayerScore>
          PARSER = new com.google.protobuf.AbstractParser<CMsgPlayerScore>() {
        public CMsgPlayerScore parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new CMsgPlayerScore(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CMsgPlayerScore> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CMsgPlayerScore> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult.SUCCESS : result;
    }

    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 2;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int ROLE_FIELD_NUMBER = 3;
    private int role_;
    /**
     * <code>optional uint32 role = 3;</code>
     */
    public boolean hasRole() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 role = 3;</code>
     */
    public int getRole() {
      return role_;
    }

    public static final int PLAYER_SCORES_FIELD_NUMBER = 4;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> playerScores_;
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> getPlayerScoresList() {
      return playerScores_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder> 
        getPlayerScoresOrBuilderList() {
      return playerScores_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    public int getPlayerScoresCount() {
      return playerScores_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore getPlayerScores(int index) {
      return playerScores_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder getPlayerScoresOrBuilder(
        int index) {
      return playerScores_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, role_);
      }
      for (int i = 0; i < playerScores_.size(); i++) {
        output.writeMessage(4, playerScores_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, role_);
      }
      for (int i = 0; i < playerScores_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, playerScores_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasRole() == other.hasRole());
      if (hasRole()) {
        result = result && (getRole()
            == other.getRole());
      }
      result = result && getPlayerScoresList()
          .equals(other.getPlayerScoresList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasRole()) {
        hash = (37 * hash) + ROLE_FIELD_NUMBER;
        hash = (53 * hash) + getRole();
      }
      if (getPlayerScoresCount() > 0) {
        hash = (37 * hash) + PLAYER_SCORES_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerScoresList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerStandingsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerStandingsResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPlayerScoresFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        role_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (playerScoresBuilder_ == null) {
          playerScores_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          playerScoresBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.role_ = role_;
        if (playerScoresBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            playerScores_ = java.util.Collections.unmodifiableList(playerScores_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.playerScores_ = playerScores_;
        } else {
          result.playerScores_ = playerScoresBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasRole()) {
          setRole(other.getRole());
        }
        if (playerScoresBuilder_ == null) {
          if (!other.playerScores_.isEmpty()) {
            if (playerScores_.isEmpty()) {
              playerScores_ = other.playerScores_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayerScoresIsMutable();
              playerScores_.addAll(other.playerScores_);
            }
            onChanged();
          }
        } else {
          if (!other.playerScores_.isEmpty()) {
            if (playerScoresBuilder_.isEmpty()) {
              playerScoresBuilder_.dispose();
              playerScoresBuilder_ = null;
              playerScores_ = other.playerScores_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playerScoresBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlayerScoresFieldBuilder() : null;
            } else {
              playerScoresBuilder_.addAllMessages(other.playerScores_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerStandingsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000002;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int role_ ;
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public boolean hasRole() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public int getRole() {
        return role_;
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public Builder setRole(int value) {
        bitField0_ |= 0x00000004;
        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 role = 3;</code>
       */
      public Builder clearRole() {
        bitField0_ = (bitField0_ & ~0x00000004);
        role_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> playerScores_ =
        java.util.Collections.emptyList();
      private void ensurePlayerScoresIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          playerScores_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore>(playerScores_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder> playerScoresBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> getPlayerScoresList() {
        if (playerScoresBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerScores_);
        } else {
          return playerScoresBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public int getPlayerScoresCount() {
        if (playerScoresBuilder_ == null) {
          return playerScores_.size();
        } else {
          return playerScoresBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore getPlayerScores(int index) {
        if (playerScoresBuilder_ == null) {
          return playerScores_.get(index);
        } else {
          return playerScoresBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder setPlayerScores(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore value) {
        if (playerScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerScoresIsMutable();
          playerScores_.set(index, value);
          onChanged();
        } else {
          playerScoresBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder setPlayerScores(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder builderForValue) {
        if (playerScoresBuilder_ == null) {
          ensurePlayerScoresIsMutable();
          playerScores_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerScoresBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder addPlayerScores(MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore value) {
        if (playerScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerScoresIsMutable();
          playerScores_.add(value);
          onChanged();
        } else {
          playerScoresBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder addPlayerScores(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore value) {
        if (playerScoresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerScoresIsMutable();
          playerScores_.add(index, value);
          onChanged();
        } else {
          playerScoresBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder addPlayerScores(
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder builderForValue) {
        if (playerScoresBuilder_ == null) {
          ensurePlayerScoresIsMutable();
          playerScores_.add(builderForValue.build());
          onChanged();
        } else {
          playerScoresBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder addPlayerScores(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder builderForValue) {
        if (playerScoresBuilder_ == null) {
          ensurePlayerScoresIsMutable();
          playerScores_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerScoresBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder addAllPlayerScores(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore> values) {
        if (playerScoresBuilder_ == null) {
          ensurePlayerScoresIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerScores_);
          onChanged();
        } else {
          playerScoresBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder clearPlayerScores() {
        if (playerScoresBuilder_ == null) {
          playerScores_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playerScoresBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public Builder removePlayerScores(int index) {
        if (playerScoresBuilder_ == null) {
          ensurePlayerScoresIsMutable();
          playerScores_.remove(index);
          onChanged();
        } else {
          playerScoresBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder getPlayerScoresBuilder(
          int index) {
        return getPlayerScoresFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder getPlayerScoresOrBuilder(
          int index) {
        if (playerScoresBuilder_ == null) {
          return playerScores_.get(index);  } else {
          return playerScoresBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder> 
           getPlayerScoresOrBuilderList() {
        if (playerScoresBuilder_ != null) {
          return playerScoresBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerScores_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder addPlayerScoresBuilder() {
        return getPlayerScoresFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder addPlayerScoresBuilder(
          int index) {
        return getPlayerScoresFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore player_scores = 4;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder> 
           getPlayerScoresBuilderList() {
        return getPlayerScoresFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder> 
          getPlayerScoresFieldBuilder() {
        if (playerScoresBuilder_ == null) {
          playerScoresBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScoreOrBuilder>(
                  playerScores_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          playerScores_ = null;
        }
        return playerScoresBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerStandingsResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerStandingsResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyPlayerStandingsResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerStandingsResponse>() {
      public CMsgDOTAFantasyPlayerStandingsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyPlayerStandingsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerStandingsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerStandingsResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerStandingsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyPlayerInfoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerInfoRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerInfoRequest}
   */
  public  static final class CMsgDOTAFantasyPlayerInfoRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerInfoRequest)
      CMsgDOTAFantasyPlayerInfoRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyPlayerInfoRequest.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerInfoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyPlayerInfoRequest() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerInfoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerInfoRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerInfoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerInfoRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerInfoRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyPlayerInfoRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerInfoRequest>() {
      public CMsgDOTAFantasyPlayerInfoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyPlayerInfoRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerInfoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerInfoRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyPlayerInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    boolean hasMsg();
    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    MsgGCClientFantasy.CMsgGCPlayerInfo getMsg();
    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    MsgGCClientFantasy.CMsgGCPlayerInfoOrBuilder getMsgOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerInfoResponse}
   */
  public  static final class CMsgDOTAFantasyPlayerInfoResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerInfoResponse)
      CMsgDOTAFantasyPlayerInfoResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyPlayerInfoResponse.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerInfoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyPlayerInfoResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              MsgGCClientFantasy.CMsgGCPlayerInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = msg_.toBuilder();
              }
              msg_ = input.readMessage(MsgGCClientFantasy.CMsgGCPlayerInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(msg_);
                msg_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse.Builder.class);
    }

    private int bitField0_;
    public static final int MSG_FIELD_NUMBER = 1;
    private MsgGCClientFantasy.CMsgGCPlayerInfo msg_;
    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    public MsgGCClientFantasy.CMsgGCPlayerInfo getMsg() {
      return msg_ == null ? MsgGCClientFantasy.CMsgGCPlayerInfo.getDefaultInstance() : msg_;
    }
    /**
     * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
     */
    public MsgGCClientFantasy.CMsgGCPlayerInfoOrBuilder getMsgOrBuilder() {
      return msg_ == null ? MsgGCClientFantasy.CMsgGCPlayerInfo.getDefaultInstance() : msg_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getMsg());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMsg());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse) obj;

      boolean result = true;
      result = result && (hasMsg() == other.hasMsg());
      if (hasMsg()) {
        result = result && getMsg()
            .equals(other.getMsg());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMsg()) {
        hash = (37 * hash) + MSG_FIELD_NUMBER;
        hash = (53 * hash) + getMsg().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerInfoResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMsgFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (msgBuilder_ == null) {
          msg_ = null;
        } else {
          msgBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (msgBuilder_ == null) {
          result.msg_ = msg_;
        } else {
          result.msg_ = msgBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse.getDefaultInstance()) return this;
        if (other.hasMsg()) {
          mergeMsg(other.getMsg());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private MsgGCClientFantasy.CMsgGCPlayerInfo msg_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgGCClientFantasy.CMsgGCPlayerInfo, MsgGCClientFantasy.CMsgGCPlayerInfo.Builder, MsgGCClientFantasy.CMsgGCPlayerInfoOrBuilder> msgBuilder_;
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo getMsg() {
        if (msgBuilder_ == null) {
          return msg_ == null ? MsgGCClientFantasy.CMsgGCPlayerInfo.getDefaultInstance() : msg_;
        } else {
          return msgBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public Builder setMsg(MsgGCClientFantasy.CMsgGCPlayerInfo value) {
        if (msgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          msg_ = value;
          onChanged();
        } else {
          msgBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public Builder setMsg(
          MsgGCClientFantasy.CMsgGCPlayerInfo.Builder builderForValue) {
        if (msgBuilder_ == null) {
          msg_ = builderForValue.build();
          onChanged();
        } else {
          msgBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public Builder mergeMsg(MsgGCClientFantasy.CMsgGCPlayerInfo value) {
        if (msgBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              msg_ != null &&
              msg_ != MsgGCClientFantasy.CMsgGCPlayerInfo.getDefaultInstance()) {
            msg_ =
              MsgGCClientFantasy.CMsgGCPlayerInfo.newBuilder(msg_).mergeFrom(value).buildPartial();
          } else {
            msg_ = value;
          }
          onChanged();
        } else {
          msgBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public Builder clearMsg() {
        if (msgBuilder_ == null) {
          msg_ = null;
          onChanged();
        } else {
          msgBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfo.Builder getMsgBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMsgFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      public MsgGCClientFantasy.CMsgGCPlayerInfoOrBuilder getMsgOrBuilder() {
        if (msgBuilder_ != null) {
          return msgBuilder_.getMessageOrBuilder();
        } else {
          return msg_ == null ?
              MsgGCClientFantasy.CMsgGCPlayerInfo.getDefaultInstance() : msg_;
        }
      }
      /**
       * <code>optional .CMsgGCPlayerInfo msg = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgGCClientFantasy.CMsgGCPlayerInfo, MsgGCClientFantasy.CMsgGCPlayerInfo.Builder, MsgGCClientFantasy.CMsgGCPlayerInfoOrBuilder> 
          getMsgFieldBuilder() {
        if (msgBuilder_ == null) {
          msgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MsgGCClientFantasy.CMsgGCPlayerInfo, MsgGCClientFantasy.CMsgGCPlayerInfo.Builder, MsgGCClientFantasy.CMsgGCPlayerInfoOrBuilder>(
                  getMsg(),
                  getParentForChildren(),
                  isClean());
          msg_ = null;
        }
        return msgBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerInfoResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerInfoResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyPlayerInfoResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerInfoResponse>() {
      public CMsgDOTAFantasyPlayerInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyPlayerInfoResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerInfoResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerInfoResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerInfoResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueCreateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueCreateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 season_id = 1;</code>
     */
    boolean hasSeasonId();
    /**
     * <code>optional uint32 season_id = 1;</code>
     */
    int getSeasonId();

    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    boolean hasFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    java.lang.String getFantasyLeagueName();
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getFantasyLeagueNameBytes();

    /**
     * <code>optional string password = 3;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 3;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 3;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>optional string team_name = 4;</code>
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 4;</code>
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <code>optional uint64 logo = 5;</code>
     */
    boolean hasLogo();
    /**
     * <code>optional uint64 logo = 5;</code>
     */
    long getLogo();

    /**
     * <code>optional uint64 ticket_item_id = 6;</code>
     */
    boolean hasTicketItemId();
    /**
     * <code>optional uint64 ticket_item_id = 6;</code>
     */
    long getTicketItemId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueCreateRequest}
   */
  public  static final class CMsgDOTAFantasyLeagueCreateRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueCreateRequest)
      CMsgDOTAFantasyLeagueCreateRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueCreateRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueCreateRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueCreateRequest() {
      seasonId_ = 0;
      fantasyLeagueName_ = "";
      password_ = "";
      teamName_ = "";
      logo_ = 0L;
      ticketItemId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueCreateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seasonId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              fantasyLeagueName_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              password_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              teamName_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              logo_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              ticketItemId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueCreateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest.Builder.class);
    }

    private int bitField0_;
    public static final int SEASON_ID_FIELD_NUMBER = 1;
    private int seasonId_;
    /**
     * <code>optional uint32 season_id = 1;</code>
     */
    public boolean hasSeasonId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 season_id = 1;</code>
     */
    public int getSeasonId() {
      return seasonId_;
    }

    public static final int FANTASY_LEAGUE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object fantasyLeagueName_;
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public boolean hasFantasyLeagueName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public java.lang.String getFantasyLeagueName() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fantasyLeagueName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fantasy_league_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFantasyLeagueNameBytes() {
      java.lang.Object ref = fantasyLeagueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fantasyLeagueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 3;
    private volatile java.lang.Object password_;
    /**
     * <code>optional string password = 3;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string password = 3;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_NAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object teamName_;
    /**
     * <code>optional string team_name = 4;</code>
     */
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string team_name = 4;</code>
     */
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGO_FIELD_NUMBER = 5;
    private long logo_;
    /**
     * <code>optional uint64 logo = 5;</code>
     */
    public boolean hasLogo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 logo = 5;</code>
     */
    public long getLogo() {
      return logo_;
    }

    public static final int TICKET_ITEM_ID_FIELD_NUMBER = 6;
    private long ticketItemId_;
    /**
     * <code>optional uint64 ticket_item_id = 6;</code>
     */
    public boolean hasTicketItemId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 ticket_item_id = 6;</code>
     */
    public long getTicketItemId() {
      return ticketItemId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, seasonId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fantasyLeagueName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, password_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, teamName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, logo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, ticketItemId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, seasonId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fantasyLeagueName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, password_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, teamName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, logo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, ticketItemId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest) obj;

      boolean result = true;
      result = result && (hasSeasonId() == other.hasSeasonId());
      if (hasSeasonId()) {
        result = result && (getSeasonId()
            == other.getSeasonId());
      }
      result = result && (hasFantasyLeagueName() == other.hasFantasyLeagueName());
      if (hasFantasyLeagueName()) {
        result = result && getFantasyLeagueName()
            .equals(other.getFantasyLeagueName());
      }
      result = result && (hasPassword() == other.hasPassword());
      if (hasPassword()) {
        result = result && getPassword()
            .equals(other.getPassword());
      }
      result = result && (hasTeamName() == other.hasTeamName());
      if (hasTeamName()) {
        result = result && getTeamName()
            .equals(other.getTeamName());
      }
      result = result && (hasLogo() == other.hasLogo());
      if (hasLogo()) {
        result = result && (getLogo()
            == other.getLogo());
      }
      result = result && (hasTicketItemId() == other.hasTicketItemId());
      if (hasTicketItemId()) {
        result = result && (getTicketItemId()
            == other.getTicketItemId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSeasonId()) {
        hash = (37 * hash) + SEASON_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonId();
      }
      if (hasFantasyLeagueName()) {
        hash = (37 * hash) + FANTASY_LEAGUE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueName().hashCode();
      }
      if (hasPassword()) {
        hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPassword().hashCode();
      }
      if (hasTeamName()) {
        hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTeamName().hashCode();
      }
      if (hasLogo()) {
        hash = (37 * hash) + LOGO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLogo());
      }
      if (hasTicketItemId()) {
        hash = (37 * hash) + TICKET_ITEM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTicketItemId());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueCreateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueCreateRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueCreateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        seasonId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        teamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        logo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        ticketItemId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seasonId_ = seasonId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueName_ = fantasyLeagueName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamName_ = teamName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.logo_ = logo_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ticketItemId_ = ticketItemId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest.getDefaultInstance()) return this;
        if (other.hasSeasonId()) {
          setSeasonId(other.getSeasonId());
        }
        if (other.hasFantasyLeagueName()) {
          bitField0_ |= 0x00000002;
          fantasyLeagueName_ = other.fantasyLeagueName_;
          onChanged();
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000004;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasTeamName()) {
          bitField0_ |= 0x00000008;
          teamName_ = other.teamName_;
          onChanged();
        }
        if (other.hasLogo()) {
          setLogo(other.getLogo());
        }
        if (other.hasTicketItemId()) {
          setTicketItemId(other.getTicketItemId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seasonId_ ;
      /**
       * <code>optional uint32 season_id = 1;</code>
       */
      public boolean hasSeasonId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 season_id = 1;</code>
       */
      public int getSeasonId() {
        return seasonId_;
      }
      /**
       * <code>optional uint32 season_id = 1;</code>
       */
      public Builder setSeasonId(int value) {
        bitField0_ |= 0x00000001;
        seasonId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_id = 1;</code>
       */
      public Builder clearSeasonId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seasonId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fantasyLeagueName_ = "";
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public boolean hasFantasyLeagueName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public java.lang.String getFantasyLeagueName() {
        java.lang.Object ref = fantasyLeagueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fantasyLeagueName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFantasyLeagueNameBytes() {
        java.lang.Object ref = fantasyLeagueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fantasyLeagueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder setFantasyLeagueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder clearFantasyLeagueName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueName_ = getDefaultInstance().getFantasyLeagueName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fantasy_league_name = 2;</code>
       */
      public Builder setFantasyLeagueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fantasyLeagueName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 3;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string password = 3;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 3;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 3;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000004);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 3;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 4;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder clearTeamName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        teamName_ = value;
        onChanged();
        return this;
      }

      private long logo_ ;
      /**
       * <code>optional uint64 logo = 5;</code>
       */
      public boolean hasLogo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 logo = 5;</code>
       */
      public long getLogo() {
        return logo_;
      }
      /**
       * <code>optional uint64 logo = 5;</code>
       */
      public Builder setLogo(long value) {
        bitField0_ |= 0x00000010;
        logo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 logo = 5;</code>
       */
      public Builder clearLogo() {
        bitField0_ = (bitField0_ & ~0x00000010);
        logo_ = 0L;
        onChanged();
        return this;
      }

      private long ticketItemId_ ;
      /**
       * <code>optional uint64 ticket_item_id = 6;</code>
       */
      public boolean hasTicketItemId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 ticket_item_id = 6;</code>
       */
      public long getTicketItemId() {
        return ticketItemId_;
      }
      /**
       * <code>optional uint64 ticket_item_id = 6;</code>
       */
      public Builder setTicketItemId(long value) {
        bitField0_ |= 0x00000020;
        ticketItemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ticket_item_id = 6;</code>
       */
      public Builder clearTicketItemId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ticketItemId_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueCreateRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueCreateRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueCreateRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueCreateRequest>() {
      public CMsgDOTAFantasyLeagueCreateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueCreateRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueCreateRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueCreateRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueCreateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueCreateResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult getResult();

    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueCreateResponse}
   */
  public  static final class CMsgDOTAFantasyLeagueCreateResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueCreateResponse)
      CMsgDOTAFantasyLeagueCreateResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueCreateResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueCreateResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueCreateResponse() {
      result_ = 0;
      fantasyLeagueId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueCreateResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueCreateResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueCreateResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_NO_PERMISSION = 1;</code>
       */
      ERROR_NO_PERMISSION(1),
      /**
       * <code>ERROR_BAD_SEASON_ID = 2;</code>
       */
      ERROR_BAD_SEASON_ID(2),
      /**
       * <code>ERROR_BAD_LEAGUE_NAME = 3;</code>
       */
      ERROR_BAD_LEAGUE_NAME(3),
      /**
       * <code>ERROR_BAD_TEAM_NAME = 4;</code>
       */
      ERROR_BAD_TEAM_NAME(4),
      /**
       * <code>ERROR_UNSPECIFIED = 5;</code>
       */
      ERROR_UNSPECIFIED(5),
      /**
       * <code>ERROR_FAILED_LOGO_UPLOAD = 6;</code>
       */
      ERROR_FAILED_LOGO_UPLOAD(6),
      /**
       * <code>ERROR_NO_TICKET = 7;</code>
       */
      ERROR_NO_TICKET(7),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_NO_PERMISSION = 1;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 1;
      /**
       * <code>ERROR_BAD_SEASON_ID = 2;</code>
       */
      public static final int ERROR_BAD_SEASON_ID_VALUE = 2;
      /**
       * <code>ERROR_BAD_LEAGUE_NAME = 3;</code>
       */
      public static final int ERROR_BAD_LEAGUE_NAME_VALUE = 3;
      /**
       * <code>ERROR_BAD_TEAM_NAME = 4;</code>
       */
      public static final int ERROR_BAD_TEAM_NAME_VALUE = 4;
      /**
       * <code>ERROR_UNSPECIFIED = 5;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 5;
      /**
       * <code>ERROR_FAILED_LOGO_UPLOAD = 6;</code>
       */
      public static final int ERROR_FAILED_LOGO_UPLOAD_VALUE = 6;
      /**
       * <code>ERROR_NO_TICKET = 7;</code>
       */
      public static final int ERROR_NO_TICKET_VALUE = 7;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_NO_PERMISSION;
          case 2: return ERROR_BAD_SEASON_ID;
          case 3: return ERROR_BAD_LEAGUE_NAME;
          case 4: return ERROR_BAD_TEAM_NAME;
          case 5: return ERROR_UNSPECIFIED;
          case 6: return ERROR_FAILED_LOGO_UPLOAD;
          case 7: return ERROR_NO_TICKET;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueCreateResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult.SUCCESS : result;
    }

    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 2;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 2;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyLeagueId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyLeagueId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueCreateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueCreateResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueCreateResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000002;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 2;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueCreateResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueCreateResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueCreateResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueCreateResponse>() {
      public CMsgDOTAFantasyLeagueCreateResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueCreateResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueCreateResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueCreateResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueCreateResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamCreateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamCreateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>optional string team_name = 3;</code>
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 3;</code>
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <code>optional uint64 logo = 4;</code>
     */
    boolean hasLogo();
    /**
     * <code>optional uint64 logo = 4;</code>
     */
    long getLogo();

    /**
     * <code>optional uint64 ticket_item_id = 5;</code>
     */
    boolean hasTicketItemId();
    /**
     * <code>optional uint64 ticket_item_id = 5;</code>
     */
    long getTicketItemId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamCreateRequest}
   */
  public  static final class CMsgDOTAFantasyTeamCreateRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamCreateRequest)
      CMsgDOTAFantasyTeamCreateRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamCreateRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamCreateRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamCreateRequest() {
      fantasyLeagueId_ = 0;
      password_ = "";
      teamName_ = "";
      logo_ = 0L;
      ticketItemId_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamCreateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              password_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              teamName_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              logo_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ticketItemId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamCreateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object password_;
    /**
     * <code>optional string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object teamName_;
    /**
     * <code>optional string team_name = 3;</code>
     */
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string team_name = 3;</code>
     */
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGO_FIELD_NUMBER = 4;
    private long logo_;
    /**
     * <code>optional uint64 logo = 4;</code>
     */
    public boolean hasLogo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 logo = 4;</code>
     */
    public long getLogo() {
      return logo_;
    }

    public static final int TICKET_ITEM_ID_FIELD_NUMBER = 5;
    private long ticketItemId_;
    /**
     * <code>optional uint64 ticket_item_id = 5;</code>
     */
    public boolean hasTicketItemId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 ticket_item_id = 5;</code>
     */
    public long getTicketItemId() {
      return ticketItemId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, teamName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, logo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, ticketItemId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, teamName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, logo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, ticketItemId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasPassword() == other.hasPassword());
      if (hasPassword()) {
        result = result && getPassword()
            .equals(other.getPassword());
      }
      result = result && (hasTeamName() == other.hasTeamName());
      if (hasTeamName()) {
        result = result && getTeamName()
            .equals(other.getTeamName());
      }
      result = result && (hasLogo() == other.hasLogo());
      if (hasLogo()) {
        result = result && (getLogo()
            == other.getLogo());
      }
      result = result && (hasTicketItemId() == other.hasTicketItemId());
      if (hasTicketItemId()) {
        result = result && (getTicketItemId()
            == other.getTicketItemId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasPassword()) {
        hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPassword().hashCode();
      }
      if (hasTeamName()) {
        hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTeamName().hashCode();
      }
      if (hasLogo()) {
        hash = (37 * hash) + LOGO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLogo());
      }
      if (hasTicketItemId()) {
        hash = (37 * hash) + TICKET_ITEM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTicketItemId());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamCreateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamCreateRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamCreateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        teamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        logo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        ticketItemId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.teamName_ = teamName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.logo_ = logo_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ticketItemId_ = ticketItemId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000002;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasTeamName()) {
          bitField0_ |= 0x00000004;
          teamName_ = other.teamName_;
          onChanged();
        }
        if (other.hasLogo()) {
          setLogo(other.getLogo());
        }
        if (other.hasTicketItemId()) {
          setTicketItemId(other.getTicketItemId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 2;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 3;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder clearTeamName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 3;</code>
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        teamName_ = value;
        onChanged();
        return this;
      }

      private long logo_ ;
      /**
       * <code>optional uint64 logo = 4;</code>
       */
      public boolean hasLogo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 logo = 4;</code>
       */
      public long getLogo() {
        return logo_;
      }
      /**
       * <code>optional uint64 logo = 4;</code>
       */
      public Builder setLogo(long value) {
        bitField0_ |= 0x00000008;
        logo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 logo = 4;</code>
       */
      public Builder clearLogo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        logo_ = 0L;
        onChanged();
        return this;
      }

      private long ticketItemId_ ;
      /**
       * <code>optional uint64 ticket_item_id = 5;</code>
       */
      public boolean hasTicketItemId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 ticket_item_id = 5;</code>
       */
      public long getTicketItemId() {
        return ticketItemId_;
      }
      /**
       * <code>optional uint64 ticket_item_id = 5;</code>
       */
      public Builder setTicketItemId(long value) {
        bitField0_ |= 0x00000010;
        ticketItemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ticket_item_id = 5;</code>
       */
      public Builder clearTicketItemId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ticketItemId_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamCreateRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamCreateRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamCreateRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamCreateRequest>() {
      public CMsgDOTAFantasyTeamCreateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamCreateRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamCreateRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamCreateRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamCreateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamCreateResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult getResult();

    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    boolean hasFantasyTeamIndex();
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    int getFantasyTeamIndex();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamCreateResponse}
   */
  public  static final class CMsgDOTAFantasyTeamCreateResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamCreateResponse)
      CMsgDOTAFantasyTeamCreateResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamCreateResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamCreateResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamCreateResponse() {
      result_ = 0;
      fantasyTeamIndex_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamCreateResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyTeamIndex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamCreateResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamCreateResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_NO_PERMISSION = 1;</code>
       */
      ERROR_NO_PERMISSION(1),
      /**
       * <code>ERROR_FAILED_LOGO_UPLOAD = 2;</code>
       */
      ERROR_FAILED_LOGO_UPLOAD(2),
      /**
       * <code>ERROR_BAD_FANTASY_LEAGUE_ID = 3;</code>
       */
      ERROR_BAD_FANTASY_LEAGUE_ID(3),
      /**
       * <code>ERROR_BAD_NAME = 4;</code>
       */
      ERROR_BAD_NAME(4),
      /**
       * <code>ERROR_FULL = 5;</code>
       */
      ERROR_FULL(5),
      /**
       * <code>ERROR_ALREADY_MEMBER = 6;</code>
       */
      ERROR_ALREADY_MEMBER(6),
      /**
       * <code>ERROR_BAD_PASSWORD = 7;</code>
       */
      ERROR_BAD_PASSWORD(7),
      /**
       * <code>ERROR_UNSPECIFIED = 8;</code>
       */
      ERROR_UNSPECIFIED(8),
      /**
       * <code>ERROR_NO_TICKET = 9;</code>
       */
      ERROR_NO_TICKET(9),
      /**
       * <code>ERROR_LEAGUE_LOCKED = 10;</code>
       */
      ERROR_LEAGUE_LOCKED(10),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_NO_PERMISSION = 1;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 1;
      /**
       * <code>ERROR_FAILED_LOGO_UPLOAD = 2;</code>
       */
      public static final int ERROR_FAILED_LOGO_UPLOAD_VALUE = 2;
      /**
       * <code>ERROR_BAD_FANTASY_LEAGUE_ID = 3;</code>
       */
      public static final int ERROR_BAD_FANTASY_LEAGUE_ID_VALUE = 3;
      /**
       * <code>ERROR_BAD_NAME = 4;</code>
       */
      public static final int ERROR_BAD_NAME_VALUE = 4;
      /**
       * <code>ERROR_FULL = 5;</code>
       */
      public static final int ERROR_FULL_VALUE = 5;
      /**
       * <code>ERROR_ALREADY_MEMBER = 6;</code>
       */
      public static final int ERROR_ALREADY_MEMBER_VALUE = 6;
      /**
       * <code>ERROR_BAD_PASSWORD = 7;</code>
       */
      public static final int ERROR_BAD_PASSWORD_VALUE = 7;
      /**
       * <code>ERROR_UNSPECIFIED = 8;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 8;
      /**
       * <code>ERROR_NO_TICKET = 9;</code>
       */
      public static final int ERROR_NO_TICKET_VALUE = 9;
      /**
       * <code>ERROR_LEAGUE_LOCKED = 10;</code>
       */
      public static final int ERROR_LEAGUE_LOCKED_VALUE = 10;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_NO_PERMISSION;
          case 2: return ERROR_FAILED_LOGO_UPLOAD;
          case 3: return ERROR_BAD_FANTASY_LEAGUE_ID;
          case 4: return ERROR_BAD_NAME;
          case 5: return ERROR_FULL;
          case 6: return ERROR_ALREADY_MEMBER;
          case 7: return ERROR_BAD_PASSWORD;
          case 8: return ERROR_UNSPECIFIED;
          case 9: return ERROR_NO_TICKET;
          case 10: return ERROR_LEAGUE_LOCKED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamCreateResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult.SUCCESS : result;
    }

    public static final int FANTASY_TEAM_INDEX_FIELD_NUMBER = 2;
    private int fantasyTeamIndex_;
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    public boolean hasFantasyTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    public int getFantasyTeamIndex() {
      return fantasyTeamIndex_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyTeamIndex_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyTeamIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && (hasFantasyTeamIndex() == other.hasFantasyTeamIndex());
      if (hasFantasyTeamIndex()) {
        result = result && (getFantasyTeamIndex()
            == other.getFantasyTeamIndex());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (hasFantasyTeamIndex()) {
        hash = (37 * hash) + FANTASY_TEAM_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyTeamIndex();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamCreateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamCreateResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamCreateResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyTeamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyTeamIndex_ = fantasyTeamIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasFantasyTeamIndex()) {
          setFantasyTeamIndex(other.getFantasyTeamIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamCreateResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private int fantasyTeamIndex_ ;
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public boolean hasFantasyTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public int getFantasyTeamIndex() {
        return fantasyTeamIndex_;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public Builder setFantasyTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        fantasyTeamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public Builder clearFantasyTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyTeamIndex_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamCreateResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamCreateResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamCreateResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamCreateResponse>() {
      public CMsgDOTAFantasyTeamCreateResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamCreateResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamCreateResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamCreateResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamCreateResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueEditInvitesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueEditInvitesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> 
        getInviteChangeList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange getInviteChange(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    int getInviteChangeCount();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder> 
        getInviteChangeOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder getInviteChangeOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesRequest}
   */
  public  static final class CMsgDOTAFantasyLeagueEditInvitesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueEditInvitesRequest)
      CMsgDOTAFantasyLeagueEditInvitesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueEditInvitesRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueEditInvitesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueEditInvitesRequest() {
      fantasyLeagueId_ = 0;
      password_ = "";
      inviteChange_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueEditInvitesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              password_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                inviteChange_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange>();
                mutable_bitField0_ |= 0x00000004;
              }
              inviteChange_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          inviteChange_ = java.util.Collections.unmodifiableList(inviteChange_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.Builder.class);
    }

    public interface InviteChangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      int getAccountId();

      /**
       * <code>optional bool invited = 2;</code>
       */
      boolean hasInvited();
      /**
       * <code>optional bool invited = 2;</code>
       */
      boolean getInvited();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange}
     */
    public  static final class InviteChange extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)
        InviteChangeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use InviteChange.newBuilder() to construct.
      private InviteChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private InviteChange() {
        accountId_ = 0;
        invited_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private InviteChange(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                invited_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder.class);
      }

      private int bitField0_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      public static final int INVITED_FIELD_NUMBER = 2;
      private boolean invited_;
      /**
       * <code>optional bool invited = 2;</code>
       */
      public boolean hasInvited() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool invited = 2;</code>
       */
      public boolean getInvited() {
        return invited_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, invited_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, invited_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange) obj;

        boolean result = true;
        result = result && (hasAccountId() == other.hasAccountId());
        if (hasAccountId()) {
          result = result && (getAccountId()
              == other.getAccountId());
        }
        result = result && (hasInvited() == other.hasInvited());
        if (hasInvited()) {
          result = result && (getInvited()
              == other.getInvited());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasAccountId()) {
          hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getAccountId();
        }
        if (hasInvited()) {
          hash = (37 * hash) + INVITED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getInvited());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          invited_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange build() {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.invited_ = invited_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasInvited()) {
            setInvited(other.getInvited());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private boolean invited_ ;
        /**
         * <code>optional bool invited = 2;</code>
         */
        public boolean hasInvited() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bool invited = 2;</code>
         */
        public boolean getInvited() {
          return invited_;
        }
        /**
         * <code>optional bool invited = 2;</code>
         */
        public Builder setInvited(boolean value) {
          bitField0_ |= 0x00000002;
          invited_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool invited = 2;</code>
         */
        public Builder clearInvited() {
          bitField0_ = (bitField0_ & ~0x00000002);
          invited_ = false;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<InviteChange>
          PARSER = new com.google.protobuf.AbstractParser<InviteChange>() {
        public InviteChange parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new InviteChange(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<InviteChange> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<InviteChange> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object password_;
    /**
     * <code>optional string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INVITE_CHANGE_FIELD_NUMBER = 3;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> inviteChange_;
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> getInviteChangeList() {
      return inviteChange_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder> 
        getInviteChangeOrBuilderList() {
      return inviteChange_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    public int getInviteChangeCount() {
      return inviteChange_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange getInviteChange(int index) {
      return inviteChange_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder getInviteChangeOrBuilder(
        int index) {
      return inviteChange_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
      }
      for (int i = 0; i < inviteChange_.size(); i++) {
        output.writeMessage(3, inviteChange_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
      }
      for (int i = 0; i < inviteChange_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, inviteChange_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasPassword() == other.hasPassword());
      if (hasPassword()) {
        result = result && getPassword()
            .equals(other.getPassword());
      }
      result = result && getInviteChangeList()
          .equals(other.getInviteChangeList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasPassword()) {
        hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPassword().hashCode();
      }
      if (getInviteChangeCount() > 0) {
        hash = (37 * hash) + INVITE_CHANGE_FIELD_NUMBER;
        hash = (53 * hash) + getInviteChangeList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueEditInvitesRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInviteChangeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (inviteChangeBuilder_ == null) {
          inviteChange_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          inviteChangeBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.password_ = password_;
        if (inviteChangeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            inviteChange_ = java.util.Collections.unmodifiableList(inviteChange_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.inviteChange_ = inviteChange_;
        } else {
          result.inviteChange_ = inviteChangeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000002;
          password_ = other.password_;
          onChanged();
        }
        if (inviteChangeBuilder_ == null) {
          if (!other.inviteChange_.isEmpty()) {
            if (inviteChange_.isEmpty()) {
              inviteChange_ = other.inviteChange_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureInviteChangeIsMutable();
              inviteChange_.addAll(other.inviteChange_);
            }
            onChanged();
          }
        } else {
          if (!other.inviteChange_.isEmpty()) {
            if (inviteChangeBuilder_.isEmpty()) {
              inviteChangeBuilder_.dispose();
              inviteChangeBuilder_ = null;
              inviteChange_ = other.inviteChange_;
              bitField0_ = (bitField0_ & ~0x00000004);
              inviteChangeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInviteChangeFieldBuilder() : null;
            } else {
              inviteChangeBuilder_.addAllMessages(other.inviteChange_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 2;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> inviteChange_ =
        java.util.Collections.emptyList();
      private void ensureInviteChangeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          inviteChange_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange>(inviteChange_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder> inviteChangeBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> getInviteChangeList() {
        if (inviteChangeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inviteChange_);
        } else {
          return inviteChangeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public int getInviteChangeCount() {
        if (inviteChangeBuilder_ == null) {
          return inviteChange_.size();
        } else {
          return inviteChangeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange getInviteChange(int index) {
        if (inviteChangeBuilder_ == null) {
          return inviteChange_.get(index);
        } else {
          return inviteChangeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder setInviteChange(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange value) {
        if (inviteChangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInviteChangeIsMutable();
          inviteChange_.set(index, value);
          onChanged();
        } else {
          inviteChangeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder setInviteChange(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder builderForValue) {
        if (inviteChangeBuilder_ == null) {
          ensureInviteChangeIsMutable();
          inviteChange_.set(index, builderForValue.build());
          onChanged();
        } else {
          inviteChangeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder addInviteChange(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange value) {
        if (inviteChangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInviteChangeIsMutable();
          inviteChange_.add(value);
          onChanged();
        } else {
          inviteChangeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder addInviteChange(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange value) {
        if (inviteChangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInviteChangeIsMutable();
          inviteChange_.add(index, value);
          onChanged();
        } else {
          inviteChangeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder addInviteChange(
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder builderForValue) {
        if (inviteChangeBuilder_ == null) {
          ensureInviteChangeIsMutable();
          inviteChange_.add(builderForValue.build());
          onChanged();
        } else {
          inviteChangeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder addInviteChange(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder builderForValue) {
        if (inviteChangeBuilder_ == null) {
          ensureInviteChangeIsMutable();
          inviteChange_.add(index, builderForValue.build());
          onChanged();
        } else {
          inviteChangeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder addAllInviteChange(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange> values) {
        if (inviteChangeBuilder_ == null) {
          ensureInviteChangeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inviteChange_);
          onChanged();
        } else {
          inviteChangeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder clearInviteChange() {
        if (inviteChangeBuilder_ == null) {
          inviteChange_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          inviteChangeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public Builder removeInviteChange(int index) {
        if (inviteChangeBuilder_ == null) {
          ensureInviteChangeIsMutable();
          inviteChange_.remove(index);
          onChanged();
        } else {
          inviteChangeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder getInviteChangeBuilder(
          int index) {
        return getInviteChangeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder getInviteChangeOrBuilder(
          int index) {
        if (inviteChangeBuilder_ == null) {
          return inviteChange_.get(index);  } else {
          return inviteChangeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder> 
           getInviteChangeOrBuilderList() {
        if (inviteChangeBuilder_ != null) {
          return inviteChangeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inviteChange_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder addInviteChangeBuilder() {
        return getInviteChangeFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder addInviteChangeBuilder(
          int index) {
        return getInviteChangeFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange invite_change = 3;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder> 
           getInviteChangeBuilderList() {
        return getInviteChangeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder> 
          getInviteChangeFieldBuilder() {
        if (inviteChangeBuilder_ == null) {
          inviteChangeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange.Builder, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChangeOrBuilder>(
                  inviteChange_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          inviteChange_ = null;
        }
        return inviteChangeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueEditInvitesRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueEditInvitesRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInvitesRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueEditInvitesRequest>() {
      public CMsgDOTAFantasyLeagueEditInvitesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueEditInvitesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInvitesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInvitesRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueEditInvitesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueEditInvitesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesResponse}
   */
  public  static final class CMsgDOTAFantasyLeagueEditInvitesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueEditInvitesResponse)
      CMsgDOTAFantasyLeagueEditInvitesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueEditInvitesResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueEditInvitesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueEditInvitesResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueEditInvitesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueEditInvitesResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueEditInvitesResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueEditInvitesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueEditInvitesResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueEditInvitesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueEditInvitesResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueEditInvitesResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInvitesResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueEditInvitesResponse>() {
      public CMsgDOTAFantasyLeagueEditInvitesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueEditInvitesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInvitesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueEditInvitesResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueEditInvitesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueDraftStatusRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueDraftStatusRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueDraftStatusRequest}
   */
  public  static final class CMsgDOTAFantasyLeagueDraftStatusRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueDraftStatusRequest)
      CMsgDOTAFantasyLeagueDraftStatusRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueDraftStatusRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueDraftStatusRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueDraftStatusRequest() {
      fantasyLeagueId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueDraftStatusRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueDraftStatusRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueDraftStatusRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueDraftStatusRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueDraftStatusRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftStatusRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueDraftStatusRequest>() {
      public CMsgDOTAFantasyLeagueDraftStatusRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueDraftStatusRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftStatusRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftStatusRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueDraftStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueDraftStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    java.util.List<java.lang.Integer> getDraftOrderList();
    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    int getDraftOrderCount();
    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    int getDraftOrder(int index);

    /**
     * <code>optional uint32 current_pick = 3;</code>
     */
    boolean hasCurrentPick();
    /**
     * <code>optional uint32 current_pick = 3;</code>
     */
    int getCurrentPick();

    /**
     * <code>optional uint32 time_remaining = 4;</code>
     */
    boolean hasTimeRemaining();
    /**
     * <code>optional uint32 time_remaining = 4;</code>
     */
    int getTimeRemaining();

    /**
     * <code>optional bool pending_resume = 5;</code>
     */
    boolean hasPendingResume();
    /**
     * <code>optional bool pending_resume = 5;</code>
     */
    boolean getPendingResume();

    /**
     * <code>optional bool completed = 6;</code>
     */
    boolean hasCompleted();
    /**
     * <code>optional bool completed = 6;</code>
     */
    boolean getCompleted();

    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    java.util.List<java.lang.Integer> getAvailablePlayersList();
    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    int getAvailablePlayersCount();
    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    int getAvailablePlayers(int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueDraftStatus}
   */
  public  static final class CMsgDOTAFantasyLeagueDraftStatus extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueDraftStatus)
      CMsgDOTAFantasyLeagueDraftStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueDraftStatus.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueDraftStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueDraftStatus() {
      fantasyLeagueId_ = 0;
      draftOrder_ = java.util.Collections.emptyList();
      currentPick_ = 0;
      timeRemaining_ = 0;
      pendingResume_ = false;
      completed_ = false;
      availablePlayers_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueDraftStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                draftOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              draftOrder_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                draftOrder_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                draftOrder_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              currentPick_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              timeRemaining_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              pendingResume_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              completed_ = input.readBool();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                availablePlayers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              availablePlayers_.add(input.readUInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                availablePlayers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                availablePlayers_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          draftOrder_ = java.util.Collections.unmodifiableList(draftOrder_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          availablePlayers_ = java.util.Collections.unmodifiableList(availablePlayers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int DRAFT_ORDER_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> draftOrder_;
    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getDraftOrderList() {
      return draftOrder_;
    }
    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    public int getDraftOrderCount() {
      return draftOrder_.size();
    }
    /**
     * <code>repeated uint32 draft_order = 2;</code>
     */
    public int getDraftOrder(int index) {
      return draftOrder_.get(index);
    }

    public static final int CURRENT_PICK_FIELD_NUMBER = 3;
    private int currentPick_;
    /**
     * <code>optional uint32 current_pick = 3;</code>
     */
    public boolean hasCurrentPick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 current_pick = 3;</code>
     */
    public int getCurrentPick() {
      return currentPick_;
    }

    public static final int TIME_REMAINING_FIELD_NUMBER = 4;
    private int timeRemaining_;
    /**
     * <code>optional uint32 time_remaining = 4;</code>
     */
    public boolean hasTimeRemaining() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 time_remaining = 4;</code>
     */
    public int getTimeRemaining() {
      return timeRemaining_;
    }

    public static final int PENDING_RESUME_FIELD_NUMBER = 5;
    private boolean pendingResume_;
    /**
     * <code>optional bool pending_resume = 5;</code>
     */
    public boolean hasPendingResume() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool pending_resume = 5;</code>
     */
    public boolean getPendingResume() {
      return pendingResume_;
    }

    public static final int COMPLETED_FIELD_NUMBER = 6;
    private boolean completed_;
    /**
     * <code>optional bool completed = 6;</code>
     */
    public boolean hasCompleted() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool completed = 6;</code>
     */
    public boolean getCompleted() {
      return completed_;
    }

    public static final int AVAILABLE_PLAYERS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> availablePlayers_;
    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getAvailablePlayersList() {
      return availablePlayers_;
    }
    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    public int getAvailablePlayersCount() {
      return availablePlayers_.size();
    }
    /**
     * <code>repeated uint32 available_players = 7;</code>
     */
    public int getAvailablePlayers(int index) {
      return availablePlayers_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      for (int i = 0; i < draftOrder_.size(); i++) {
        output.writeUInt32(2, draftOrder_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, currentPick_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, timeRemaining_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(5, pendingResume_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, completed_);
      }
      for (int i = 0; i < availablePlayers_.size(); i++) {
        output.writeUInt32(7, availablePlayers_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < draftOrder_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(draftOrder_.get(i));
        }
        size += dataSize;
        size += 1 * getDraftOrderList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, currentPick_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, timeRemaining_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, pendingResume_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, completed_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < availablePlayers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(availablePlayers_.get(i));
        }
        size += dataSize;
        size += 1 * getAvailablePlayersList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && getDraftOrderList()
          .equals(other.getDraftOrderList());
      result = result && (hasCurrentPick() == other.hasCurrentPick());
      if (hasCurrentPick()) {
        result = result && (getCurrentPick()
            == other.getCurrentPick());
      }
      result = result && (hasTimeRemaining() == other.hasTimeRemaining());
      if (hasTimeRemaining()) {
        result = result && (getTimeRemaining()
            == other.getTimeRemaining());
      }
      result = result && (hasPendingResume() == other.hasPendingResume());
      if (hasPendingResume()) {
        result = result && (getPendingResume()
            == other.getPendingResume());
      }
      result = result && (hasCompleted() == other.hasCompleted());
      if (hasCompleted()) {
        result = result && (getCompleted()
            == other.getCompleted());
      }
      result = result && getAvailablePlayersList()
          .equals(other.getAvailablePlayersList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (getDraftOrderCount() > 0) {
        hash = (37 * hash) + DRAFT_ORDER_FIELD_NUMBER;
        hash = (53 * hash) + getDraftOrderList().hashCode();
      }
      if (hasCurrentPick()) {
        hash = (37 * hash) + CURRENT_PICK_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentPick();
      }
      if (hasTimeRemaining()) {
        hash = (37 * hash) + TIME_REMAINING_FIELD_NUMBER;
        hash = (53 * hash) + getTimeRemaining();
      }
      if (hasPendingResume()) {
        hash = (37 * hash) + PENDING_RESUME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPendingResume());
      }
      if (hasCompleted()) {
        hash = (37 * hash) + COMPLETED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getCompleted());
      }
      if (getAvailablePlayersCount() > 0) {
        hash = (37 * hash) + AVAILABLE_PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getAvailablePlayersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueDraftStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueDraftStatus)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        draftOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        currentPick_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        timeRemaining_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        pendingResume_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        completed_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        availablePlayers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          draftOrder_ = java.util.Collections.unmodifiableList(draftOrder_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.draftOrder_ = draftOrder_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPick_ = currentPick_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeRemaining_ = timeRemaining_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pendingResume_ = pendingResume_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.completed_ = completed_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          availablePlayers_ = java.util.Collections.unmodifiableList(availablePlayers_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.availablePlayers_ = availablePlayers_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (!other.draftOrder_.isEmpty()) {
          if (draftOrder_.isEmpty()) {
            draftOrder_ = other.draftOrder_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDraftOrderIsMutable();
            draftOrder_.addAll(other.draftOrder_);
          }
          onChanged();
        }
        if (other.hasCurrentPick()) {
          setCurrentPick(other.getCurrentPick());
        }
        if (other.hasTimeRemaining()) {
          setTimeRemaining(other.getTimeRemaining());
        }
        if (other.hasPendingResume()) {
          setPendingResume(other.getPendingResume());
        }
        if (other.hasCompleted()) {
          setCompleted(other.getCompleted());
        }
        if (!other.availablePlayers_.isEmpty()) {
          if (availablePlayers_.isEmpty()) {
            availablePlayers_ = other.availablePlayers_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureAvailablePlayersIsMutable();
            availablePlayers_.addAll(other.availablePlayers_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> draftOrder_ = java.util.Collections.emptyList();
      private void ensureDraftOrderIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          draftOrder_ = new java.util.ArrayList<java.lang.Integer>(draftOrder_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getDraftOrderList() {
        return java.util.Collections.unmodifiableList(draftOrder_);
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public int getDraftOrderCount() {
        return draftOrder_.size();
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public int getDraftOrder(int index) {
        return draftOrder_.get(index);
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public Builder setDraftOrder(
          int index, int value) {
        ensureDraftOrderIsMutable();
        draftOrder_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public Builder addDraftOrder(int value) {
        ensureDraftOrderIsMutable();
        draftOrder_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public Builder addAllDraftOrder(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDraftOrderIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, draftOrder_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 draft_order = 2;</code>
       */
      public Builder clearDraftOrder() {
        draftOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int currentPick_ ;
      /**
       * <code>optional uint32 current_pick = 3;</code>
       */
      public boolean hasCurrentPick() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 current_pick = 3;</code>
       */
      public int getCurrentPick() {
        return currentPick_;
      }
      /**
       * <code>optional uint32 current_pick = 3;</code>
       */
      public Builder setCurrentPick(int value) {
        bitField0_ |= 0x00000004;
        currentPick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 current_pick = 3;</code>
       */
      public Builder clearCurrentPick() {
        bitField0_ = (bitField0_ & ~0x00000004);
        currentPick_ = 0;
        onChanged();
        return this;
      }

      private int timeRemaining_ ;
      /**
       * <code>optional uint32 time_remaining = 4;</code>
       */
      public boolean hasTimeRemaining() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 time_remaining = 4;</code>
       */
      public int getTimeRemaining() {
        return timeRemaining_;
      }
      /**
       * <code>optional uint32 time_remaining = 4;</code>
       */
      public Builder setTimeRemaining(int value) {
        bitField0_ |= 0x00000008;
        timeRemaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 time_remaining = 4;</code>
       */
      public Builder clearTimeRemaining() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timeRemaining_ = 0;
        onChanged();
        return this;
      }

      private boolean pendingResume_ ;
      /**
       * <code>optional bool pending_resume = 5;</code>
       */
      public boolean hasPendingResume() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool pending_resume = 5;</code>
       */
      public boolean getPendingResume() {
        return pendingResume_;
      }
      /**
       * <code>optional bool pending_resume = 5;</code>
       */
      public Builder setPendingResume(boolean value) {
        bitField0_ |= 0x00000010;
        pendingResume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pending_resume = 5;</code>
       */
      public Builder clearPendingResume() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pendingResume_ = false;
        onChanged();
        return this;
      }

      private boolean completed_ ;
      /**
       * <code>optional bool completed = 6;</code>
       */
      public boolean hasCompleted() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool completed = 6;</code>
       */
      public boolean getCompleted() {
        return completed_;
      }
      /**
       * <code>optional bool completed = 6;</code>
       */
      public Builder setCompleted(boolean value) {
        bitField0_ |= 0x00000020;
        completed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool completed = 6;</code>
       */
      public Builder clearCompleted() {
        bitField0_ = (bitField0_ & ~0x00000020);
        completed_ = false;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> availablePlayers_ = java.util.Collections.emptyList();
      private void ensureAvailablePlayersIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          availablePlayers_ = new java.util.ArrayList<java.lang.Integer>(availablePlayers_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getAvailablePlayersList() {
        return java.util.Collections.unmodifiableList(availablePlayers_);
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public int getAvailablePlayersCount() {
        return availablePlayers_.size();
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public int getAvailablePlayers(int index) {
        return availablePlayers_.get(index);
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public Builder setAvailablePlayers(
          int index, int value) {
        ensureAvailablePlayersIsMutable();
        availablePlayers_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public Builder addAvailablePlayers(int value) {
        ensureAvailablePlayersIsMutable();
        availablePlayers_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public Builder addAllAvailablePlayers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAvailablePlayersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, availablePlayers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 available_players = 7;</code>
       */
      public Builder clearAvailablePlayers() {
        availablePlayers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueDraftStatus)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueDraftStatus)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftStatus>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueDraftStatus>() {
      public CMsgDOTAFantasyLeagueDraftStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueDraftStatus(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftStatus> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueDraftPlayerRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueDraftPlayerRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    int getTeamIndex();

    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    boolean hasPlayerAccountId();
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    int getPlayerAccountId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueDraftPlayerRequest}
   */
  public  static final class CMsgDOTAFantasyLeagueDraftPlayerRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueDraftPlayerRequest)
      CMsgDOTAFantasyLeagueDraftPlayerRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueDraftPlayerRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueDraftPlayerRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueDraftPlayerRequest() {
      fantasyLeagueId_ = 0;
      teamIndex_ = 0;
      playerAccountId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueDraftPlayerRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              teamIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              playerAccountId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 2;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 3;
    private int playerAccountId_;
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    public boolean hasPlayerAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 player_account_id = 3;</code>
     */
    public int getPlayerAccountId() {
      return playerAccountId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, playerAccountId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, playerAccountId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasTeamIndex() == other.hasTeamIndex());
      if (hasTeamIndex()) {
        result = result && (getTeamIndex()
            == other.getTeamIndex());
      }
      result = result && (hasPlayerAccountId() == other.hasPlayerAccountId());
      if (hasPlayerAccountId()) {
        result = result && (getPlayerAccountId()
            == other.getPlayerAccountId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasTeamIndex()) {
        hash = (37 * hash) + TEAM_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTeamIndex();
      }
      if (hasPlayerAccountId()) {
        hash = (37 * hash) + PLAYER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerAccountId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueDraftPlayerRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueDraftPlayerRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex_ = teamIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerAccountId_ = playerAccountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        if (other.hasPlayerAccountId()) {
          setPlayerAccountId(other.getPlayerAccountId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        onChanged();
        return this;
      }

      private int playerAccountId_ ;
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public boolean hasPlayerAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public int getPlayerAccountId() {
        return playerAccountId_;
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public Builder setPlayerAccountId(int value) {
        bitField0_ |= 0x00000004;
        playerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_account_id = 3;</code>
       */
      public Builder clearPlayerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerAccountId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueDraftPlayerRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueDraftPlayerRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftPlayerRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueDraftPlayerRequest>() {
      public CMsgDOTAFantasyLeagueDraftPlayerRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueDraftPlayerRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftPlayerRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftPlayerRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeagueDraftPlayerResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeagueDraftPlayerResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeagueDraftPlayerResponse}
   */
  public  static final class CMsgDOTAFantasyLeagueDraftPlayerResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeagueDraftPlayerResponse)
      CMsgDOTAFantasyLeagueDraftPlayerResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeagueDraftPlayerResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeagueDraftPlayerResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeagueDraftPlayerResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeagueDraftPlayerResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_INVALID_FANTASY_LEAGUE = 2;</code>
       */
      ERROR_INVALID_FANTASY_LEAGUE(2),
      /**
       * <code>ERROR_FANTASY_LEAGUE_NOT_DRAFTING = 3;</code>
       */
      ERROR_FANTASY_LEAGUE_NOT_DRAFTING(3),
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 4;</code>
       */
      ERROR_OWNER_NOT_IN_LEAGUE(4),
      /**
       * <code>ERROR_NOT_OWNERS_TURN = 5;</code>
       */
      ERROR_NOT_OWNERS_TURN(5),
      /**
       * <code>ERROR_PLAYER_INVALID = 6;</code>
       */
      ERROR_PLAYER_INVALID(6),
      /**
       * <code>ERROR_PLAYER_UNAVAILABLE = 7;</code>
       */
      ERROR_PLAYER_UNAVAILABLE(7),
      /**
       * <code>ERROR_PLAYER_NO_VALID_SLOTS = 8;</code>
       */
      ERROR_PLAYER_NO_VALID_SLOTS(8),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_INVALID_FANTASY_LEAGUE = 2;</code>
       */
      public static final int ERROR_INVALID_FANTASY_LEAGUE_VALUE = 2;
      /**
       * <code>ERROR_FANTASY_LEAGUE_NOT_DRAFTING = 3;</code>
       */
      public static final int ERROR_FANTASY_LEAGUE_NOT_DRAFTING_VALUE = 3;
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 4;</code>
       */
      public static final int ERROR_OWNER_NOT_IN_LEAGUE_VALUE = 4;
      /**
       * <code>ERROR_NOT_OWNERS_TURN = 5;</code>
       */
      public static final int ERROR_NOT_OWNERS_TURN_VALUE = 5;
      /**
       * <code>ERROR_PLAYER_INVALID = 6;</code>
       */
      public static final int ERROR_PLAYER_INVALID_VALUE = 6;
      /**
       * <code>ERROR_PLAYER_UNAVAILABLE = 7;</code>
       */
      public static final int ERROR_PLAYER_UNAVAILABLE_VALUE = 7;
      /**
       * <code>ERROR_PLAYER_NO_VALID_SLOTS = 8;</code>
       */
      public static final int ERROR_PLAYER_NO_VALID_SLOTS_VALUE = 8;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_INVALID_FANTASY_LEAGUE;
          case 3: return ERROR_FANTASY_LEAGUE_NOT_DRAFTING;
          case 4: return ERROR_OWNER_NOT_IN_LEAGUE;
          case 5: return ERROR_NOT_OWNERS_TURN;
          case 6: return ERROR_PLAYER_INVALID;
          case 7: return ERROR_PLAYER_UNAVAILABLE;
          case 8: return ERROR_PLAYER_NO_VALID_SLOTS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeagueDraftPlayerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeagueDraftPlayerResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeagueDraftPlayerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeagueDraftPlayerResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeagueDraftPlayerResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftPlayerResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeagueDraftPlayerResponse>() {
      public CMsgDOTAFantasyLeagueDraftPlayerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeagueDraftPlayerResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftPlayerResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeagueDraftPlayerResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeagueDraftPlayerResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamRosterSwapRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterSwapRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    int getTeamIndex();

    /**
     * <code>optional uint32 timestamp = 3;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 timestamp = 3;</code>
     */
    int getTimestamp();

    /**
     * <code>optional uint32 slot_1 = 4;</code>
     */
    boolean hasSlot1();
    /**
     * <code>optional uint32 slot_1 = 4;</code>
     */
    int getSlot1();

    /**
     * <code>optional uint32 slot_2 = 5;</code>
     */
    boolean hasSlot2();
    /**
     * <code>optional uint32 slot_2 = 5;</code>
     */
    int getSlot2();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterSwapRequest}
   */
  public  static final class CMsgDOTAFantasyTeamRosterSwapRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterSwapRequest)
      CMsgDOTAFantasyTeamRosterSwapRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamRosterSwapRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterSwapRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamRosterSwapRequest() {
      fantasyLeagueId_ = 0;
      teamIndex_ = 0;
      timestamp_ = 0;
      slot1_ = 0;
      slot2_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterSwapRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              teamIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              slot1_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              slot2_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 2;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private int timestamp_;
    /**
     * <code>optional uint32 timestamp = 3;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 timestamp = 3;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int SLOT_1_FIELD_NUMBER = 4;
    private int slot1_;
    /**
     * <code>optional uint32 slot_1 = 4;</code>
     */
    public boolean hasSlot1() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 slot_1 = 4;</code>
     */
    public int getSlot1() {
      return slot1_;
    }

    public static final int SLOT_2_FIELD_NUMBER = 5;
    private int slot2_;
    /**
     * <code>optional uint32 slot_2 = 5;</code>
     */
    public boolean hasSlot2() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 slot_2 = 5;</code>
     */
    public int getSlot2() {
      return slot2_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, slot1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, slot2_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, slot1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, slot2_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasTeamIndex() == other.hasTeamIndex());
      if (hasTeamIndex()) {
        result = result && (getTeamIndex()
            == other.getTeamIndex());
      }
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && (hasSlot1() == other.hasSlot1());
      if (hasSlot1()) {
        result = result && (getSlot1()
            == other.getSlot1());
      }
      result = result && (hasSlot2() == other.hasSlot2());
      if (hasSlot2()) {
        result = result && (getSlot2()
            == other.getSlot2());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasTeamIndex()) {
        hash = (37 * hash) + TEAM_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTeamIndex();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      if (hasSlot1()) {
        hash = (37 * hash) + SLOT_1_FIELD_NUMBER;
        hash = (53 * hash) + getSlot1();
      }
      if (hasSlot2()) {
        hash = (37 * hash) + SLOT_2_FIELD_NUMBER;
        hash = (53 * hash) + getSlot2();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterSwapRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterSwapRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        slot1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        slot2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex_ = teamIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.slot1_ = slot1_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.slot2_ = slot2_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasSlot1()) {
          setSlot1(other.getSlot1());
        }
        if (other.hasSlot2()) {
          setSlot2(other.getSlot2());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>optional uint32 timestamp = 3;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 timestamp = 3;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 timestamp = 3;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timestamp = 3;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private int slot1_ ;
      /**
       * <code>optional uint32 slot_1 = 4;</code>
       */
      public boolean hasSlot1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 slot_1 = 4;</code>
       */
      public int getSlot1() {
        return slot1_;
      }
      /**
       * <code>optional uint32 slot_1 = 4;</code>
       */
      public Builder setSlot1(int value) {
        bitField0_ |= 0x00000008;
        slot1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_1 = 4;</code>
       */
      public Builder clearSlot1() {
        bitField0_ = (bitField0_ & ~0x00000008);
        slot1_ = 0;
        onChanged();
        return this;
      }

      private int slot2_ ;
      /**
       * <code>optional uint32 slot_2 = 5;</code>
       */
      public boolean hasSlot2() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 slot_2 = 5;</code>
       */
      public int getSlot2() {
        return slot2_;
      }
      /**
       * <code>optional uint32 slot_2 = 5;</code>
       */
      public Builder setSlot2(int value) {
        bitField0_ |= 0x00000010;
        slot2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_2 = 5;</code>
       */
      public Builder clearSlot2() {
        bitField0_ = (bitField0_ & ~0x00000010);
        slot2_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterSwapRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterSwapRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterSwapRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterSwapRequest>() {
      public CMsgDOTAFantasyTeamRosterSwapRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamRosterSwapRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterSwapRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterSwapRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamRosterSwapResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterSwapResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterSwapResponse}
   */
  public  static final class CMsgDOTAFantasyTeamRosterSwapResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterSwapResponse)
      CMsgDOTAFantasyTeamRosterSwapResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamRosterSwapResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterSwapResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamRosterSwapResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterSwapResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamRosterSwapResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 2;</code>
       */
      ERROR_OWNER_NOT_IN_LEAGUE(2),
      /**
       * <code>ERROR_SLOTS_INVALID = 3;</code>
       */
      ERROR_SLOTS_INVALID(3),
      /**
       * <code>ERROR_SLOT_LOCKED = 4;</code>
       */
      ERROR_SLOT_LOCKED(4),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 2;</code>
       */
      public static final int ERROR_OWNER_NOT_IN_LEAGUE_VALUE = 2;
      /**
       * <code>ERROR_SLOTS_INVALID = 3;</code>
       */
      public static final int ERROR_SLOTS_INVALID_VALUE = 3;
      /**
       * <code>ERROR_SLOT_LOCKED = 4;</code>
       */
      public static final int ERROR_SLOT_LOCKED_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_OWNER_NOT_IN_LEAGUE;
          case 3: return ERROR_SLOTS_INVALID;
          case 4: return ERROR_SLOT_LOCKED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamRosterSwapResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterSwapResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterSwapResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterSwapResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterSwapResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterSwapResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterSwapResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterSwapResponse>() {
      public CMsgDOTAFantasyTeamRosterSwapResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamRosterSwapResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterSwapResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterSwapResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterSwapResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamRosterAddDropRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterAddDropRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    int getTeamIndex();

    /**
     * <code>optional uint32 add_account_id = 5;</code>
     */
    boolean hasAddAccountId();
    /**
     * <code>optional uint32 add_account_id = 5;</code>
     */
    int getAddAccountId();

    /**
     * <code>optional uint32 drop_account_id = 6;</code>
     */
    boolean hasDropAccountId();
    /**
     * <code>optional uint32 drop_account_id = 6;</code>
     */
    int getDropAccountId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterAddDropRequest}
   */
  public  static final class CMsgDOTAFantasyTeamRosterAddDropRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterAddDropRequest)
      CMsgDOTAFantasyTeamRosterAddDropRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamRosterAddDropRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterAddDropRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamRosterAddDropRequest() {
      fantasyLeagueId_ = 0;
      teamIndex_ = 0;
      addAccountId_ = 0;
      dropAccountId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterAddDropRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              teamIndex_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              addAccountId_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              dropAccountId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 2;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    public static final int ADD_ACCOUNT_ID_FIELD_NUMBER = 5;
    private int addAccountId_;
    /**
     * <code>optional uint32 add_account_id = 5;</code>
     */
    public boolean hasAddAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 add_account_id = 5;</code>
     */
    public int getAddAccountId() {
      return addAccountId_;
    }

    public static final int DROP_ACCOUNT_ID_FIELD_NUMBER = 6;
    private int dropAccountId_;
    /**
     * <code>optional uint32 drop_account_id = 6;</code>
     */
    public boolean hasDropAccountId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 drop_account_id = 6;</code>
     */
    public int getDropAccountId() {
      return dropAccountId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(5, addAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(6, dropAccountId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, addAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, dropAccountId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasTeamIndex() == other.hasTeamIndex());
      if (hasTeamIndex()) {
        result = result && (getTeamIndex()
            == other.getTeamIndex());
      }
      result = result && (hasAddAccountId() == other.hasAddAccountId());
      if (hasAddAccountId()) {
        result = result && (getAddAccountId()
            == other.getAddAccountId());
      }
      result = result && (hasDropAccountId() == other.hasDropAccountId());
      if (hasDropAccountId()) {
        result = result && (getDropAccountId()
            == other.getDropAccountId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasTeamIndex()) {
        hash = (37 * hash) + TEAM_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTeamIndex();
      }
      if (hasAddAccountId()) {
        hash = (37 * hash) + ADD_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAddAccountId();
      }
      if (hasDropAccountId()) {
        hash = (37 * hash) + DROP_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDropAccountId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterAddDropRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterAddDropRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        addAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        dropAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex_ = teamIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.addAccountId_ = addAccountId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dropAccountId_ = dropAccountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        if (other.hasAddAccountId()) {
          setAddAccountId(other.getAddAccountId());
        }
        if (other.hasDropAccountId()) {
          setDropAccountId(other.getDropAccountId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        onChanged();
        return this;
      }

      private int addAccountId_ ;
      /**
       * <code>optional uint32 add_account_id = 5;</code>
       */
      public boolean hasAddAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 add_account_id = 5;</code>
       */
      public int getAddAccountId() {
        return addAccountId_;
      }
      /**
       * <code>optional uint32 add_account_id = 5;</code>
       */
      public Builder setAddAccountId(int value) {
        bitField0_ |= 0x00000004;
        addAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 add_account_id = 5;</code>
       */
      public Builder clearAddAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        addAccountId_ = 0;
        onChanged();
        return this;
      }

      private int dropAccountId_ ;
      /**
       * <code>optional uint32 drop_account_id = 6;</code>
       */
      public boolean hasDropAccountId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 drop_account_id = 6;</code>
       */
      public int getDropAccountId() {
        return dropAccountId_;
      }
      /**
       * <code>optional uint32 drop_account_id = 6;</code>
       */
      public Builder setDropAccountId(int value) {
        bitField0_ |= 0x00000008;
        dropAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 drop_account_id = 6;</code>
       */
      public Builder clearDropAccountId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dropAccountId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterAddDropRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterAddDropRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterAddDropRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterAddDropRequest>() {
      public CMsgDOTAFantasyTeamRosterAddDropRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamRosterAddDropRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterAddDropRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterAddDropRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamRosterAddDropResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterAddDropResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterAddDropResponse}
   */
  public  static final class CMsgDOTAFantasyTeamRosterAddDropResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterAddDropResponse)
      CMsgDOTAFantasyTeamRosterAddDropResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamRosterAddDropResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterAddDropResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamRosterAddDropResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterAddDropResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamRosterAddDropResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 2;</code>
       */
      ERROR_OWNER_NOT_IN_LEAGUE(2),
      /**
       * <code>ERROR_PLAYER_NOT_AVAILABLE = 3;</code>
       */
      ERROR_PLAYER_NOT_AVAILABLE(3),
      /**
       * <code>ERROR_PLAYER_NOT_ON_TEAM = 4;</code>
       */
      ERROR_PLAYER_NOT_ON_TEAM(4),
      /**
       * <code>ERROR_TRADE_ALREADY_PENDING = 5;</code>
       */
      ERROR_TRADE_ALREADY_PENDING(5),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 2;</code>
       */
      public static final int ERROR_OWNER_NOT_IN_LEAGUE_VALUE = 2;
      /**
       * <code>ERROR_PLAYER_NOT_AVAILABLE = 3;</code>
       */
      public static final int ERROR_PLAYER_NOT_AVAILABLE_VALUE = 3;
      /**
       * <code>ERROR_PLAYER_NOT_ON_TEAM = 4;</code>
       */
      public static final int ERROR_PLAYER_NOT_ON_TEAM_VALUE = 4;
      /**
       * <code>ERROR_TRADE_ALREADY_PENDING = 5;</code>
       */
      public static final int ERROR_TRADE_ALREADY_PENDING_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_OWNER_NOT_IN_LEAGUE;
          case 3: return ERROR_PLAYER_NOT_AVAILABLE;
          case 4: return ERROR_PLAYER_NOT_ON_TEAM;
          case 5: return ERROR_TRADE_ALREADY_PENDING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamRosterAddDropResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterAddDropResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterAddDropResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterAddDropResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterAddDropResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterAddDropResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterAddDropResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterAddDropResponse>() {
      public CMsgDOTAFantasyTeamRosterAddDropResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamRosterAddDropResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterAddDropResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterAddDropResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterAddDropResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamTradesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamTradesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamTradesRequest}
   */
  public  static final class CMsgDOTAFantasyTeamTradesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamTradesRequest)
      CMsgDOTAFantasyTeamTradesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamTradesRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamTradesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamTradesRequest() {
      fantasyLeagueId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamTradesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamTradesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamTradesRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamTradesRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamTradesRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradesRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamTradesRequest>() {
      public CMsgDOTAFantasyTeamTradesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamTradesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradesRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamTradesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamTradesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> 
        getTradesList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade getTrades(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    int getTradesCount();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder> 
        getTradesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder getTradesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamTradesResponse}
   */
  public  static final class CMsgDOTAFantasyTeamTradesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamTradesResponse)
      CMsgDOTAFantasyTeamTradesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamTradesResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamTradesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamTradesResponse() {
      result_ = 0;
      trades_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamTradesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                trades_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade>();
                mutable_bitField0_ |= 0x00000002;
              }
              trades_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          trades_ = java.util.Collections.unmodifiableList(trades_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamTradesResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamTradesResponse.EResult)
    }

    public interface TradeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamTradesResponse.Trade)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      boolean hasTimestamp();
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      int getTimestamp();

      /**
       * <code>optional uint32 owner_account_id_1 = 2;</code>
       */
      boolean hasOwnerAccountId1();
      /**
       * <code>optional uint32 owner_account_id_1 = 2;</code>
       */
      int getOwnerAccountId1();

      /**
       * <code>optional uint32 owner_account_id_2 = 3;</code>
       */
      boolean hasOwnerAccountId2();
      /**
       * <code>optional uint32 owner_account_id_2 = 3;</code>
       */
      int getOwnerAccountId2();

      /**
       * <code>optional uint32 player_account_id_1 = 4;</code>
       */
      boolean hasPlayerAccountId1();
      /**
       * <code>optional uint32 player_account_id_1 = 4;</code>
       */
      int getPlayerAccountId1();

      /**
       * <code>optional uint32 player_account_id_2 = 5;</code>
       */
      boolean hasPlayerAccountId2();
      /**
       * <code>optional uint32 player_account_id_2 = 5;</code>
       */
      int getPlayerAccountId2();

      /**
       * <code>optional uint32 status = 6;</code>
       */
      boolean hasStatus();
      /**
       * <code>optional uint32 status = 6;</code>
       */
      int getStatus();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamTradesResponse.Trade}
     */
    public  static final class Trade extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamTradesResponse.Trade)
        TradeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Trade.newBuilder() to construct.
      private Trade(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Trade() {
        timestamp_ = 0;
        ownerAccountId1_ = 0;
        ownerAccountId2_ = 0;
        playerAccountId1_ = 0;
        playerAccountId2_ = 0;
        status_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Trade(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                timestamp_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                ownerAccountId1_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                ownerAccountId2_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                playerAccountId1_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                playerAccountId2_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                status_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder.class);
      }

      private int bitField0_;
      public static final int TIMESTAMP_FIELD_NUMBER = 1;
      private int timestamp_;
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }

      public static final int OWNER_ACCOUNT_ID_1_FIELD_NUMBER = 2;
      private int ownerAccountId1_;
      /**
       * <code>optional uint32 owner_account_id_1 = 2;</code>
       */
      public boolean hasOwnerAccountId1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id_1 = 2;</code>
       */
      public int getOwnerAccountId1() {
        return ownerAccountId1_;
      }

      public static final int OWNER_ACCOUNT_ID_2_FIELD_NUMBER = 3;
      private int ownerAccountId2_;
      /**
       * <code>optional uint32 owner_account_id_2 = 3;</code>
       */
      public boolean hasOwnerAccountId2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 owner_account_id_2 = 3;</code>
       */
      public int getOwnerAccountId2() {
        return ownerAccountId2_;
      }

      public static final int PLAYER_ACCOUNT_ID_1_FIELD_NUMBER = 4;
      private int playerAccountId1_;
      /**
       * <code>optional uint32 player_account_id_1 = 4;</code>
       */
      public boolean hasPlayerAccountId1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 player_account_id_1 = 4;</code>
       */
      public int getPlayerAccountId1() {
        return playerAccountId1_;
      }

      public static final int PLAYER_ACCOUNT_ID_2_FIELD_NUMBER = 5;
      private int playerAccountId2_;
      /**
       * <code>optional uint32 player_account_id_2 = 5;</code>
       */
      public boolean hasPlayerAccountId2() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 player_account_id_2 = 5;</code>
       */
      public int getPlayerAccountId2() {
        return playerAccountId2_;
      }

      public static final int STATUS_FIELD_NUMBER = 6;
      private int status_;
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 status = 6;</code>
       */
      public int getStatus() {
        return status_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, timestamp_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, ownerAccountId1_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, ownerAccountId2_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, playerAccountId1_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, playerAccountId2_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, status_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, timestamp_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, ownerAccountId1_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, ownerAccountId2_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, playerAccountId1_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, playerAccountId2_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, status_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade) obj;

        boolean result = true;
        result = result && (hasTimestamp() == other.hasTimestamp());
        if (hasTimestamp()) {
          result = result && (getTimestamp()
              == other.getTimestamp());
        }
        result = result && (hasOwnerAccountId1() == other.hasOwnerAccountId1());
        if (hasOwnerAccountId1()) {
          result = result && (getOwnerAccountId1()
              == other.getOwnerAccountId1());
        }
        result = result && (hasOwnerAccountId2() == other.hasOwnerAccountId2());
        if (hasOwnerAccountId2()) {
          result = result && (getOwnerAccountId2()
              == other.getOwnerAccountId2());
        }
        result = result && (hasPlayerAccountId1() == other.hasPlayerAccountId1());
        if (hasPlayerAccountId1()) {
          result = result && (getPlayerAccountId1()
              == other.getPlayerAccountId1());
        }
        result = result && (hasPlayerAccountId2() == other.hasPlayerAccountId2());
        if (hasPlayerAccountId2()) {
          result = result && (getPlayerAccountId2()
              == other.getPlayerAccountId2());
        }
        result = result && (hasStatus() == other.hasStatus());
        if (hasStatus()) {
          result = result && (getStatus()
              == other.getStatus());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTimestamp()) {
          hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + getTimestamp();
        }
        if (hasOwnerAccountId1()) {
          hash = (37 * hash) + OWNER_ACCOUNT_ID_1_FIELD_NUMBER;
          hash = (53 * hash) + getOwnerAccountId1();
        }
        if (hasOwnerAccountId2()) {
          hash = (37 * hash) + OWNER_ACCOUNT_ID_2_FIELD_NUMBER;
          hash = (53 * hash) + getOwnerAccountId2();
        }
        if (hasPlayerAccountId1()) {
          hash = (37 * hash) + PLAYER_ACCOUNT_ID_1_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerAccountId1();
        }
        if (hasPlayerAccountId2()) {
          hash = (37 * hash) + PLAYER_ACCOUNT_ID_2_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerAccountId2();
        }
        if (hasStatus()) {
          hash = (37 * hash) + STATUS_FIELD_NUMBER;
          hash = (53 * hash) + getStatus();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyTeamTradesResponse.Trade}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamTradesResponse.Trade)
          MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          timestamp_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          ownerAccountId1_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          ownerAccountId2_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          playerAccountId1_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          playerAccountId2_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          status_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade build() {
          MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.timestamp_ = timestamp_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.ownerAccountId1_ = ownerAccountId1_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.ownerAccountId2_ = ownerAccountId2_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.playerAccountId1_ = playerAccountId1_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.playerAccountId2_ = playerAccountId2_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.status_ = status_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.getDefaultInstance()) return this;
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (other.hasOwnerAccountId1()) {
            setOwnerAccountId1(other.getOwnerAccountId1());
          }
          if (other.hasOwnerAccountId2()) {
            setOwnerAccountId2(other.getOwnerAccountId2());
          }
          if (other.hasPlayerAccountId1()) {
            setPlayerAccountId1(other.getPlayerAccountId1());
          }
          if (other.hasPlayerAccountId2()) {
            setPlayerAccountId2(other.getPlayerAccountId2());
          }
          if (other.hasStatus()) {
            setStatus(other.getStatus());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int timestamp_ ;
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public int getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public Builder setTimestamp(int value) {
          bitField0_ |= 0x00000001;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000001);
          timestamp_ = 0;
          onChanged();
          return this;
        }

        private int ownerAccountId1_ ;
        /**
         * <code>optional uint32 owner_account_id_1 = 2;</code>
         */
        public boolean hasOwnerAccountId1() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 2;</code>
         */
        public int getOwnerAccountId1() {
          return ownerAccountId1_;
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 2;</code>
         */
        public Builder setOwnerAccountId1(int value) {
          bitField0_ |= 0x00000002;
          ownerAccountId1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id_1 = 2;</code>
         */
        public Builder clearOwnerAccountId1() {
          bitField0_ = (bitField0_ & ~0x00000002);
          ownerAccountId1_ = 0;
          onChanged();
          return this;
        }

        private int ownerAccountId2_ ;
        /**
         * <code>optional uint32 owner_account_id_2 = 3;</code>
         */
        public boolean hasOwnerAccountId2() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 3;</code>
         */
        public int getOwnerAccountId2() {
          return ownerAccountId2_;
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 3;</code>
         */
        public Builder setOwnerAccountId2(int value) {
          bitField0_ |= 0x00000004;
          ownerAccountId2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owner_account_id_2 = 3;</code>
         */
        public Builder clearOwnerAccountId2() {
          bitField0_ = (bitField0_ & ~0x00000004);
          ownerAccountId2_ = 0;
          onChanged();
          return this;
        }

        private int playerAccountId1_ ;
        /**
         * <code>optional uint32 player_account_id_1 = 4;</code>
         */
        public boolean hasPlayerAccountId1() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 player_account_id_1 = 4;</code>
         */
        public int getPlayerAccountId1() {
          return playerAccountId1_;
        }
        /**
         * <code>optional uint32 player_account_id_1 = 4;</code>
         */
        public Builder setPlayerAccountId1(int value) {
          bitField0_ |= 0x00000008;
          playerAccountId1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 player_account_id_1 = 4;</code>
         */
        public Builder clearPlayerAccountId1() {
          bitField0_ = (bitField0_ & ~0x00000008);
          playerAccountId1_ = 0;
          onChanged();
          return this;
        }

        private int playerAccountId2_ ;
        /**
         * <code>optional uint32 player_account_id_2 = 5;</code>
         */
        public boolean hasPlayerAccountId2() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 player_account_id_2 = 5;</code>
         */
        public int getPlayerAccountId2() {
          return playerAccountId2_;
        }
        /**
         * <code>optional uint32 player_account_id_2 = 5;</code>
         */
        public Builder setPlayerAccountId2(int value) {
          bitField0_ |= 0x00000010;
          playerAccountId2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 player_account_id_2 = 5;</code>
         */
        public Builder clearPlayerAccountId2() {
          bitField0_ = (bitField0_ & ~0x00000010);
          playerAccountId2_ = 0;
          onChanged();
          return this;
        }

        private int status_ ;
        /**
         * <code>optional uint32 status = 6;</code>
         */
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 status = 6;</code>
         */
        public int getStatus() {
          return status_;
        }
        /**
         * <code>optional uint32 status = 6;</code>
         */
        public Builder setStatus(int value) {
          bitField0_ |= 0x00000020;
          status_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 status = 6;</code>
         */
        public Builder clearStatus() {
          bitField0_ = (bitField0_ & ~0x00000020);
          status_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamTradesResponse.Trade)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamTradesResponse.Trade)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Trade>
          PARSER = new com.google.protobuf.AbstractParser<Trade>() {
        public Trade parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Trade(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Trade> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Trade> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult.SUCCESS : result;
    }

    public static final int TRADES_FIELD_NUMBER = 2;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> trades_;
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> getTradesList() {
      return trades_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder> 
        getTradesOrBuilderList() {
      return trades_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    public int getTradesCount() {
      return trades_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade getTrades(int index) {
      return trades_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder getTradesOrBuilder(
        int index) {
      return trades_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      for (int i = 0; i < trades_.size(); i++) {
        output.writeMessage(2, trades_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      for (int i = 0; i < trades_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, trades_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && getTradesList()
          .equals(other.getTradesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (getTradesCount() > 0) {
        hash = (37 * hash) + TRADES_FIELD_NUMBER;
        hash = (53 * hash) + getTradesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamTradesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamTradesResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTradesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tradesBuilder_ == null) {
          trades_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          tradesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (tradesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            trades_ = java.util.Collections.unmodifiableList(trades_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.trades_ = trades_;
        } else {
          result.trades_ = tradesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (tradesBuilder_ == null) {
          if (!other.trades_.isEmpty()) {
            if (trades_.isEmpty()) {
              trades_ = other.trades_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTradesIsMutable();
              trades_.addAll(other.trades_);
            }
            onChanged();
          }
        } else {
          if (!other.trades_.isEmpty()) {
            if (tradesBuilder_.isEmpty()) {
              tradesBuilder_.dispose();
              tradesBuilder_ = null;
              trades_ = other.trades_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tradesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTradesFieldBuilder() : null;
            } else {
              tradesBuilder_.addAllMessages(other.trades_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> trades_ =
        java.util.Collections.emptyList();
      private void ensureTradesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          trades_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade>(trades_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder> tradesBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> getTradesList() {
        if (tradesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(trades_);
        } else {
          return tradesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public int getTradesCount() {
        if (tradesBuilder_ == null) {
          return trades_.size();
        } else {
          return tradesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade getTrades(int index) {
        if (tradesBuilder_ == null) {
          return trades_.get(index);
        } else {
          return tradesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder setTrades(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade value) {
        if (tradesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTradesIsMutable();
          trades_.set(index, value);
          onChanged();
        } else {
          tradesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder setTrades(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder builderForValue) {
        if (tradesBuilder_ == null) {
          ensureTradesIsMutable();
          trades_.set(index, builderForValue.build());
          onChanged();
        } else {
          tradesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder addTrades(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade value) {
        if (tradesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTradesIsMutable();
          trades_.add(value);
          onChanged();
        } else {
          tradesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder addTrades(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade value) {
        if (tradesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTradesIsMutable();
          trades_.add(index, value);
          onChanged();
        } else {
          tradesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder addTrades(
          MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder builderForValue) {
        if (tradesBuilder_ == null) {
          ensureTradesIsMutable();
          trades_.add(builderForValue.build());
          onChanged();
        } else {
          tradesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder addTrades(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder builderForValue) {
        if (tradesBuilder_ == null) {
          ensureTradesIsMutable();
          trades_.add(index, builderForValue.build());
          onChanged();
        } else {
          tradesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder addAllTrades(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade> values) {
        if (tradesBuilder_ == null) {
          ensureTradesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, trades_);
          onChanged();
        } else {
          tradesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder clearTrades() {
        if (tradesBuilder_ == null) {
          trades_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tradesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public Builder removeTrades(int index) {
        if (tradesBuilder_ == null) {
          ensureTradesIsMutable();
          trades_.remove(index);
          onChanged();
        } else {
          tradesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder getTradesBuilder(
          int index) {
        return getTradesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder getTradesOrBuilder(
          int index) {
        if (tradesBuilder_ == null) {
          return trades_.get(index);  } else {
          return tradesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder> 
           getTradesOrBuilderList() {
        if (tradesBuilder_ != null) {
          return tradesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(trades_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder addTradesBuilder() {
        return getTradesFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder addTradesBuilder(
          int index) {
        return getTradesFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyTeamTradesResponse.Trade trades = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder> 
           getTradesBuilderList() {
        return getTradesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder> 
          getTradesFieldBuilder() {
        if (tradesBuilder_ == null) {
          tradesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.Trade.Builder, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse.TradeOrBuilder>(
                  trades_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          trades_ = null;
        }
        return tradesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamTradesResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamTradesResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradesResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamTradesResponse>() {
      public CMsgDOTAFantasyTeamTradesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamTradesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradesResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamTradeCancelRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamTradeCancelRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index_1 = 3;</code>
     */
    boolean hasTeamIndex1();
    /**
     * <code>optional uint32 team_index_1 = 3;</code>
     */
    int getTeamIndex1();

    /**
     * <code>optional uint32 owner_account_id_2 = 4;</code>
     */
    boolean hasOwnerAccountId2();
    /**
     * <code>optional uint32 owner_account_id_2 = 4;</code>
     */
    int getOwnerAccountId2();

    /**
     * <code>optional uint32 team_index_2 = 5;</code>
     */
    boolean hasTeamIndex2();
    /**
     * <code>optional uint32 team_index_2 = 5;</code>
     */
    int getTeamIndex2();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamTradeCancelRequest}
   */
  public  static final class CMsgDOTAFantasyTeamTradeCancelRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamTradeCancelRequest)
      CMsgDOTAFantasyTeamTradeCancelRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamTradeCancelRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamTradeCancelRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamTradeCancelRequest() {
      fantasyLeagueId_ = 0;
      teamIndex1_ = 0;
      ownerAccountId2_ = 0;
      teamIndex2_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamTradeCancelRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              teamIndex1_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              ownerAccountId2_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              teamIndex2_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_1_FIELD_NUMBER = 3;
    private int teamIndex1_;
    /**
     * <code>optional uint32 team_index_1 = 3;</code>
     */
    public boolean hasTeamIndex1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index_1 = 3;</code>
     */
    public int getTeamIndex1() {
      return teamIndex1_;
    }

    public static final int OWNER_ACCOUNT_ID_2_FIELD_NUMBER = 4;
    private int ownerAccountId2_;
    /**
     * <code>optional uint32 owner_account_id_2 = 4;</code>
     */
    public boolean hasOwnerAccountId2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 owner_account_id_2 = 4;</code>
     */
    public int getOwnerAccountId2() {
      return ownerAccountId2_;
    }

    public static final int TEAM_INDEX_2_FIELD_NUMBER = 5;
    private int teamIndex2_;
    /**
     * <code>optional uint32 team_index_2 = 5;</code>
     */
    public boolean hasTeamIndex2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 team_index_2 = 5;</code>
     */
    public int getTeamIndex2() {
      return teamIndex2_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, teamIndex1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, ownerAccountId2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, teamIndex2_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, teamIndex1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, ownerAccountId2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, teamIndex2_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasTeamIndex1() == other.hasTeamIndex1());
      if (hasTeamIndex1()) {
        result = result && (getTeamIndex1()
            == other.getTeamIndex1());
      }
      result = result && (hasOwnerAccountId2() == other.hasOwnerAccountId2());
      if (hasOwnerAccountId2()) {
        result = result && (getOwnerAccountId2()
            == other.getOwnerAccountId2());
      }
      result = result && (hasTeamIndex2() == other.hasTeamIndex2());
      if (hasTeamIndex2()) {
        result = result && (getTeamIndex2()
            == other.getTeamIndex2());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasTeamIndex1()) {
        hash = (37 * hash) + TEAM_INDEX_1_FIELD_NUMBER;
        hash = (53 * hash) + getTeamIndex1();
      }
      if (hasOwnerAccountId2()) {
        hash = (37 * hash) + OWNER_ACCOUNT_ID_2_FIELD_NUMBER;
        hash = (53 * hash) + getOwnerAccountId2();
      }
      if (hasTeamIndex2()) {
        hash = (37 * hash) + TEAM_INDEX_2_FIELD_NUMBER;
        hash = (53 * hash) + getTeamIndex2();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamTradeCancelRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamTradeCancelRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerAccountId2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        teamIndex2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex1_ = teamIndex1_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ownerAccountId2_ = ownerAccountId2_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamIndex2_ = teamIndex2_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex1()) {
          setTeamIndex1(other.getTeamIndex1());
        }
        if (other.hasOwnerAccountId2()) {
          setOwnerAccountId2(other.getOwnerAccountId2());
        }
        if (other.hasTeamIndex2()) {
          setTeamIndex2(other.getTeamIndex2());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex1_ ;
      /**
       * <code>optional uint32 team_index_1 = 3;</code>
       */
      public boolean hasTeamIndex1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index_1 = 3;</code>
       */
      public int getTeamIndex1() {
        return teamIndex1_;
      }
      /**
       * <code>optional uint32 team_index_1 = 3;</code>
       */
      public Builder setTeamIndex1(int value) {
        bitField0_ |= 0x00000002;
        teamIndex1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index_1 = 3;</code>
       */
      public Builder clearTeamIndex1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex1_ = 0;
        onChanged();
        return this;
      }

      private int ownerAccountId2_ ;
      /**
       * <code>optional uint32 owner_account_id_2 = 4;</code>
       */
      public boolean hasOwnerAccountId2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 owner_account_id_2 = 4;</code>
       */
      public int getOwnerAccountId2() {
        return ownerAccountId2_;
      }
      /**
       * <code>optional uint32 owner_account_id_2 = 4;</code>
       */
      public Builder setOwnerAccountId2(int value) {
        bitField0_ |= 0x00000004;
        ownerAccountId2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id_2 = 4;</code>
       */
      public Builder clearOwnerAccountId2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ownerAccountId2_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex2_ ;
      /**
       * <code>optional uint32 team_index_2 = 5;</code>
       */
      public boolean hasTeamIndex2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 team_index_2 = 5;</code>
       */
      public int getTeamIndex2() {
        return teamIndex2_;
      }
      /**
       * <code>optional uint32 team_index_2 = 5;</code>
       */
      public Builder setTeamIndex2(int value) {
        bitField0_ |= 0x00000008;
        teamIndex2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index_2 = 5;</code>
       */
      public Builder clearTeamIndex2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamIndex2_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamTradeCancelRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamTradeCancelRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradeCancelRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamTradeCancelRequest>() {
      public CMsgDOTAFantasyTeamTradeCancelRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamTradeCancelRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradeCancelRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradeCancelRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamTradeCancelResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamTradeCancelResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamTradeCancelResponse}
   */
  public  static final class CMsgDOTAFantasyTeamTradeCancelResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamTradeCancelResponse)
      CMsgDOTAFantasyTeamTradeCancelResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamTradeCancelResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamTradeCancelResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamTradeCancelResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamTradeCancelResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamTradeCancelResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2),
      /**
       * <code>ERROR_NO_TRADE = 3;</code>
       */
      ERROR_NO_TRADE(3),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;
      /**
       * <code>ERROR_NO_TRADE = 3;</code>
       */
      public static final int ERROR_NO_TRADE_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          case 3: return ERROR_NO_TRADE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamTradeCancelResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamTradeCancelResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamTradeCancelResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamTradeCancelResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamTradeCancelResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamTradeCancelResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradeCancelResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamTradeCancelResponse>() {
      public CMsgDOTAFantasyTeamTradeCancelResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamTradeCancelResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradeCancelResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamTradeCancelResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamTradeCancelResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamRosterRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    int getTeamIndex();

    /**
     * <code>optional uint32 owner_account_id = 3;</code>
     */
    boolean hasOwnerAccountId();
    /**
     * <code>optional uint32 owner_account_id = 3;</code>
     */
    int getOwnerAccountId();

    /**
     * <code>optional uint32 timestamp = 4;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 timestamp = 4;</code>
     */
    int getTimestamp();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterRequest}
   */
  public  static final class CMsgDOTAFantasyTeamRosterRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterRequest)
      CMsgDOTAFantasyTeamRosterRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamRosterRequest.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamRosterRequest() {
      fantasyLeagueId_ = 0;
      teamIndex_ = 0;
      ownerAccountId_ = 0;
      timestamp_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              teamIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ownerAccountId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timestamp_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 2;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team_index = 2;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 3;
    private int ownerAccountId_;
    /**
     * <code>optional uint32 owner_account_id = 3;</code>
     */
    public boolean hasOwnerAccountId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 owner_account_id = 3;</code>
     */
    public int getOwnerAccountId() {
      return ownerAccountId_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 4;
    private int timestamp_;
    /**
     * <code>optional uint32 timestamp = 4;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 timestamp = 4;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, teamIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasTeamIndex() == other.hasTeamIndex());
      if (hasTeamIndex()) {
        result = result && (getTeamIndex()
            == other.getTeamIndex());
      }
      result = result && (hasOwnerAccountId() == other.hasOwnerAccountId());
      if (hasOwnerAccountId()) {
        result = result && (getOwnerAccountId()
            == other.getOwnerAccountId());
      }
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasTeamIndex()) {
        hash = (37 * hash) + TEAM_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTeamIndex();
      }
      if (hasOwnerAccountId()) {
        hash = (37 * hash) + OWNER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getOwnerAccountId();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamIndex_ = teamIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ownerAccountId_ = ownerAccountId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        if (other.hasOwnerAccountId()) {
          setOwnerAccountId(other.getOwnerAccountId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 2;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        onChanged();
        return this;
      }

      private int ownerAccountId_ ;
      /**
       * <code>optional uint32 owner_account_id = 3;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 owner_account_id = 3;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }
      /**
       * <code>optional uint32 owner_account_id = 3;</code>
       */
      public Builder setOwnerAccountId(int value) {
        bitField0_ |= 0x00000004;
        ownerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id = 3;</code>
       */
      public Builder clearOwnerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ownerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000008;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timestamp_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterRequest>() {
      public CMsgDOTAFantasyTeamRosterRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamRosterRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyTeamRosterResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyTeamRosterResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult getResult();

    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    java.util.List<java.lang.Integer> getPlayerAccountIdsList();
    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    int getPlayerAccountIdsCount();
    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    int getPlayerAccountIds(int index);

    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    java.util.List<java.lang.Boolean> getPlayerLockedList();
    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    int getPlayerLockedCount();
    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    boolean getPlayerLocked(int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyTeamRosterResponse}
   */
  public  static final class CMsgDOTAFantasyTeamRosterResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyTeamRosterResponse)
      CMsgDOTAFantasyTeamRosterResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyTeamRosterResponse.newBuilder() to construct.
    private CMsgDOTAFantasyTeamRosterResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyTeamRosterResponse() {
      result_ = 0;
      playerAccountIds_ = java.util.Collections.emptyList();
      playerLocked_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyTeamRosterResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                playerAccountIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              playerAccountIds_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                playerAccountIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerAccountIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                playerLocked_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000004;
              }
              playerLocked_.add(input.readBool());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                playerLocked_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerLocked_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          playerAccountIds_ = java.util.Collections.unmodifiableList(playerAccountIds_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          playerLocked_ = java.util.Collections.unmodifiableList(playerLocked_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyTeamRosterResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2),
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 3;</code>
       */
      ERROR_OWNER_NOT_IN_LEAGUE(3),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;
      /**
       * <code>ERROR_OWNER_NOT_IN_LEAGUE = 3;</code>
       */
      public static final int ERROR_OWNER_NOT_IN_LEAGUE_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          case 3: return ERROR_OWNER_NOT_IN_LEAGUE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyTeamRosterResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult.SUCCESS : result;
    }

    public static final int PLAYER_ACCOUNT_IDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> playerAccountIds_;
    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getPlayerAccountIdsList() {
      return playerAccountIds_;
    }
    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    public int getPlayerAccountIdsCount() {
      return playerAccountIds_.size();
    }
    /**
     * <code>repeated uint32 player_account_ids = 2;</code>
     */
    public int getPlayerAccountIds(int index) {
      return playerAccountIds_.get(index);
    }

    public static final int PLAYER_LOCKED_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Boolean> playerLocked_;
    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    public java.util.List<java.lang.Boolean>
        getPlayerLockedList() {
      return playerLocked_;
    }
    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    public int getPlayerLockedCount() {
      return playerLocked_.size();
    }
    /**
     * <code>repeated bool player_locked = 3;</code>
     */
    public boolean getPlayerLocked(int index) {
      return playerLocked_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      for (int i = 0; i < playerAccountIds_.size(); i++) {
        output.writeUInt32(2, playerAccountIds_.get(i));
      }
      for (int i = 0; i < playerLocked_.size(); i++) {
        output.writeBool(3, playerLocked_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerAccountIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(playerAccountIds_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerAccountIdsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getPlayerLockedList().size();
        size += dataSize;
        size += 1 * getPlayerLockedList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && getPlayerAccountIdsList()
          .equals(other.getPlayerAccountIdsList());
      result = result && getPlayerLockedList()
          .equals(other.getPlayerLockedList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (getPlayerAccountIdsCount() > 0) {
        hash = (37 * hash) + PLAYER_ACCOUNT_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerAccountIdsList().hashCode();
      }
      if (getPlayerLockedCount() > 0) {
        hash = (37 * hash) + PLAYER_LOCKED_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerLockedList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyTeamRosterResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyTeamRosterResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerAccountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        playerLocked_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          playerAccountIds_ = java.util.Collections.unmodifiableList(playerAccountIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.playerAccountIds_ = playerAccountIds_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          playerLocked_ = java.util.Collections.unmodifiableList(playerLocked_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.playerLocked_ = playerLocked_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (!other.playerAccountIds_.isEmpty()) {
          if (playerAccountIds_.isEmpty()) {
            playerAccountIds_ = other.playerAccountIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePlayerAccountIdsIsMutable();
            playerAccountIds_.addAll(other.playerAccountIds_);
          }
          onChanged();
        }
        if (!other.playerLocked_.isEmpty()) {
          if (playerLocked_.isEmpty()) {
            playerLocked_ = other.playerLocked_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePlayerLockedIsMutable();
            playerLocked_.addAll(other.playerLocked_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyTeamRosterResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> playerAccountIds_ = java.util.Collections.emptyList();
      private void ensurePlayerAccountIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playerAccountIds_ = new java.util.ArrayList<java.lang.Integer>(playerAccountIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayerAccountIdsList() {
        return java.util.Collections.unmodifiableList(playerAccountIds_);
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public int getPlayerAccountIdsCount() {
        return playerAccountIds_.size();
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public int getPlayerAccountIds(int index) {
        return playerAccountIds_.get(index);
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public Builder setPlayerAccountIds(
          int index, int value) {
        ensurePlayerAccountIdsIsMutable();
        playerAccountIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public Builder addPlayerAccountIds(int value) {
        ensurePlayerAccountIdsIsMutable();
        playerAccountIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public Builder addAllPlayerAccountIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerAccountIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, playerAccountIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 player_account_ids = 2;</code>
       */
      public Builder clearPlayerAccountIds() {
        playerAccountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Boolean> playerLocked_ = java.util.Collections.emptyList();
      private void ensurePlayerLockedIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          playerLocked_ = new java.util.ArrayList<java.lang.Boolean>(playerLocked_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public java.util.List<java.lang.Boolean>
          getPlayerLockedList() {
        return java.util.Collections.unmodifiableList(playerLocked_);
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public int getPlayerLockedCount() {
        return playerLocked_.size();
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public boolean getPlayerLocked(int index) {
        return playerLocked_.get(index);
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public Builder setPlayerLocked(
          int index, boolean value) {
        ensurePlayerLockedIsMutable();
        playerLocked_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public Builder addPlayerLocked(boolean value) {
        ensurePlayerLockedIsMutable();
        playerLocked_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public Builder addAllPlayerLocked(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensurePlayerLockedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, playerLocked_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool player_locked = 3;</code>
       */
      public Builder clearPlayerLocked() {
        playerLocked_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyTeamRosterResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyTeamRosterResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyTeamRosterResponse>() {
      public CMsgDOTAFantasyTeamRosterResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyTeamRosterResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyTeamRosterResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyTeamRosterResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyPlayerHisoricalStatsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerHisoricalStatsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsRequest}
   */
  public  static final class CMsgDOTAFantasyPlayerHisoricalStatsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerHisoricalStatsRequest)
      CMsgDOTAFantasyPlayerHisoricalStatsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyPlayerHisoricalStatsRequest.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerHisoricalStatsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyPlayerHisoricalStatsRequest() {
      fantasyLeagueId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerHisoricalStatsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerHisoricalStatsRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerHisoricalStatsRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerHisoricalStatsRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyPlayerHisoricalStatsRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerHisoricalStatsRequest>() {
      public CMsgDOTAFantasyPlayerHisoricalStatsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyPlayerHisoricalStatsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerHisoricalStatsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerHisoricalStatsRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyPlayerHisoricalStatsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerHisoricalStatsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> 
        getStatsList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats getStats(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    int getStatsCount();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder> 
        getStatsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder getStatsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse}
   */
  public  static final class CMsgDOTAFantasyPlayerHisoricalStatsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse)
      CMsgDOTAFantasyPlayerHisoricalStatsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyPlayerHisoricalStatsResponse.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerHisoricalStatsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyPlayerHisoricalStatsResponse() {
      result_ = 0;
      stats_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerHisoricalStatsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                stats_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats>();
                mutable_bitField0_ |= 0x00000002;
              }
              stats_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          stats_ = java.util.Collections.unmodifiableList(stats_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult)
    }

    public interface PlayerScoreAccumulatorOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 matches = 1;</code>
       */
      boolean hasMatches();
      /**
       * <code>optional uint32 matches = 1;</code>
       */
      int getMatches();

      /**
       * <code>optional float levels = 2;</code>
       */
      boolean hasLevels();
      /**
       * <code>optional float levels = 2;</code>
       */
      float getLevels();

      /**
       * <code>optional float kills = 3;</code>
       */
      boolean hasKills();
      /**
       * <code>optional float kills = 3;</code>
       */
      float getKills();

      /**
       * <code>optional float deaths = 4;</code>
       */
      boolean hasDeaths();
      /**
       * <code>optional float deaths = 4;</code>
       */
      float getDeaths();

      /**
       * <code>optional float assists = 5;</code>
       */
      boolean hasAssists();
      /**
       * <code>optional float assists = 5;</code>
       */
      float getAssists();

      /**
       * <code>optional float last_hits = 6;</code>
       */
      boolean hasLastHits();
      /**
       * <code>optional float last_hits = 6;</code>
       */
      float getLastHits();

      /**
       * <code>optional float denies = 7;</code>
       */
      boolean hasDenies();
      /**
       * <code>optional float denies = 7;</code>
       */
      float getDenies();

      /**
       * <code>optional float gpm = 8;</code>
       */
      boolean hasGpm();
      /**
       * <code>optional float gpm = 8;</code>
       */
      float getGpm();

      /**
       * <code>optional float xppm = 9;</code>
       */
      boolean hasXppm();
      /**
       * <code>optional float xppm = 9;</code>
       */
      float getXppm();

      /**
       * <code>optional float stuns = 10;</code>
       */
      boolean hasStuns();
      /**
       * <code>optional float stuns = 10;</code>
       */
      float getStuns();

      /**
       * <code>optional float healing = 11;</code>
       */
      boolean hasHealing();
      /**
       * <code>optional float healing = 11;</code>
       */
      float getHealing();

      /**
       * <code>optional float tower_kills = 12;</code>
       */
      boolean hasTowerKills();
      /**
       * <code>optional float tower_kills = 12;</code>
       */
      float getTowerKills();

      /**
       * <code>optional float roshan_kills = 13;</code>
       */
      boolean hasRoshanKills();
      /**
       * <code>optional float roshan_kills = 13;</code>
       */
      float getRoshanKills();

      /**
       * <code>optional float score = 14;</code>
       */
      boolean hasScore();
      /**
       * <code>optional float score = 14;</code>
       */
      float getScore();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator}
     */
    public  static final class PlayerScoreAccumulator extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)
        PlayerScoreAccumulatorOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PlayerScoreAccumulator.newBuilder() to construct.
      private PlayerScoreAccumulator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PlayerScoreAccumulator() {
        matches_ = 0;
        levels_ = 0F;
        kills_ = 0F;
        deaths_ = 0F;
        assists_ = 0F;
        lastHits_ = 0F;
        denies_ = 0F;
        gpm_ = 0F;
        xppm_ = 0F;
        stuns_ = 0F;
        healing_ = 0F;
        towerKills_ = 0F;
        roshanKills_ = 0F;
        score_ = 0F;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PlayerScoreAccumulator(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                matches_ = input.readUInt32();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                levels_ = input.readFloat();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                kills_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                deaths_ = input.readFloat();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                assists_ = input.readFloat();
                break;
              }
              case 53: {
                bitField0_ |= 0x00000020;
                lastHits_ = input.readFloat();
                break;
              }
              case 61: {
                bitField0_ |= 0x00000040;
                denies_ = input.readFloat();
                break;
              }
              case 69: {
                bitField0_ |= 0x00000080;
                gpm_ = input.readFloat();
                break;
              }
              case 77: {
                bitField0_ |= 0x00000100;
                xppm_ = input.readFloat();
                break;
              }
              case 85: {
                bitField0_ |= 0x00000200;
                stuns_ = input.readFloat();
                break;
              }
              case 93: {
                bitField0_ |= 0x00000400;
                healing_ = input.readFloat();
                break;
              }
              case 101: {
                bitField0_ |= 0x00000800;
                towerKills_ = input.readFloat();
                break;
              }
              case 109: {
                bitField0_ |= 0x00001000;
                roshanKills_ = input.readFloat();
                break;
              }
              case 117: {
                bitField0_ |= 0x00002000;
                score_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder.class);
      }

      private int bitField0_;
      public static final int MATCHES_FIELD_NUMBER = 1;
      private int matches_;
      /**
       * <code>optional uint32 matches = 1;</code>
       */
      public boolean hasMatches() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 matches = 1;</code>
       */
      public int getMatches() {
        return matches_;
      }

      public static final int LEVELS_FIELD_NUMBER = 2;
      private float levels_;
      /**
       * <code>optional float levels = 2;</code>
       */
      public boolean hasLevels() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float levels = 2;</code>
       */
      public float getLevels() {
        return levels_;
      }

      public static final int KILLS_FIELD_NUMBER = 3;
      private float kills_;
      /**
       * <code>optional float kills = 3;</code>
       */
      public boolean hasKills() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float kills = 3;</code>
       */
      public float getKills() {
        return kills_;
      }

      public static final int DEATHS_FIELD_NUMBER = 4;
      private float deaths_;
      /**
       * <code>optional float deaths = 4;</code>
       */
      public boolean hasDeaths() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float deaths = 4;</code>
       */
      public float getDeaths() {
        return deaths_;
      }

      public static final int ASSISTS_FIELD_NUMBER = 5;
      private float assists_;
      /**
       * <code>optional float assists = 5;</code>
       */
      public boolean hasAssists() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float assists = 5;</code>
       */
      public float getAssists() {
        return assists_;
      }

      public static final int LAST_HITS_FIELD_NUMBER = 6;
      private float lastHits_;
      /**
       * <code>optional float last_hits = 6;</code>
       */
      public boolean hasLastHits() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float last_hits = 6;</code>
       */
      public float getLastHits() {
        return lastHits_;
      }

      public static final int DENIES_FIELD_NUMBER = 7;
      private float denies_;
      /**
       * <code>optional float denies = 7;</code>
       */
      public boolean hasDenies() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float denies = 7;</code>
       */
      public float getDenies() {
        return denies_;
      }

      public static final int GPM_FIELD_NUMBER = 8;
      private float gpm_;
      /**
       * <code>optional float gpm = 8;</code>
       */
      public boolean hasGpm() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float gpm = 8;</code>
       */
      public float getGpm() {
        return gpm_;
      }

      public static final int XPPM_FIELD_NUMBER = 9;
      private float xppm_;
      /**
       * <code>optional float xppm = 9;</code>
       */
      public boolean hasXppm() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float xppm = 9;</code>
       */
      public float getXppm() {
        return xppm_;
      }

      public static final int STUNS_FIELD_NUMBER = 10;
      private float stuns_;
      /**
       * <code>optional float stuns = 10;</code>
       */
      public boolean hasStuns() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float stuns = 10;</code>
       */
      public float getStuns() {
        return stuns_;
      }

      public static final int HEALING_FIELD_NUMBER = 11;
      private float healing_;
      /**
       * <code>optional float healing = 11;</code>
       */
      public boolean hasHealing() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float healing = 11;</code>
       */
      public float getHealing() {
        return healing_;
      }

      public static final int TOWER_KILLS_FIELD_NUMBER = 12;
      private float towerKills_;
      /**
       * <code>optional float tower_kills = 12;</code>
       */
      public boolean hasTowerKills() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float tower_kills = 12;</code>
       */
      public float getTowerKills() {
        return towerKills_;
      }

      public static final int ROSHAN_KILLS_FIELD_NUMBER = 13;
      private float roshanKills_;
      /**
       * <code>optional float roshan_kills = 13;</code>
       */
      public boolean hasRoshanKills() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float roshan_kills = 13;</code>
       */
      public float getRoshanKills() {
        return roshanKills_;
      }

      public static final int SCORE_FIELD_NUMBER = 14;
      private float score_;
      /**
       * <code>optional float score = 14;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float score = 14;</code>
       */
      public float getScore() {
        return score_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, matches_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, levels_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, kills_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, deaths_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, assists_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeFloat(6, lastHits_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeFloat(7, denies_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeFloat(8, gpm_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeFloat(9, xppm_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeFloat(10, stuns_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeFloat(11, healing_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeFloat(12, towerKills_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeFloat(13, roshanKills_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeFloat(14, score_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, matches_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, levels_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, kills_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, deaths_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, assists_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(6, lastHits_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, denies_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, gpm_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(9, xppm_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(10, stuns_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(11, healing_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(12, towerKills_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(13, roshanKills_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(14, score_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator) obj;

        boolean result = true;
        result = result && (hasMatches() == other.hasMatches());
        if (hasMatches()) {
          result = result && (getMatches()
              == other.getMatches());
        }
        result = result && (hasLevels() == other.hasLevels());
        if (hasLevels()) {
          result = result && (
              java.lang.Float.floatToIntBits(getLevels())
              == java.lang.Float.floatToIntBits(
                  other.getLevels()));
        }
        result = result && (hasKills() == other.hasKills());
        if (hasKills()) {
          result = result && (
              java.lang.Float.floatToIntBits(getKills())
              == java.lang.Float.floatToIntBits(
                  other.getKills()));
        }
        result = result && (hasDeaths() == other.hasDeaths());
        if (hasDeaths()) {
          result = result && (
              java.lang.Float.floatToIntBits(getDeaths())
              == java.lang.Float.floatToIntBits(
                  other.getDeaths()));
        }
        result = result && (hasAssists() == other.hasAssists());
        if (hasAssists()) {
          result = result && (
              java.lang.Float.floatToIntBits(getAssists())
              == java.lang.Float.floatToIntBits(
                  other.getAssists()));
        }
        result = result && (hasLastHits() == other.hasLastHits());
        if (hasLastHits()) {
          result = result && (
              java.lang.Float.floatToIntBits(getLastHits())
              == java.lang.Float.floatToIntBits(
                  other.getLastHits()));
        }
        result = result && (hasDenies() == other.hasDenies());
        if (hasDenies()) {
          result = result && (
              java.lang.Float.floatToIntBits(getDenies())
              == java.lang.Float.floatToIntBits(
                  other.getDenies()));
        }
        result = result && (hasGpm() == other.hasGpm());
        if (hasGpm()) {
          result = result && (
              java.lang.Float.floatToIntBits(getGpm())
              == java.lang.Float.floatToIntBits(
                  other.getGpm()));
        }
        result = result && (hasXppm() == other.hasXppm());
        if (hasXppm()) {
          result = result && (
              java.lang.Float.floatToIntBits(getXppm())
              == java.lang.Float.floatToIntBits(
                  other.getXppm()));
        }
        result = result && (hasStuns() == other.hasStuns());
        if (hasStuns()) {
          result = result && (
              java.lang.Float.floatToIntBits(getStuns())
              == java.lang.Float.floatToIntBits(
                  other.getStuns()));
        }
        result = result && (hasHealing() == other.hasHealing());
        if (hasHealing()) {
          result = result && (
              java.lang.Float.floatToIntBits(getHealing())
              == java.lang.Float.floatToIntBits(
                  other.getHealing()));
        }
        result = result && (hasTowerKills() == other.hasTowerKills());
        if (hasTowerKills()) {
          result = result && (
              java.lang.Float.floatToIntBits(getTowerKills())
              == java.lang.Float.floatToIntBits(
                  other.getTowerKills()));
        }
        result = result && (hasRoshanKills() == other.hasRoshanKills());
        if (hasRoshanKills()) {
          result = result && (
              java.lang.Float.floatToIntBits(getRoshanKills())
              == java.lang.Float.floatToIntBits(
                  other.getRoshanKills()));
        }
        result = result && (hasScore() == other.hasScore());
        if (hasScore()) {
          result = result && (
              java.lang.Float.floatToIntBits(getScore())
              == java.lang.Float.floatToIntBits(
                  other.getScore()));
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMatches()) {
          hash = (37 * hash) + MATCHES_FIELD_NUMBER;
          hash = (53 * hash) + getMatches();
        }
        if (hasLevels()) {
          hash = (37 * hash) + LEVELS_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getLevels());
        }
        if (hasKills()) {
          hash = (37 * hash) + KILLS_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getKills());
        }
        if (hasDeaths()) {
          hash = (37 * hash) + DEATHS_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getDeaths());
        }
        if (hasAssists()) {
          hash = (37 * hash) + ASSISTS_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getAssists());
        }
        if (hasLastHits()) {
          hash = (37 * hash) + LAST_HITS_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getLastHits());
        }
        if (hasDenies()) {
          hash = (37 * hash) + DENIES_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getDenies());
        }
        if (hasGpm()) {
          hash = (37 * hash) + GPM_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getGpm());
        }
        if (hasXppm()) {
          hash = (37 * hash) + XPPM_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getXppm());
        }
        if (hasStuns()) {
          hash = (37 * hash) + STUNS_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getStuns());
        }
        if (hasHealing()) {
          hash = (37 * hash) + HEALING_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getHealing());
        }
        if (hasTowerKills()) {
          hash = (37 * hash) + TOWER_KILLS_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getTowerKills());
        }
        if (hasRoshanKills()) {
          hash = (37 * hash) + ROSHAN_KILLS_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getRoshanKills());
        }
        if (hasScore()) {
          hash = (37 * hash) + SCORE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getScore());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          matches_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          levels_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          kills_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          deaths_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          assists_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          lastHits_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000020);
          denies_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000040);
          gpm_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000080);
          xppm_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000100);
          stuns_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000200);
          healing_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000400);
          towerKills_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000800);
          roshanKills_ = 0F;
          bitField0_ = (bitField0_ & ~0x00001000);
          score_ = 0F;
          bitField0_ = (bitField0_ & ~0x00002000);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator build() {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.matches_ = matches_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.levels_ = levels_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.kills_ = kills_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.deaths_ = deaths_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.assists_ = assists_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.lastHits_ = lastHits_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.denies_ = denies_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.gpm_ = gpm_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.xppm_ = xppm_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.stuns_ = stuns_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.healing_ = healing_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.towerKills_ = towerKills_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.roshanKills_ = roshanKills_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.score_ = score_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance()) return this;
          if (other.hasMatches()) {
            setMatches(other.getMatches());
          }
          if (other.hasLevels()) {
            setLevels(other.getLevels());
          }
          if (other.hasKills()) {
            setKills(other.getKills());
          }
          if (other.hasDeaths()) {
            setDeaths(other.getDeaths());
          }
          if (other.hasAssists()) {
            setAssists(other.getAssists());
          }
          if (other.hasLastHits()) {
            setLastHits(other.getLastHits());
          }
          if (other.hasDenies()) {
            setDenies(other.getDenies());
          }
          if (other.hasGpm()) {
            setGpm(other.getGpm());
          }
          if (other.hasXppm()) {
            setXppm(other.getXppm());
          }
          if (other.hasStuns()) {
            setStuns(other.getStuns());
          }
          if (other.hasHealing()) {
            setHealing(other.getHealing());
          }
          if (other.hasTowerKills()) {
            setTowerKills(other.getTowerKills());
          }
          if (other.hasRoshanKills()) {
            setRoshanKills(other.getRoshanKills());
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int matches_ ;
        /**
         * <code>optional uint32 matches = 1;</code>
         */
        public boolean hasMatches() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 matches = 1;</code>
         */
        public int getMatches() {
          return matches_;
        }
        /**
         * <code>optional uint32 matches = 1;</code>
         */
        public Builder setMatches(int value) {
          bitField0_ |= 0x00000001;
          matches_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 matches = 1;</code>
         */
        public Builder clearMatches() {
          bitField0_ = (bitField0_ & ~0x00000001);
          matches_ = 0;
          onChanged();
          return this;
        }

        private float levels_ ;
        /**
         * <code>optional float levels = 2;</code>
         */
        public boolean hasLevels() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float levels = 2;</code>
         */
        public float getLevels() {
          return levels_;
        }
        /**
         * <code>optional float levels = 2;</code>
         */
        public Builder setLevels(float value) {
          bitField0_ |= 0x00000002;
          levels_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float levels = 2;</code>
         */
        public Builder clearLevels() {
          bitField0_ = (bitField0_ & ~0x00000002);
          levels_ = 0F;
          onChanged();
          return this;
        }

        private float kills_ ;
        /**
         * <code>optional float kills = 3;</code>
         */
        public boolean hasKills() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float kills = 3;</code>
         */
        public float getKills() {
          return kills_;
        }
        /**
         * <code>optional float kills = 3;</code>
         */
        public Builder setKills(float value) {
          bitField0_ |= 0x00000004;
          kills_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float kills = 3;</code>
         */
        public Builder clearKills() {
          bitField0_ = (bitField0_ & ~0x00000004);
          kills_ = 0F;
          onChanged();
          return this;
        }

        private float deaths_ ;
        /**
         * <code>optional float deaths = 4;</code>
         */
        public boolean hasDeaths() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional float deaths = 4;</code>
         */
        public float getDeaths() {
          return deaths_;
        }
        /**
         * <code>optional float deaths = 4;</code>
         */
        public Builder setDeaths(float value) {
          bitField0_ |= 0x00000008;
          deaths_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float deaths = 4;</code>
         */
        public Builder clearDeaths() {
          bitField0_ = (bitField0_ & ~0x00000008);
          deaths_ = 0F;
          onChanged();
          return this;
        }

        private float assists_ ;
        /**
         * <code>optional float assists = 5;</code>
         */
        public boolean hasAssists() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional float assists = 5;</code>
         */
        public float getAssists() {
          return assists_;
        }
        /**
         * <code>optional float assists = 5;</code>
         */
        public Builder setAssists(float value) {
          bitField0_ |= 0x00000010;
          assists_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float assists = 5;</code>
         */
        public Builder clearAssists() {
          bitField0_ = (bitField0_ & ~0x00000010);
          assists_ = 0F;
          onChanged();
          return this;
        }

        private float lastHits_ ;
        /**
         * <code>optional float last_hits = 6;</code>
         */
        public boolean hasLastHits() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional float last_hits = 6;</code>
         */
        public float getLastHits() {
          return lastHits_;
        }
        /**
         * <code>optional float last_hits = 6;</code>
         */
        public Builder setLastHits(float value) {
          bitField0_ |= 0x00000020;
          lastHits_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float last_hits = 6;</code>
         */
        public Builder clearLastHits() {
          bitField0_ = (bitField0_ & ~0x00000020);
          lastHits_ = 0F;
          onChanged();
          return this;
        }

        private float denies_ ;
        /**
         * <code>optional float denies = 7;</code>
         */
        public boolean hasDenies() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional float denies = 7;</code>
         */
        public float getDenies() {
          return denies_;
        }
        /**
         * <code>optional float denies = 7;</code>
         */
        public Builder setDenies(float value) {
          bitField0_ |= 0x00000040;
          denies_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float denies = 7;</code>
         */
        public Builder clearDenies() {
          bitField0_ = (bitField0_ & ~0x00000040);
          denies_ = 0F;
          onChanged();
          return this;
        }

        private float gpm_ ;
        /**
         * <code>optional float gpm = 8;</code>
         */
        public boolean hasGpm() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional float gpm = 8;</code>
         */
        public float getGpm() {
          return gpm_;
        }
        /**
         * <code>optional float gpm = 8;</code>
         */
        public Builder setGpm(float value) {
          bitField0_ |= 0x00000080;
          gpm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float gpm = 8;</code>
         */
        public Builder clearGpm() {
          bitField0_ = (bitField0_ & ~0x00000080);
          gpm_ = 0F;
          onChanged();
          return this;
        }

        private float xppm_ ;
        /**
         * <code>optional float xppm = 9;</code>
         */
        public boolean hasXppm() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional float xppm = 9;</code>
         */
        public float getXppm() {
          return xppm_;
        }
        /**
         * <code>optional float xppm = 9;</code>
         */
        public Builder setXppm(float value) {
          bitField0_ |= 0x00000100;
          xppm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float xppm = 9;</code>
         */
        public Builder clearXppm() {
          bitField0_ = (bitField0_ & ~0x00000100);
          xppm_ = 0F;
          onChanged();
          return this;
        }

        private float stuns_ ;
        /**
         * <code>optional float stuns = 10;</code>
         */
        public boolean hasStuns() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional float stuns = 10;</code>
         */
        public float getStuns() {
          return stuns_;
        }
        /**
         * <code>optional float stuns = 10;</code>
         */
        public Builder setStuns(float value) {
          bitField0_ |= 0x00000200;
          stuns_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float stuns = 10;</code>
         */
        public Builder clearStuns() {
          bitField0_ = (bitField0_ & ~0x00000200);
          stuns_ = 0F;
          onChanged();
          return this;
        }

        private float healing_ ;
        /**
         * <code>optional float healing = 11;</code>
         */
        public boolean hasHealing() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional float healing = 11;</code>
         */
        public float getHealing() {
          return healing_;
        }
        /**
         * <code>optional float healing = 11;</code>
         */
        public Builder setHealing(float value) {
          bitField0_ |= 0x00000400;
          healing_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float healing = 11;</code>
         */
        public Builder clearHealing() {
          bitField0_ = (bitField0_ & ~0x00000400);
          healing_ = 0F;
          onChanged();
          return this;
        }

        private float towerKills_ ;
        /**
         * <code>optional float tower_kills = 12;</code>
         */
        public boolean hasTowerKills() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional float tower_kills = 12;</code>
         */
        public float getTowerKills() {
          return towerKills_;
        }
        /**
         * <code>optional float tower_kills = 12;</code>
         */
        public Builder setTowerKills(float value) {
          bitField0_ |= 0x00000800;
          towerKills_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float tower_kills = 12;</code>
         */
        public Builder clearTowerKills() {
          bitField0_ = (bitField0_ & ~0x00000800);
          towerKills_ = 0F;
          onChanged();
          return this;
        }

        private float roshanKills_ ;
        /**
         * <code>optional float roshan_kills = 13;</code>
         */
        public boolean hasRoshanKills() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional float roshan_kills = 13;</code>
         */
        public float getRoshanKills() {
          return roshanKills_;
        }
        /**
         * <code>optional float roshan_kills = 13;</code>
         */
        public Builder setRoshanKills(float value) {
          bitField0_ |= 0x00001000;
          roshanKills_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float roshan_kills = 13;</code>
         */
        public Builder clearRoshanKills() {
          bitField0_ = (bitField0_ & ~0x00001000);
          roshanKills_ = 0F;
          onChanged();
          return this;
        }

        private float score_ ;
        /**
         * <code>optional float score = 14;</code>
         */
        public boolean hasScore() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional float score = 14;</code>
         */
        public float getScore() {
          return score_;
        }
        /**
         * <code>optional float score = 14;</code>
         */
        public Builder setScore(float value) {
          bitField0_ |= 0x00002000;
          score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float score = 14;</code>
         */
        public Builder clearScore() {
          bitField0_ = (bitField0_ & ~0x00002000);
          score_ = 0F;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<PlayerScoreAccumulator>
          PARSER = new com.google.protobuf.AbstractParser<PlayerScoreAccumulator>() {
        public PlayerScoreAccumulator parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new PlayerScoreAccumulator(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PlayerScoreAccumulator> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PlayerScoreAccumulator> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PlayerStatsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      int getAccountId();

      /**
       * <code>optional uint32 weeks = 2;</code>
       */
      boolean hasWeeks();
      /**
       * <code>optional uint32 weeks = 2;</code>
       */
      int getWeeks();

      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      boolean hasStatsPremium();
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsPremium();
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsPremiumOrBuilder();

      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      boolean hasStatsProfessional();
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsProfessional();
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsProfessionalOrBuilder();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats}
     */
    public  static final class PlayerStats extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)
        PlayerStatsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PlayerStats.newBuilder() to construct.
      private PlayerStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PlayerStats() {
        accountId_ = 0;
        weeks_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PlayerStats(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                weeks_ = input.readUInt32();
                break;
              }
              case 34: {
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = statsPremium_.toBuilder();
                }
                statsPremium_ = input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(statsPremium_);
                  statsPremium_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 42: {
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = statsProfessional_.toBuilder();
                }
                statsProfessional_ = input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(statsProfessional_);
                  statsProfessional_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder.class);
      }

      private int bitField0_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      public static final int WEEKS_FIELD_NUMBER = 2;
      private int weeks_;
      /**
       * <code>optional uint32 weeks = 2;</code>
       */
      public boolean hasWeeks() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 weeks = 2;</code>
       */
      public int getWeeks() {
        return weeks_;
      }

      public static final int STATS_PREMIUM_FIELD_NUMBER = 4;
      private MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator statsPremium_;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      public boolean hasStatsPremium() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsPremium() {
        return statsPremium_ == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance() : statsPremium_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsPremiumOrBuilder() {
        return statsPremium_ == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance() : statsPremium_;
      }

      public static final int STATS_PROFESSIONAL_FIELD_NUMBER = 5;
      private MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator statsProfessional_;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      public boolean hasStatsProfessional() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsProfessional() {
        return statsProfessional_ == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance() : statsProfessional_;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsProfessionalOrBuilder() {
        return statsProfessional_ == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance() : statsProfessional_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, weeks_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(4, getStatsPremium());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(5, getStatsProfessional());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, weeks_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getStatsPremium());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getStatsProfessional());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats) obj;

        boolean result = true;
        result = result && (hasAccountId() == other.hasAccountId());
        if (hasAccountId()) {
          result = result && (getAccountId()
              == other.getAccountId());
        }
        result = result && (hasWeeks() == other.hasWeeks());
        if (hasWeeks()) {
          result = result && (getWeeks()
              == other.getWeeks());
        }
        result = result && (hasStatsPremium() == other.hasStatsPremium());
        if (hasStatsPremium()) {
          result = result && getStatsPremium()
              .equals(other.getStatsPremium());
        }
        result = result && (hasStatsProfessional() == other.hasStatsProfessional());
        if (hasStatsProfessional()) {
          result = result && getStatsProfessional()
              .equals(other.getStatsProfessional());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasAccountId()) {
          hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getAccountId();
        }
        if (hasWeeks()) {
          hash = (37 * hash) + WEEKS_FIELD_NUMBER;
          hash = (53 * hash) + getWeeks();
        }
        if (hasStatsPremium()) {
          hash = (37 * hash) + STATS_PREMIUM_FIELD_NUMBER;
          hash = (53 * hash) + getStatsPremium().hashCode();
        }
        if (hasStatsProfessional()) {
          hash = (37 * hash) + STATS_PROFESSIONAL_FIELD_NUMBER;
          hash = (53 * hash) + getStatsProfessional().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getStatsPremiumFieldBuilder();
            getStatsProfessionalFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          weeks_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          if (statsPremiumBuilder_ == null) {
            statsPremium_ = null;
          } else {
            statsPremiumBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (statsProfessionalBuilder_ == null) {
            statsProfessional_ = null;
          } else {
            statsProfessionalBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats build() {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.weeks_ = weeks_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (statsPremiumBuilder_ == null) {
            result.statsPremium_ = statsPremium_;
          } else {
            result.statsPremium_ = statsPremiumBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (statsProfessionalBuilder_ == null) {
            result.statsProfessional_ = statsProfessional_;
          } else {
            result.statsProfessional_ = statsProfessionalBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasWeeks()) {
            setWeeks(other.getWeeks());
          }
          if (other.hasStatsPremium()) {
            mergeStatsPremium(other.getStatsPremium());
          }
          if (other.hasStatsProfessional()) {
            mergeStatsProfessional(other.getStatsProfessional());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private int weeks_ ;
        /**
         * <code>optional uint32 weeks = 2;</code>
         */
        public boolean hasWeeks() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 weeks = 2;</code>
         */
        public int getWeeks() {
          return weeks_;
        }
        /**
         * <code>optional uint32 weeks = 2;</code>
         */
        public Builder setWeeks(int value) {
          bitField0_ |= 0x00000002;
          weeks_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 weeks = 2;</code>
         */
        public Builder clearWeeks() {
          bitField0_ = (bitField0_ & ~0x00000002);
          weeks_ = 0;
          onChanged();
          return this;
        }

        private MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator statsPremium_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder> statsPremiumBuilder_;
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public boolean hasStatsPremium() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsPremium() {
          if (statsPremiumBuilder_ == null) {
            return statsPremium_ == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance() : statsPremium_;
          } else {
            return statsPremiumBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public Builder setStatsPremium(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator value) {
          if (statsPremiumBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            statsPremium_ = value;
            onChanged();
          } else {
            statsPremiumBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public Builder setStatsPremium(
            MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder builderForValue) {
          if (statsPremiumBuilder_ == null) {
            statsPremium_ = builderForValue.build();
            onChanged();
          } else {
            statsPremiumBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public Builder mergeStatsPremium(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator value) {
          if (statsPremiumBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                statsPremium_ != null &&
                statsPremium_ != MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance()) {
              statsPremium_ =
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.newBuilder(statsPremium_).mergeFrom(value).buildPartial();
            } else {
              statsPremium_ = value;
            }
            onChanged();
          } else {
            statsPremiumBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public Builder clearStatsPremium() {
          if (statsPremiumBuilder_ == null) {
            statsPremium_ = null;
            onChanged();
          } else {
            statsPremiumBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder getStatsPremiumBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getStatsPremiumFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsPremiumOrBuilder() {
          if (statsPremiumBuilder_ != null) {
            return statsPremiumBuilder_.getMessageOrBuilder();
          } else {
            return statsPremium_ == null ?
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance() : statsPremium_;
          }
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_premium = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder> 
            getStatsPremiumFieldBuilder() {
          if (statsPremiumBuilder_ == null) {
            statsPremiumBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder>(
                    getStatsPremium(),
                    getParentForChildren(),
                    isClean());
            statsPremium_ = null;
          }
          return statsPremiumBuilder_;
        }

        private MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator statsProfessional_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder> statsProfessionalBuilder_;
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public boolean hasStatsProfessional() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator getStatsProfessional() {
          if (statsProfessionalBuilder_ == null) {
            return statsProfessional_ == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance() : statsProfessional_;
          } else {
            return statsProfessionalBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public Builder setStatsProfessional(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator value) {
          if (statsProfessionalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            statsProfessional_ = value;
            onChanged();
          } else {
            statsProfessionalBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public Builder setStatsProfessional(
            MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder builderForValue) {
          if (statsProfessionalBuilder_ == null) {
            statsProfessional_ = builderForValue.build();
            onChanged();
          } else {
            statsProfessionalBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public Builder mergeStatsProfessional(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator value) {
          if (statsProfessionalBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                statsProfessional_ != null &&
                statsProfessional_ != MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance()) {
              statsProfessional_ =
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.newBuilder(statsProfessional_).mergeFrom(value).buildPartial();
            } else {
              statsProfessional_ = value;
            }
            onChanged();
          } else {
            statsProfessionalBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public Builder clearStatsProfessional() {
          if (statsProfessionalBuilder_ == null) {
            statsProfessional_ = null;
            onChanged();
          } else {
            statsProfessionalBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder getStatsProfessionalBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getStatsProfessionalFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder getStatsProfessionalOrBuilder() {
          if (statsProfessionalBuilder_ != null) {
            return statsProfessionalBuilder_.getMessageOrBuilder();
          } else {
            return statsProfessional_ == null ?
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.getDefaultInstance() : statsProfessional_;
          }
        }
        /**
         * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator stats_professional = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder> 
            getStatsProfessionalFieldBuilder() {
          if (statsProfessionalBuilder_ == null) {
            statsProfessionalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulatorOrBuilder>(
                    getStatsProfessional(),
                    getParentForChildren(),
                    isClean());
            statsProfessional_ = null;
          }
          return statsProfessionalBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<PlayerStats>
          PARSER = new com.google.protobuf.AbstractParser<PlayerStats>() {
        public PlayerStats parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new PlayerStats(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PlayerStats> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PlayerStats> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult.SUCCESS : result;
    }

    public static final int STATS_FIELD_NUMBER = 2;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> stats_;
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> getStatsList() {
      return stats_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder> 
        getStatsOrBuilderList() {
      return stats_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    public int getStatsCount() {
      return stats_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats getStats(int index) {
      return stats_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder getStatsOrBuilder(
        int index) {
      return stats_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      for (int i = 0; i < stats_.size(); i++) {
        output.writeMessage(2, stats_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      for (int i = 0; i < stats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, stats_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && getStatsList()
          .equals(other.getStatsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (getStatsCount() > 0) {
        hash = (37 * hash) + STATS_FIELD_NUMBER;
        hash = (53 * hash) + getStatsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerHisoricalStatsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerHisoricalStatsResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStatsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (statsBuilder_ == null) {
          stats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          statsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (statsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            stats_ = java.util.Collections.unmodifiableList(stats_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.stats_ = stats_;
        } else {
          result.stats_ = statsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (statsBuilder_ == null) {
          if (!other.stats_.isEmpty()) {
            if (stats_.isEmpty()) {
              stats_ = other.stats_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureStatsIsMutable();
              stats_.addAll(other.stats_);
            }
            onChanged();
          }
        } else {
          if (!other.stats_.isEmpty()) {
            if (statsBuilder_.isEmpty()) {
              statsBuilder_.dispose();
              statsBuilder_ = null;
              stats_ = other.stats_;
              bitField0_ = (bitField0_ & ~0x00000002);
              statsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStatsFieldBuilder() : null;
            } else {
              statsBuilder_.addAllMessages(other.stats_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerHisoricalStatsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> stats_ =
        java.util.Collections.emptyList();
      private void ensureStatsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          stats_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats>(stats_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder> statsBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> getStatsList() {
        if (statsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stats_);
        } else {
          return statsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public int getStatsCount() {
        if (statsBuilder_ == null) {
          return stats_.size();
        } else {
          return statsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats getStats(int index) {
        if (statsBuilder_ == null) {
          return stats_.get(index);
        } else {
          return statsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder setStats(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.set(index, value);
          onChanged();
        } else {
          statsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder setStats(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.set(index, builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder addStats(MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.add(value);
          onChanged();
        } else {
          statsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder addStats(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.add(index, value);
          onChanged();
        } else {
          statsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder addStats(
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.add(builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder addStats(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.add(index, builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder addAllStats(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats> values) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stats_);
          onChanged();
        } else {
          statsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder clearStats() {
        if (statsBuilder_ == null) {
          stats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          statsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public Builder removeStats(int index) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.remove(index);
          onChanged();
        } else {
          statsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder getStatsBuilder(
          int index) {
        return getStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder getStatsOrBuilder(
          int index) {
        if (statsBuilder_ == null) {
          return stats_.get(index);  } else {
          return statsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder> 
           getStatsOrBuilderList() {
        if (statsBuilder_ != null) {
          return statsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stats_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder addStatsBuilder() {
        return getStatsFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder addStatsBuilder(
          int index) {
        return getStatsFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats stats = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder> 
           getStatsBuilderList() {
        return getStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder> 
          getStatsFieldBuilder() {
        if (statsBuilder_ == null) {
          statsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStatsOrBuilder>(
                  stats_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          stats_ = null;
        }
        return statsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerHisoricalStatsResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyPlayerHisoricalStatsResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerHisoricalStatsResponse>() {
      public CMsgDOTAFantasyPlayerHisoricalStatsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyPlayerHisoricalStatsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerHisoricalStatsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerHisoricalStatsResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerHisoricalStatsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyMessageAddOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyMessageAdd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional string message = 2;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 2;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 2;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyMessageAdd}
   */
  public  static final class CMsgDOTAFantasyMessageAdd extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyMessageAdd)
      CMsgDOTAFantasyMessageAddOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyMessageAdd.newBuilder() to construct.
    private CMsgDOTAFantasyMessageAdd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyMessageAdd() {
      fantasyLeagueId_ = 0;
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyMessageAdd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              message_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessageAdd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessageAdd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd.class, MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private volatile java.lang.Object message_;
    /**
     * <code>optional string message = 2;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string message = 2;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd other = (MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasMessage() == other.hasMessage());
      if (hasMessage()) {
        result = result && getMessage()
            .equals(other.getMessage());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasMessage()) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyMessageAdd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyMessageAdd)
        MsgGCClientFantasy.CMsgDOTAFantasyMessageAddOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessageAdd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessageAdd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd.class, MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessageAdd_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd build() {
        MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd result = new MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasMessage()) {
          bitField0_ |= 0x00000002;
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 2;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyMessageAdd)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyMessageAdd)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyMessageAdd>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyMessageAdd>() {
      public CMsgDOTAFantasyMessageAdd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyMessageAdd(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyMessageAdd> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyMessageAdd> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyMessageAdd getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyMessagesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyMessagesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 start_message = 2;</code>
     */
    boolean hasStartMessage();
    /**
     * <code>optional uint32 start_message = 2;</code>
     */
    int getStartMessage();

    /**
     * <code>optional uint32 end_message = 3;</code>
     */
    boolean hasEndMessage();
    /**
     * <code>optional uint32 end_message = 3;</code>
     */
    int getEndMessage();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyMessagesRequest}
   */
  public  static final class CMsgDOTAFantasyMessagesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyMessagesRequest)
      CMsgDOTAFantasyMessagesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyMessagesRequest.newBuilder() to construct.
    private CMsgDOTAFantasyMessagesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyMessagesRequest() {
      fantasyLeagueId_ = 0;
      startMessage_ = 0;
      endMessage_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyMessagesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startMessage_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              endMessage_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int START_MESSAGE_FIELD_NUMBER = 2;
    private int startMessage_;
    /**
     * <code>optional uint32 start_message = 2;</code>
     */
    public boolean hasStartMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 start_message = 2;</code>
     */
    public int getStartMessage() {
      return startMessage_;
    }

    public static final int END_MESSAGE_FIELD_NUMBER = 3;
    private int endMessage_;
    /**
     * <code>optional uint32 end_message = 3;</code>
     */
    public boolean hasEndMessage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 end_message = 3;</code>
     */
    public int getEndMessage() {
      return endMessage_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, startMessage_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, endMessage_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, startMessage_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, endMessage_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasStartMessage() == other.hasStartMessage());
      if (hasStartMessage()) {
        result = result && (getStartMessage()
            == other.getStartMessage());
      }
      result = result && (hasEndMessage() == other.hasEndMessage());
      if (hasEndMessage()) {
        result = result && (getEndMessage()
            == other.getEndMessage());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasStartMessage()) {
        hash = (37 * hash) + START_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getStartMessage();
      }
      if (hasEndMessage()) {
        hash = (37 * hash) + END_MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getEndMessage();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyMessagesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyMessagesRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        startMessage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        endMessage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startMessage_ = startMessage_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.endMessage_ = endMessage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasStartMessage()) {
          setStartMessage(other.getStartMessage());
        }
        if (other.hasEndMessage()) {
          setEndMessage(other.getEndMessage());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int startMessage_ ;
      /**
       * <code>optional uint32 start_message = 2;</code>
       */
      public boolean hasStartMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 start_message = 2;</code>
       */
      public int getStartMessage() {
        return startMessage_;
      }
      /**
       * <code>optional uint32 start_message = 2;</code>
       */
      public Builder setStartMessage(int value) {
        bitField0_ |= 0x00000002;
        startMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 start_message = 2;</code>
       */
      public Builder clearStartMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startMessage_ = 0;
        onChanged();
        return this;
      }

      private int endMessage_ ;
      /**
       * <code>optional uint32 end_message = 3;</code>
       */
      public boolean hasEndMessage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 end_message = 3;</code>
       */
      public int getEndMessage() {
        return endMessage_;
      }
      /**
       * <code>optional uint32 end_message = 3;</code>
       */
      public Builder setEndMessage(int value) {
        bitField0_ |= 0x00000004;
        endMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 end_message = 3;</code>
       */
      public Builder clearEndMessage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endMessage_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyMessagesRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyMessagesRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyMessagesRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyMessagesRequest>() {
      public CMsgDOTAFantasyMessagesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyMessagesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyMessagesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyMessagesRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyMessagesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyMessagesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyMessagesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message> 
        getMessagesList();
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message getMessages(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    int getMessagesCount();
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder> 
        getMessagesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder getMessagesOrBuilder(
        int index);

    /**
     * <code>optional uint32 num_total_messages = 3;</code>
     */
    boolean hasNumTotalMessages();
    /**
     * <code>optional uint32 num_total_messages = 3;</code>
     */
    int getNumTotalMessages();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyMessagesResponse}
   */
  public  static final class CMsgDOTAFantasyMessagesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyMessagesResponse)
      CMsgDOTAFantasyMessagesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyMessagesResponse.newBuilder() to construct.
    private CMsgDOTAFantasyMessagesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyMessagesResponse() {
      result_ = 0;
      messages_ = java.util.Collections.emptyList();
      numTotalMessages_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyMessagesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                messages_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              messages_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              numTotalMessages_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          messages_ = java.util.Collections.unmodifiableList(messages_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyMessagesResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyMessagesResponse.EResult)
    }

    public interface MessageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyMessagesResponse.Message)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 message_id = 1;</code>
       */
      boolean hasMessageId();
      /**
       * <code>optional uint32 message_id = 1;</code>
       */
      int getMessageId();

      /**
       * <code>optional string message = 2;</code>
       */
      boolean hasMessage();
      /**
       * <code>optional string message = 2;</code>
       */
      java.lang.String getMessage();
      /**
       * <code>optional string message = 2;</code>
       */
      com.google.protobuf.ByteString
          getMessageBytes();

      /**
       * <code>optional uint32 author_account_id = 3;</code>
       */
      boolean hasAuthorAccountId();
      /**
       * <code>optional uint32 author_account_id = 3;</code>
       */
      int getAuthorAccountId();

      /**
       * <code>optional uint32 time = 4;</code>
       */
      boolean hasTime();
      /**
       * <code>optional uint32 time = 4;</code>
       */
      int getTime();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyMessagesResponse.Message}
     */
    public  static final class Message extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyMessagesResponse.Message)
        MessageOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Message.newBuilder() to construct.
      private Message(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Message() {
        messageId_ = 0;
        message_ = "";
        authorAccountId_ = 0;
        time_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Message(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                messageId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                message_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                authorAccountId_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                time_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesResponse_Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.class, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder.class);
      }

      private int bitField0_;
      public static final int MESSAGE_ID_FIELD_NUMBER = 1;
      private int messageId_;
      /**
       * <code>optional uint32 message_id = 1;</code>
       */
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 message_id = 1;</code>
       */
      public int getMessageId() {
        return messageId_;
      }

      public static final int MESSAGE_FIELD_NUMBER = 2;
      private volatile java.lang.Object message_;
      /**
       * <code>optional string message = 2;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int AUTHOR_ACCOUNT_ID_FIELD_NUMBER = 3;
      private int authorAccountId_;
      /**
       * <code>optional uint32 author_account_id = 3;</code>
       */
      public boolean hasAuthorAccountId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 author_account_id = 3;</code>
       */
      public int getAuthorAccountId() {
        return authorAccountId_;
      }

      public static final int TIME_FIELD_NUMBER = 4;
      private int time_;
      /**
       * <code>optional uint32 time = 4;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 time = 4;</code>
       */
      public int getTime() {
        return time_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, messageId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, authorAccountId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, time_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, messageId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, authorAccountId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, time_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message other = (MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message) obj;

        boolean result = true;
        result = result && (hasMessageId() == other.hasMessageId());
        if (hasMessageId()) {
          result = result && (getMessageId()
              == other.getMessageId());
        }
        result = result && (hasMessage() == other.hasMessage());
        if (hasMessage()) {
          result = result && getMessage()
              .equals(other.getMessage());
        }
        result = result && (hasAuthorAccountId() == other.hasAuthorAccountId());
        if (hasAuthorAccountId()) {
          result = result && (getAuthorAccountId()
              == other.getAuthorAccountId());
        }
        result = result && (hasTime() == other.hasTime());
        if (hasTime()) {
          result = result && (getTime()
              == other.getTime());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMessageId()) {
          hash = (37 * hash) + MESSAGE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getMessageId();
        }
        if (hasMessage()) {
          hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getMessage().hashCode();
        }
        if (hasAuthorAccountId()) {
          hash = (37 * hash) + AUTHOR_ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getAuthorAccountId();
        }
        if (hasTime()) {
          hash = (37 * hash) + TIME_FIELD_NUMBER;
          hash = (53 * hash) + getTime();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyMessagesResponse.Message}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyMessagesResponse.Message)
          MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesResponse_Message_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.class, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          messageId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          message_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          authorAccountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          time_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message build() {
          MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message result = new MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.messageId_ = messageId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.message_ = message_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.authorAccountId_ = authorAccountId_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.time_ = time_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.getDefaultInstance()) return this;
          if (other.hasMessageId()) {
            setMessageId(other.getMessageId());
          }
          if (other.hasMessage()) {
            bitField0_ |= 0x00000002;
            message_ = other.message_;
            onChanged();
          }
          if (other.hasAuthorAccountId()) {
            setAuthorAccountId(other.getAuthorAccountId());
          }
          if (other.hasTime()) {
            setTime(other.getTime());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int messageId_ ;
        /**
         * <code>optional uint32 message_id = 1;</code>
         */
        public boolean hasMessageId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 message_id = 1;</code>
         */
        public int getMessageId() {
          return messageId_;
        }
        /**
         * <code>optional uint32 message_id = 1;</code>
         */
        public Builder setMessageId(int value) {
          bitField0_ |= 0x00000001;
          messageId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 message_id = 1;</code>
         */
        public Builder clearMessageId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          messageId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object message_ = "";
        /**
         * <code>optional string message = 2;</code>
         */
        public boolean hasMessage() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string message = 2;</code>
         */
        public java.lang.String getMessage() {
          java.lang.Object ref = message_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              message_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string message = 2;</code>
         */
        public com.google.protobuf.ByteString
            getMessageBytes() {
          java.lang.Object ref = message_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            message_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string message = 2;</code>
         */
        public Builder setMessage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          message_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 2;</code>
         */
        public Builder clearMessage() {
          bitField0_ = (bitField0_ & ~0x00000002);
          message_ = getDefaultInstance().getMessage();
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 2;</code>
         */
        public Builder setMessageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          message_ = value;
          onChanged();
          return this;
        }

        private int authorAccountId_ ;
        /**
         * <code>optional uint32 author_account_id = 3;</code>
         */
        public boolean hasAuthorAccountId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 author_account_id = 3;</code>
         */
        public int getAuthorAccountId() {
          return authorAccountId_;
        }
        /**
         * <code>optional uint32 author_account_id = 3;</code>
         */
        public Builder setAuthorAccountId(int value) {
          bitField0_ |= 0x00000004;
          authorAccountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 author_account_id = 3;</code>
         */
        public Builder clearAuthorAccountId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          authorAccountId_ = 0;
          onChanged();
          return this;
        }

        private int time_ ;
        /**
         * <code>optional uint32 time = 4;</code>
         */
        public boolean hasTime() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 time = 4;</code>
         */
        public int getTime() {
          return time_;
        }
        /**
         * <code>optional uint32 time = 4;</code>
         */
        public Builder setTime(int value) {
          bitField0_ |= 0x00000008;
          time_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 time = 4;</code>
         */
        public Builder clearTime() {
          bitField0_ = (bitField0_ & ~0x00000008);
          time_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyMessagesResponse.Message)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyMessagesResponse.Message)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Message>
          PARSER = new com.google.protobuf.AbstractParser<Message>() {
        public Message parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Message(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Message> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Message> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult.SUCCESS : result;
    }

    public static final int MESSAGES_FIELD_NUMBER = 2;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message> messages_;
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message> getMessagesList() {
      return messages_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder> 
        getMessagesOrBuilderList() {
      return messages_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    public int getMessagesCount() {
      return messages_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message getMessages(int index) {
      return messages_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder getMessagesOrBuilder(
        int index) {
      return messages_.get(index);
    }

    public static final int NUM_TOTAL_MESSAGES_FIELD_NUMBER = 3;
    private int numTotalMessages_;
    /**
     * <code>optional uint32 num_total_messages = 3;</code>
     */
    public boolean hasNumTotalMessages() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 num_total_messages = 3;</code>
     */
    public int getNumTotalMessages() {
      return numTotalMessages_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      for (int i = 0; i < messages_.size(); i++) {
        output.writeMessage(2, messages_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, numTotalMessages_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      for (int i = 0; i < messages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, messages_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, numTotalMessages_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && getMessagesList()
          .equals(other.getMessagesList());
      result = result && (hasNumTotalMessages() == other.hasNumTotalMessages());
      if (hasNumTotalMessages()) {
        result = result && (getNumTotalMessages()
            == other.getNumTotalMessages());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (getMessagesCount() > 0) {
        hash = (37 * hash) + MESSAGES_FIELD_NUMBER;
        hash = (53 * hash) + getMessagesList().hashCode();
      }
      if (hasNumTotalMessages()) {
        hash = (37 * hash) + NUM_TOTAL_MESSAGES_FIELD_NUMBER;
        hash = (53 * hash) + getNumTotalMessages();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyMessagesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyMessagesResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMessagesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (messagesBuilder_ == null) {
          messages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messagesBuilder_.clear();
        }
        numTotalMessages_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyMessagesResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (messagesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            messages_ = java.util.Collections.unmodifiableList(messages_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.messages_ = messages_;
        } else {
          result.messages_ = messagesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.numTotalMessages_ = numTotalMessages_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (messagesBuilder_ == null) {
          if (!other.messages_.isEmpty()) {
            if (messages_.isEmpty()) {
              messages_ = other.messages_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessagesIsMutable();
              messages_.addAll(other.messages_);
            }
            onChanged();
          }
        } else {
          if (!other.messages_.isEmpty()) {
            if (messagesBuilder_.isEmpty()) {
              messagesBuilder_.dispose();
              messagesBuilder_ = null;
              messages_ = other.messages_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messagesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessagesFieldBuilder() : null;
            } else {
              messagesBuilder_.addAllMessages(other.messages_);
            }
          }
        }
        if (other.hasNumTotalMessages()) {
          setNumTotalMessages(other.getNumTotalMessages());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyMessagesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message> messages_ =
        java.util.Collections.emptyList();
      private void ensureMessagesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          messages_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message>(messages_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder> messagesBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message> getMessagesList() {
        if (messagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(messages_);
        } else {
          return messagesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public int getMessagesCount() {
        if (messagesBuilder_ == null) {
          return messages_.size();
        } else {
          return messagesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message getMessages(int index) {
        if (messagesBuilder_ == null) {
          return messages_.get(index);
        } else {
          return messagesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder setMessages(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.set(index, value);
          onChanged();
        } else {
          messagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder setMessages(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.set(index, builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder addMessages(MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.add(value);
          onChanged();
        } else {
          messagesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder addMessages(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message value) {
        if (messagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessagesIsMutable();
          messages_.add(index, value);
          onChanged();
        } else {
          messagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder addMessages(
          MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.add(builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder addMessages(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder builderForValue) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.add(index, builderForValue.build());
          onChanged();
        } else {
          messagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder addAllMessages(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message> values) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, messages_);
          onChanged();
        } else {
          messagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder clearMessages() {
        if (messagesBuilder_ == null) {
          messages_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messagesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public Builder removeMessages(int index) {
        if (messagesBuilder_ == null) {
          ensureMessagesIsMutable();
          messages_.remove(index);
          onChanged();
        } else {
          messagesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder getMessagesBuilder(
          int index) {
        return getMessagesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder getMessagesOrBuilder(
          int index) {
        if (messagesBuilder_ == null) {
          return messages_.get(index);  } else {
          return messagesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder> 
           getMessagesOrBuilderList() {
        if (messagesBuilder_ != null) {
          return messagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(messages_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder addMessagesBuilder() {
        return getMessagesFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder addMessagesBuilder(
          int index) {
        return getMessagesFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyMessagesResponse.Message messages = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder> 
           getMessagesBuilderList() {
        return getMessagesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder> 
          getMessagesFieldBuilder() {
        if (messagesBuilder_ == null) {
          messagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.Message.Builder, MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse.MessageOrBuilder>(
                  messages_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          messages_ = null;
        }
        return messagesBuilder_;
      }

      private int numTotalMessages_ ;
      /**
       * <code>optional uint32 num_total_messages = 3;</code>
       */
      public boolean hasNumTotalMessages() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 num_total_messages = 3;</code>
       */
      public int getNumTotalMessages() {
        return numTotalMessages_;
      }
      /**
       * <code>optional uint32 num_total_messages = 3;</code>
       */
      public Builder setNumTotalMessages(int value) {
        bitField0_ |= 0x00000004;
        numTotalMessages_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num_total_messages = 3;</code>
       */
      public Builder clearNumTotalMessages() {
        bitField0_ = (bitField0_ & ~0x00000004);
        numTotalMessages_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyMessagesResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyMessagesResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyMessagesResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyMessagesResponse>() {
      public CMsgDOTAFantasyMessagesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyMessagesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyMessagesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyMessagesResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyMessagesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyRemoveOwnerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyRemoveOwner)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    boolean hasOwnerAccountId();
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    int getOwnerAccountId();

    /**
     * <code>optional uint32 team_index = 3;</code>
     */
    boolean hasTeamIndex();
    /**
     * <code>optional uint32 team_index = 3;</code>
     */
    int getTeamIndex();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyRemoveOwner}
   */
  public  static final class CMsgDOTAFantasyRemoveOwner extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyRemoveOwner)
      CMsgDOTAFantasyRemoveOwnerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyRemoveOwner.newBuilder() to construct.
    private CMsgDOTAFantasyRemoveOwner(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyRemoveOwner() {
      fantasyLeagueId_ = 0;
      ownerAccountId_ = 0;
      teamIndex_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyRemoveOwner(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ownerAccountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              teamIndex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyRemoveOwner_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyRemoveOwner_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner.class, MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int OWNER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int ownerAccountId_;
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public boolean hasOwnerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 owner_account_id = 2;</code>
     */
    public int getOwnerAccountId() {
      return ownerAccountId_;
    }

    public static final int TEAM_INDEX_FIELD_NUMBER = 3;
    private int teamIndex_;
    /**
     * <code>optional uint32 team_index = 3;</code>
     */
    public boolean hasTeamIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 team_index = 3;</code>
     */
    public int getTeamIndex() {
      return teamIndex_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, teamIndex_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ownerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, teamIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner other = (MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasOwnerAccountId() == other.hasOwnerAccountId());
      if (hasOwnerAccountId()) {
        result = result && (getOwnerAccountId()
            == other.getOwnerAccountId());
      }
      result = result && (hasTeamIndex() == other.hasTeamIndex());
      if (hasTeamIndex()) {
        result = result && (getTeamIndex()
            == other.getTeamIndex());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasOwnerAccountId()) {
        hash = (37 * hash) + OWNER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getOwnerAccountId();
      }
      if (hasTeamIndex()) {
        hash = (37 * hash) + TEAM_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTeamIndex();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyRemoveOwner}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyRemoveOwner)
        MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyRemoveOwner_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyRemoveOwner_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner.class, MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ownerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        teamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyRemoveOwner_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner build() {
        MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner result = new MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ownerAccountId_ = ownerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.teamIndex_ = teamIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasOwnerAccountId()) {
          setOwnerAccountId(other.getOwnerAccountId());
        }
        if (other.hasTeamIndex()) {
          setTeamIndex(other.getTeamIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int ownerAccountId_ ;
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public boolean hasOwnerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public int getOwnerAccountId() {
        return ownerAccountId_;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder setOwnerAccountId(int value) {
        bitField0_ |= 0x00000002;
        ownerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 owner_account_id = 2;</code>
       */
      public Builder clearOwnerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ownerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int teamIndex_ ;
      /**
       * <code>optional uint32 team_index = 3;</code>
       */
      public boolean hasTeamIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 team_index = 3;</code>
       */
      public int getTeamIndex() {
        return teamIndex_;
      }
      /**
       * <code>optional uint32 team_index = 3;</code>
       */
      public Builder setTeamIndex(int value) {
        bitField0_ |= 0x00000004;
        teamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_index = 3;</code>
       */
      public Builder clearTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        teamIndex_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyRemoveOwner)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyRemoveOwner)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyRemoveOwner>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyRemoveOwner>() {
      public CMsgDOTAFantasyRemoveOwner parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyRemoveOwner(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyRemoveOwner> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyRemoveOwner> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwner getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyRemoveOwnerResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyRemoveOwnerResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyRemoveOwnerResponse}
   */
  public  static final class CMsgDOTAFantasyRemoveOwnerResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyRemoveOwnerResponse)
      CMsgDOTAFantasyRemoveOwnerResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyRemoveOwnerResponse.newBuilder() to construct.
    private CMsgDOTAFantasyRemoveOwnerResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyRemoveOwnerResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyRemoveOwnerResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyRemoveOwnerResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyRemoveOwnerResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      ERROR_NO_PERMISSION(2),
      /**
       * <code>ERROR_LEAGUE_LOCKED = 3;</code>
       */
      ERROR_LEAGUE_LOCKED(3),
      /**
       * <code>ERROR_NOT_A_MEMBER = 4;</code>
       */
      ERROR_NOT_A_MEMBER(4),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NO_PERMISSION = 2;</code>
       */
      public static final int ERROR_NO_PERMISSION_VALUE = 2;
      /**
       * <code>ERROR_LEAGUE_LOCKED = 3;</code>
       */
      public static final int ERROR_LEAGUE_LOCKED_VALUE = 3;
      /**
       * <code>ERROR_NOT_A_MEMBER = 4;</code>
       */
      public static final int ERROR_NOT_A_MEMBER_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NO_PERMISSION;
          case 3: return ERROR_LEAGUE_LOCKED;
          case 4: return ERROR_NOT_A_MEMBER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyRemoveOwnerResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyRemoveOwnerResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyRemoveOwnerResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyRemoveOwnerResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyRemoveOwnerResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyRemoveOwnerResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyRemoveOwnerResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyRemoveOwnerResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyRemoveOwnerResponse>() {
      public CMsgDOTAFantasyRemoveOwnerResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyRemoveOwnerResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyRemoveOwnerResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyRemoveOwnerResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyRemoveOwnerResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyScheduledMatchesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyScheduledMatchesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesRequest}
   */
  public  static final class CMsgDOTAFantasyScheduledMatchesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyScheduledMatchesRequest)
      CMsgDOTAFantasyScheduledMatchesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyScheduledMatchesRequest.newBuilder() to construct.
    private CMsgDOTAFantasyScheduledMatchesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyScheduledMatchesRequest() {
      fantasyLeagueId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyScheduledMatchesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyScheduledMatchesRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyScheduledMatchesRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyScheduledMatchesRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyScheduledMatchesRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyScheduledMatchesRequest>() {
      public CMsgDOTAFantasyScheduledMatchesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyScheduledMatchesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyScheduledMatchesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyScheduledMatchesRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyScheduledMatchesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyScheduledMatchesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> 
        getScheduledMatchDaysList();
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays getScheduledMatchDays(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    int getScheduledMatchDaysCount();
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder> 
        getScheduledMatchDaysOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder getScheduledMatchDaysOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesResponse}
   */
  public  static final class CMsgDOTAFantasyScheduledMatchesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyScheduledMatchesResponse)
      CMsgDOTAFantasyScheduledMatchesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyScheduledMatchesResponse.newBuilder() to construct.
    private CMsgDOTAFantasyScheduledMatchesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyScheduledMatchesResponse() {
      result_ = 0;
      scheduledMatchDays_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyScheduledMatchesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                scheduledMatchDays_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays>();
                mutable_bitField0_ |= 0x00000002;
              }
              scheduledMatchDays_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          scheduledMatchDays_ = java.util.Collections.unmodifiableList(scheduledMatchDays_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyScheduledMatchesResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyScheduledMatchesResponse.EResult)
    }

    public interface ScheduledMatchDaysOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      boolean hasTimestamp();
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      int getTimestamp();

      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      java.util.List<java.lang.Integer> getTeamIdsList();
      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      int getTeamIdsCount();
      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      int getTeamIds(int index);

      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      java.util.List<java.lang.Integer> getLeagueIdsList();
      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      int getLeagueIdsCount();
      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      int getLeagueIds(int index);
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays}
     */
    public  static final class ScheduledMatchDays extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)
        ScheduledMatchDaysOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ScheduledMatchDays.newBuilder() to construct.
      private ScheduledMatchDays(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ScheduledMatchDays() {
        timestamp_ = 0;
        teamIds_ = java.util.Collections.emptyList();
        leagueIds_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ScheduledMatchDays(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                timestamp_ = input.readUInt32();
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  teamIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                teamIds_.add(input.readUInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  teamIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  teamIds_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 24: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  leagueIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                leagueIds_.add(input.readUInt32());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  leagueIds_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  leagueIds_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            teamIds_ = java.util.Collections.unmodifiableList(teamIds_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            leagueIds_ = java.util.Collections.unmodifiableList(leagueIds_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.class, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder.class);
      }

      private int bitField0_;
      public static final int TIMESTAMP_FIELD_NUMBER = 1;
      private int timestamp_;
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 timestamp = 1;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }

      public static final int TEAM_IDS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> teamIds_;
      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getTeamIdsList() {
        return teamIds_;
      }
      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      public int getTeamIdsCount() {
        return teamIds_.size();
      }
      /**
       * <code>repeated uint32 team_ids = 2;</code>
       */
      public int getTeamIds(int index) {
        return teamIds_.get(index);
      }

      public static final int LEAGUE_IDS_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Integer> leagueIds_;
      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getLeagueIdsList() {
        return leagueIds_;
      }
      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      public int getLeagueIdsCount() {
        return leagueIds_.size();
      }
      /**
       * <code>repeated uint32 league_ids = 3;</code>
       */
      public int getLeagueIds(int index) {
        return leagueIds_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, timestamp_);
        }
        for (int i = 0; i < teamIds_.size(); i++) {
          output.writeUInt32(2, teamIds_.get(i));
        }
        for (int i = 0; i < leagueIds_.size(); i++) {
          output.writeUInt32(3, leagueIds_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, timestamp_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < teamIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(teamIds_.get(i));
          }
          size += dataSize;
          size += 1 * getTeamIdsList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < leagueIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(leagueIds_.get(i));
          }
          size += dataSize;
          size += 1 * getLeagueIdsList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays other = (MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays) obj;

        boolean result = true;
        result = result && (hasTimestamp() == other.hasTimestamp());
        if (hasTimestamp()) {
          result = result && (getTimestamp()
              == other.getTimestamp());
        }
        result = result && getTeamIdsList()
            .equals(other.getTeamIdsList());
        result = result && getLeagueIdsList()
            .equals(other.getLeagueIdsList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTimestamp()) {
          hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + getTimestamp();
        }
        if (getTeamIdsCount() > 0) {
          hash = (37 * hash) + TEAM_IDS_FIELD_NUMBER;
          hash = (53 * hash) + getTeamIdsList().hashCode();
        }
        if (getLeagueIdsCount() > 0) {
          hash = (37 * hash) + LEAGUE_IDS_FIELD_NUMBER;
          hash = (53 * hash) + getLeagueIdsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)
          MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.class, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          timestamp_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          teamIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          leagueIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays build() {
          MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays result = new MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.timestamp_ = timestamp_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            teamIds_ = java.util.Collections.unmodifiableList(teamIds_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.teamIds_ = teamIds_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            leagueIds_ = java.util.Collections.unmodifiableList(leagueIds_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.leagueIds_ = leagueIds_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.getDefaultInstance()) return this;
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (!other.teamIds_.isEmpty()) {
            if (teamIds_.isEmpty()) {
              teamIds_ = other.teamIds_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTeamIdsIsMutable();
              teamIds_.addAll(other.teamIds_);
            }
            onChanged();
          }
          if (!other.leagueIds_.isEmpty()) {
            if (leagueIds_.isEmpty()) {
              leagueIds_ = other.leagueIds_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureLeagueIdsIsMutable();
              leagueIds_.addAll(other.leagueIds_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int timestamp_ ;
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public int getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public Builder setTimestamp(int value) {
          bitField0_ |= 0x00000001;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 timestamp = 1;</code>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000001);
          timestamp_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> teamIds_ = java.util.Collections.emptyList();
        private void ensureTeamIdsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            teamIds_ = new java.util.ArrayList<java.lang.Integer>(teamIds_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public java.util.List<java.lang.Integer>
            getTeamIdsList() {
          return java.util.Collections.unmodifiableList(teamIds_);
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public int getTeamIdsCount() {
          return teamIds_.size();
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public int getTeamIds(int index) {
          return teamIds_.get(index);
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public Builder setTeamIds(
            int index, int value) {
          ensureTeamIdsIsMutable();
          teamIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public Builder addTeamIds(int value) {
          ensureTeamIdsIsMutable();
          teamIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public Builder addAllTeamIds(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureTeamIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teamIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 team_ids = 2;</code>
         */
        public Builder clearTeamIds() {
          teamIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> leagueIds_ = java.util.Collections.emptyList();
        private void ensureLeagueIdsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            leagueIds_ = new java.util.ArrayList<java.lang.Integer>(leagueIds_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public java.util.List<java.lang.Integer>
            getLeagueIdsList() {
          return java.util.Collections.unmodifiableList(leagueIds_);
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public int getLeagueIdsCount() {
          return leagueIds_.size();
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public int getLeagueIds(int index) {
          return leagueIds_.get(index);
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public Builder setLeagueIds(
            int index, int value) {
          ensureLeagueIdsIsMutable();
          leagueIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public Builder addLeagueIds(int value) {
          ensureLeagueIdsIsMutable();
          leagueIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public Builder addAllLeagueIds(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureLeagueIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, leagueIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 league_ids = 3;</code>
         */
        public Builder clearLeagueIds() {
          leagueIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ScheduledMatchDays>
          PARSER = new com.google.protobuf.AbstractParser<ScheduledMatchDays>() {
        public ScheduledMatchDays parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new ScheduledMatchDays(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ScheduledMatchDays> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ScheduledMatchDays> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult.SUCCESS : result;
    }

    public static final int SCHEDULED_MATCH_DAYS_FIELD_NUMBER = 2;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> scheduledMatchDays_;
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> getScheduledMatchDaysList() {
      return scheduledMatchDays_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder> 
        getScheduledMatchDaysOrBuilderList() {
      return scheduledMatchDays_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    public int getScheduledMatchDaysCount() {
      return scheduledMatchDays_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays getScheduledMatchDays(int index) {
      return scheduledMatchDays_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder getScheduledMatchDaysOrBuilder(
        int index) {
      return scheduledMatchDays_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      for (int i = 0; i < scheduledMatchDays_.size(); i++) {
        output.writeMessage(2, scheduledMatchDays_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      for (int i = 0; i < scheduledMatchDays_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, scheduledMatchDays_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && getScheduledMatchDaysList()
          .equals(other.getScheduledMatchDaysList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (getScheduledMatchDaysCount() > 0) {
        hash = (37 * hash) + SCHEDULED_MATCH_DAYS_FIELD_NUMBER;
        hash = (53 * hash) + getScheduledMatchDaysList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyScheduledMatchesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyScheduledMatchesResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getScheduledMatchDaysFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (scheduledMatchDaysBuilder_ == null) {
          scheduledMatchDays_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          scheduledMatchDaysBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (scheduledMatchDaysBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            scheduledMatchDays_ = java.util.Collections.unmodifiableList(scheduledMatchDays_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.scheduledMatchDays_ = scheduledMatchDays_;
        } else {
          result.scheduledMatchDays_ = scheduledMatchDaysBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (scheduledMatchDaysBuilder_ == null) {
          if (!other.scheduledMatchDays_.isEmpty()) {
            if (scheduledMatchDays_.isEmpty()) {
              scheduledMatchDays_ = other.scheduledMatchDays_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureScheduledMatchDaysIsMutable();
              scheduledMatchDays_.addAll(other.scheduledMatchDays_);
            }
            onChanged();
          }
        } else {
          if (!other.scheduledMatchDays_.isEmpty()) {
            if (scheduledMatchDaysBuilder_.isEmpty()) {
              scheduledMatchDaysBuilder_.dispose();
              scheduledMatchDaysBuilder_ = null;
              scheduledMatchDays_ = other.scheduledMatchDays_;
              bitField0_ = (bitField0_ & ~0x00000002);
              scheduledMatchDaysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getScheduledMatchDaysFieldBuilder() : null;
            } else {
              scheduledMatchDaysBuilder_.addAllMessages(other.scheduledMatchDays_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyScheduledMatchesResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> scheduledMatchDays_ =
        java.util.Collections.emptyList();
      private void ensureScheduledMatchDaysIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          scheduledMatchDays_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays>(scheduledMatchDays_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder> scheduledMatchDaysBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> getScheduledMatchDaysList() {
        if (scheduledMatchDaysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(scheduledMatchDays_);
        } else {
          return scheduledMatchDaysBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public int getScheduledMatchDaysCount() {
        if (scheduledMatchDaysBuilder_ == null) {
          return scheduledMatchDays_.size();
        } else {
          return scheduledMatchDaysBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays getScheduledMatchDays(int index) {
        if (scheduledMatchDaysBuilder_ == null) {
          return scheduledMatchDays_.get(index);
        } else {
          return scheduledMatchDaysBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder setScheduledMatchDays(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays value) {
        if (scheduledMatchDaysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.set(index, value);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder setScheduledMatchDays(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder builderForValue) {
        if (scheduledMatchDaysBuilder_ == null) {
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.set(index, builderForValue.build());
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder addScheduledMatchDays(MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays value) {
        if (scheduledMatchDaysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.add(value);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder addScheduledMatchDays(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays value) {
        if (scheduledMatchDaysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.add(index, value);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder addScheduledMatchDays(
          MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder builderForValue) {
        if (scheduledMatchDaysBuilder_ == null) {
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.add(builderForValue.build());
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder addScheduledMatchDays(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder builderForValue) {
        if (scheduledMatchDaysBuilder_ == null) {
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.add(index, builderForValue.build());
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder addAllScheduledMatchDays(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays> values) {
        if (scheduledMatchDaysBuilder_ == null) {
          ensureScheduledMatchDaysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, scheduledMatchDays_);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder clearScheduledMatchDays() {
        if (scheduledMatchDaysBuilder_ == null) {
          scheduledMatchDays_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public Builder removeScheduledMatchDays(int index) {
        if (scheduledMatchDaysBuilder_ == null) {
          ensureScheduledMatchDaysIsMutable();
          scheduledMatchDays_.remove(index);
          onChanged();
        } else {
          scheduledMatchDaysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder getScheduledMatchDaysBuilder(
          int index) {
        return getScheduledMatchDaysFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder getScheduledMatchDaysOrBuilder(
          int index) {
        if (scheduledMatchDaysBuilder_ == null) {
          return scheduledMatchDays_.get(index);  } else {
          return scheduledMatchDaysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder> 
           getScheduledMatchDaysOrBuilderList() {
        if (scheduledMatchDaysBuilder_ != null) {
          return scheduledMatchDaysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(scheduledMatchDays_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder addScheduledMatchDaysBuilder() {
        return getScheduledMatchDaysFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder addScheduledMatchDaysBuilder(
          int index) {
        return getScheduledMatchDaysFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays scheduled_match_days = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder> 
           getScheduledMatchDaysBuilderList() {
        return getScheduledMatchDaysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder> 
          getScheduledMatchDaysFieldBuilder() {
        if (scheduledMatchDaysBuilder_ == null) {
          scheduledMatchDaysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays.Builder, MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDaysOrBuilder>(
                  scheduledMatchDays_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          scheduledMatchDays_ = null;
        }
        return scheduledMatchDaysBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyScheduledMatchesResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyScheduledMatchesResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyScheduledMatchesResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyScheduledMatchesResponse>() {
      public CMsgDOTAFantasyScheduledMatchesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyScheduledMatchesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyScheduledMatchesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyScheduledMatchesResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyScheduledMatchesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeaveLeagueRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeaveLeagueRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    boolean hasFantasyTeamIndex();
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    int getFantasyTeamIndex();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeaveLeagueRequest}
   */
  public  static final class CMsgDOTAFantasyLeaveLeagueRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeaveLeagueRequest)
      CMsgDOTAFantasyLeaveLeagueRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeaveLeagueRequest.newBuilder() to construct.
    private CMsgDOTAFantasyLeaveLeagueRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeaveLeagueRequest() {
      fantasyLeagueId_ = 0;
      fantasyTeamIndex_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeaveLeagueRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fantasyTeamIndex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeaveLeagueRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int FANTASY_TEAM_INDEX_FIELD_NUMBER = 2;
    private int fantasyTeamIndex_;
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    public boolean hasFantasyTeamIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 fantasy_team_index = 2;</code>
     */
    public int getFantasyTeamIndex() {
      return fantasyTeamIndex_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fantasyTeamIndex_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fantasyTeamIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasFantasyTeamIndex() == other.hasFantasyTeamIndex());
      if (hasFantasyTeamIndex()) {
        result = result && (getFantasyTeamIndex()
            == other.getFantasyTeamIndex());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasFantasyTeamIndex()) {
        hash = (37 * hash) + FANTASY_TEAM_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyTeamIndex();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeaveLeagueRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeaveLeagueRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeaveLeagueRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyTeamIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fantasyTeamIndex_ = fantasyTeamIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasFantasyTeamIndex()) {
          setFantasyTeamIndex(other.getFantasyTeamIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int fantasyTeamIndex_ ;
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public boolean hasFantasyTeamIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public int getFantasyTeamIndex() {
        return fantasyTeamIndex_;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public Builder setFantasyTeamIndex(int value) {
        bitField0_ |= 0x00000002;
        fantasyTeamIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_team_index = 2;</code>
       */
      public Builder clearFantasyTeamIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyTeamIndex_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeaveLeagueRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeaveLeagueRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeaveLeagueRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeaveLeagueRequest>() {
      public CMsgDOTAFantasyLeaveLeagueRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeaveLeagueRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeaveLeagueRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeaveLeagueRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyLeaveLeagueResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyLeaveLeagueResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyLeaveLeagueResponse}
   */
  public  static final class CMsgDOTAFantasyLeaveLeagueResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyLeaveLeagueResponse)
      CMsgDOTAFantasyLeaveLeagueResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyLeaveLeagueResponse.newBuilder() to construct.
    private CMsgDOTAFantasyLeaveLeagueResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyLeaveLeagueResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyLeaveLeagueResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeaveLeagueResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyLeaveLeagueResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NOT_MEMBER = 2;</code>
       */
      ERROR_NOT_MEMBER(2),
      /**
       * <code>ERROR_LEAGUE_NOT_FOUND = 3;</code>
       */
      ERROR_LEAGUE_NOT_FOUND(3),
      /**
       * <code>ERROR_DRAFT_ACTIVE = 4;</code>
       */
      ERROR_DRAFT_ACTIVE(4),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NOT_MEMBER = 2;</code>
       */
      public static final int ERROR_NOT_MEMBER_VALUE = 2;
      /**
       * <code>ERROR_LEAGUE_NOT_FOUND = 3;</code>
       */
      public static final int ERROR_LEAGUE_NOT_FOUND_VALUE = 3;
      /**
       * <code>ERROR_DRAFT_ACTIVE = 4;</code>
       */
      public static final int ERROR_DRAFT_ACTIVE_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NOT_MEMBER;
          case 3: return ERROR_LEAGUE_NOT_FOUND;
          case 4: return ERROR_DRAFT_ACTIVE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyLeaveLeagueResponse.EResult)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyLeaveLeagueResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyLeaveLeagueResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeaveLeagueResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyLeaveLeagueResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyLeaveLeagueResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyLeaveLeagueResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyLeaveLeagueResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyLeaveLeagueResponse>() {
      public CMsgDOTAFantasyLeaveLeagueResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyLeaveLeagueResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyLeaveLeagueResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyLeaveLeagueResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyLeaveLeagueResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyPlayerScoreDetailsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerScoreDetailsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    int getFantasyLeagueId();

    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    boolean hasPlayerAccountId();
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    int getPlayerAccountId();

    /**
     * <code>optional uint32 start_time = 3;</code>
     */
    boolean hasStartTime();
    /**
     * <code>optional uint32 start_time = 3;</code>
     */
    int getStartTime();

    /**
     * <code>optional uint32 end_time = 4;</code>
     */
    boolean hasEndTime();
    /**
     * <code>optional uint32 end_time = 4;</code>
     */
    int getEndTime();
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsRequest}
   */
  public  static final class CMsgDOTAFantasyPlayerScoreDetailsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerScoreDetailsRequest)
      CMsgDOTAFantasyPlayerScoreDetailsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyPlayerScoreDetailsRequest.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerScoreDetailsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyPlayerScoreDetailsRequest() {
      fantasyLeagueId_ = 0;
      playerAccountId_ = 0;
      startTime_ = 0;
      endTime_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerScoreDetailsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerAccountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              startTime_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              endTime_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 1;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 1;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    public static final int PLAYER_ACCOUNT_ID_FIELD_NUMBER = 2;
    private int playerAccountId_;
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    public boolean hasPlayerAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 player_account_id = 2;</code>
     */
    public int getPlayerAccountId() {
      return playerAccountId_;
    }

    public static final int START_TIME_FIELD_NUMBER = 3;
    private int startTime_;
    /**
     * <code>optional uint32 start_time = 3;</code>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 start_time = 3;</code>
     */
    public int getStartTime() {
      return startTime_;
    }

    public static final int END_TIME_FIELD_NUMBER = 4;
    private int endTime_;
    /**
     * <code>optional uint32 end_time = 4;</code>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 end_time = 4;</code>
     */
    public int getEndTime() {
      return endTime_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, playerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, startTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, endTime_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, playerAccountId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, startTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, endTime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest) obj;

      boolean result = true;
      result = result && (hasFantasyLeagueId() == other.hasFantasyLeagueId());
      if (hasFantasyLeagueId()) {
        result = result && (getFantasyLeagueId()
            == other.getFantasyLeagueId());
      }
      result = result && (hasPlayerAccountId() == other.hasPlayerAccountId());
      if (hasPlayerAccountId()) {
        result = result && (getPlayerAccountId()
            == other.getPlayerAccountId());
      }
      result = result && (hasStartTime() == other.hasStartTime());
      if (hasStartTime()) {
        result = result && (getStartTime()
            == other.getStartTime());
      }
      result = result && (hasEndTime() == other.hasEndTime());
      if (hasEndTime()) {
        result = result && (getEndTime()
            == other.getEndTime());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFantasyLeagueId()) {
        hash = (37 * hash) + FANTASY_LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFantasyLeagueId();
      }
      if (hasPlayerAccountId()) {
        hash = (37 * hash) + PLAYER_ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerAccountId();
      }
      if (hasStartTime()) {
        hash = (37 * hash) + START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getStartTime();
      }
      if (hasEndTime()) {
        hash = (37 * hash) + END_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getEndTime();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerScoreDetailsRequest)
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        startTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        endTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest build() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerAccountId_ = playerAccountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.endTime_ = endTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest.getDefaultInstance()) return this;
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasPlayerAccountId()) {
          setPlayerAccountId(other.getPlayerAccountId());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000001;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 1;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      private int playerAccountId_ ;
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public boolean hasPlayerAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public int getPlayerAccountId() {
        return playerAccountId_;
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public Builder setPlayerAccountId(int value) {
        bitField0_ |= 0x00000002;
        playerAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_account_id = 2;</code>
       */
      public Builder clearPlayerAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerAccountId_ = 0;
        onChanged();
        return this;
      }

      private int startTime_ ;
      /**
       * <code>optional uint32 start_time = 3;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 start_time = 3;</code>
       */
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <code>optional uint32 start_time = 3;</code>
       */
      public Builder setStartTime(int value) {
        bitField0_ |= 0x00000004;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 start_time = 3;</code>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        startTime_ = 0;
        onChanged();
        return this;
      }

      private int endTime_ ;
      /**
       * <code>optional uint32 end_time = 4;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 end_time = 4;</code>
       */
      public int getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional uint32 end_time = 4;</code>
       */
      public Builder setEndTime(int value) {
        bitField0_ |= 0x00000008;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 end_time = 4;</code>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        endTime_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerScoreDetailsRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerScoreDetailsRequest)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreDetailsRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerScoreDetailsRequest>() {
      public CMsgDOTAFantasyPlayerScoreDetailsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyPlayerScoreDetailsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreDetailsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreDetailsRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAFantasyPlayerScoreDetailsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerScoreDetailsResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult getResult();

    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> 
        getDataList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData getData(int index);
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    int getDataCount();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsResponse}
   */
  public  static final class CMsgDOTAFantasyPlayerScoreDetailsResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerScoreDetailsResponse)
      CMsgDOTAFantasyPlayerScoreDetailsResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAFantasyPlayerScoreDetailsResponse.newBuilder() to construct.
    private CMsgDOTAFantasyPlayerScoreDetailsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAFantasyPlayerScoreDetailsResponse() {
      result_ = 0;
      data_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAFantasyPlayerScoreDetailsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult value = MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                data_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData>();
                mutable_bitField0_ |= 0x00000002;
              }
              data_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_NOT_MEMBER = 2;</code>
       */
      ERROR_NOT_MEMBER(2),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_NOT_MEMBER = 2;</code>
       */
      public static final int ERROR_NOT_MEMBER_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EResult valueOf(int value) {
        return forNumber(value);
      }

      public static EResult forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_NOT_MEMBER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EResult> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EResult(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult)
    }

    public interface PlayerMatchDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      boolean hasMatchId();
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      long getMatchId();

      /**
       * <code>optional uint32 series_id = 2;</code>
       */
      boolean hasSeriesId();
      /**
       * <code>optional uint32 series_id = 2;</code>
       */
      int getSeriesId();

      /**
       * <code>optional uint32 series_num = 3;</code>
       */
      boolean hasSeriesNum();
      /**
       * <code>optional uint32 series_num = 3;</code>
       */
      int getSeriesNum();

      /**
       * <code>optional uint32 series_type = 4;</code>
       */
      boolean hasSeriesType();
      /**
       * <code>optional uint32 series_type = 4;</code>
       */
      int getSeriesType();

      /**
       * <code>optional uint32 league_tier = 5;</code>
       */
      boolean hasLeagueTier();
      /**
       * <code>optional uint32 league_tier = 5;</code>
       */
      int getLeagueTier();

      /**
       * <code>optional uint32 league_id = 6;</code>
       */
      boolean hasLeagueId();
      /**
       * <code>optional uint32 league_id = 6;</code>
       */
      int getLeagueId();

      /**
       * <code>optional uint32 opposing_team_id = 7;</code>
       */
      boolean hasOpposingTeamId();
      /**
       * <code>optional uint32 opposing_team_id = 7;</code>
       */
      int getOpposingTeamId();

      /**
       * <code>optional uint64 opposing_team_logo = 8;</code>
       */
      boolean hasOpposingTeamLogo();
      /**
       * <code>optional uint64 opposing_team_logo = 8;</code>
       */
      long getOpposingTeamLogo();

      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      boolean hasOpposingTeamName();
      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      java.lang.String getOpposingTeamName();
      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      com.google.protobuf.ByteString
          getOpposingTeamNameBytes();

      /**
       * <code>optional uint32 owned_by = 11;</code>
       */
      boolean hasOwnedBy();
      /**
       * <code>optional uint32 owned_by = 11;</code>
       */
      int getOwnedBy();

      /**
       * <code>optional bool benched = 12;</code>
       */
      boolean hasBenched();
      /**
       * <code>optional bool benched = 12;</code>
       */
      boolean getBenched();
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData}
     */
    public  static final class PlayerMatchData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)
        PlayerMatchDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PlayerMatchData.newBuilder() to construct.
      private PlayerMatchData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PlayerMatchData() {
        matchId_ = 0L;
        seriesId_ = 0;
        seriesNum_ = 0;
        seriesType_ = 0;
        leagueTier_ = 0;
        leagueId_ = 0;
        opposingTeamId_ = 0;
        opposingTeamLogo_ = 0L;
        opposingTeamName_ = "";
        ownedBy_ = 0;
        benched_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PlayerMatchData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                matchId_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                seriesId_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                seriesNum_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                seriesType_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                leagueTier_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                leagueId_ = input.readUInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                opposingTeamId_ = input.readUInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                opposingTeamLogo_ = input.readUInt64();
                break;
              }
              case 74: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000100;
                opposingTeamName_ = bs;
                break;
              }
              case 88: {
                bitField0_ |= 0x00000200;
                ownedBy_ = input.readUInt32();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000400;
                benched_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder.class);
      }

      private int bitField0_;
      public static final int MATCH_ID_FIELD_NUMBER = 1;
      private long matchId_;
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public long getMatchId() {
        return matchId_;
      }

      public static final int SERIES_ID_FIELD_NUMBER = 2;
      private int seriesId_;
      /**
       * <code>optional uint32 series_id = 2;</code>
       */
      public boolean hasSeriesId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 series_id = 2;</code>
       */
      public int getSeriesId() {
        return seriesId_;
      }

      public static final int SERIES_NUM_FIELD_NUMBER = 3;
      private int seriesNum_;
      /**
       * <code>optional uint32 series_num = 3;</code>
       */
      public boolean hasSeriesNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 series_num = 3;</code>
       */
      public int getSeriesNum() {
        return seriesNum_;
      }

      public static final int SERIES_TYPE_FIELD_NUMBER = 4;
      private int seriesType_;
      /**
       * <code>optional uint32 series_type = 4;</code>
       */
      public boolean hasSeriesType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 series_type = 4;</code>
       */
      public int getSeriesType() {
        return seriesType_;
      }

      public static final int LEAGUE_TIER_FIELD_NUMBER = 5;
      private int leagueTier_;
      /**
       * <code>optional uint32 league_tier = 5;</code>
       */
      public boolean hasLeagueTier() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 league_tier = 5;</code>
       */
      public int getLeagueTier() {
        return leagueTier_;
      }

      public static final int LEAGUE_ID_FIELD_NUMBER = 6;
      private int leagueId_;
      /**
       * <code>optional uint32 league_id = 6;</code>
       */
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 league_id = 6;</code>
       */
      public int getLeagueId() {
        return leagueId_;
      }

      public static final int OPPOSING_TEAM_ID_FIELD_NUMBER = 7;
      private int opposingTeamId_;
      /**
       * <code>optional uint32 opposing_team_id = 7;</code>
       */
      public boolean hasOpposingTeamId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 opposing_team_id = 7;</code>
       */
      public int getOpposingTeamId() {
        return opposingTeamId_;
      }

      public static final int OPPOSING_TEAM_LOGO_FIELD_NUMBER = 8;
      private long opposingTeamLogo_;
      /**
       * <code>optional uint64 opposing_team_logo = 8;</code>
       */
      public boolean hasOpposingTeamLogo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 opposing_team_logo = 8;</code>
       */
      public long getOpposingTeamLogo() {
        return opposingTeamLogo_;
      }

      public static final int OPPOSING_TEAM_NAME_FIELD_NUMBER = 9;
      private volatile java.lang.Object opposingTeamName_;
      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      public boolean hasOpposingTeamName() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      public java.lang.String getOpposingTeamName() {
        java.lang.Object ref = opposingTeamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            opposingTeamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string opposing_team_name = 9;</code>
       */
      public com.google.protobuf.ByteString
          getOpposingTeamNameBytes() {
        java.lang.Object ref = opposingTeamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          opposingTeamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int OWNED_BY_FIELD_NUMBER = 11;
      private int ownedBy_;
      /**
       * <code>optional uint32 owned_by = 11;</code>
       */
      public boolean hasOwnedBy() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 owned_by = 11;</code>
       */
      public int getOwnedBy() {
        return ownedBy_;
      }

      public static final int BENCHED_FIELD_NUMBER = 12;
      private boolean benched_;
      /**
       * <code>optional bool benched = 12;</code>
       */
      public boolean hasBenched() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool benched = 12;</code>
       */
      public boolean getBenched() {
        return benched_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, matchId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, seriesId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, seriesNum_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, seriesType_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, leagueTier_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, leagueId_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(7, opposingTeamId_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt64(8, opposingTeamLogo_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 9, opposingTeamName_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeUInt32(11, ownedBy_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBool(12, benched_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, matchId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, seriesId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, seriesNum_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, seriesType_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, leagueTier_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, leagueId_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, opposingTeamId_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(8, opposingTeamLogo_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, opposingTeamName_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(11, ownedBy_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(12, benched_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)) {
          return super.equals(obj);
        }
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData) obj;

        boolean result = true;
        result = result && (hasMatchId() == other.hasMatchId());
        if (hasMatchId()) {
          result = result && (getMatchId()
              == other.getMatchId());
        }
        result = result && (hasSeriesId() == other.hasSeriesId());
        if (hasSeriesId()) {
          result = result && (getSeriesId()
              == other.getSeriesId());
        }
        result = result && (hasSeriesNum() == other.hasSeriesNum());
        if (hasSeriesNum()) {
          result = result && (getSeriesNum()
              == other.getSeriesNum());
        }
        result = result && (hasSeriesType() == other.hasSeriesType());
        if (hasSeriesType()) {
          result = result && (getSeriesType()
              == other.getSeriesType());
        }
        result = result && (hasLeagueTier() == other.hasLeagueTier());
        if (hasLeagueTier()) {
          result = result && (getLeagueTier()
              == other.getLeagueTier());
        }
        result = result && (hasLeagueId() == other.hasLeagueId());
        if (hasLeagueId()) {
          result = result && (getLeagueId()
              == other.getLeagueId());
        }
        result = result && (hasOpposingTeamId() == other.hasOpposingTeamId());
        if (hasOpposingTeamId()) {
          result = result && (getOpposingTeamId()
              == other.getOpposingTeamId());
        }
        result = result && (hasOpposingTeamLogo() == other.hasOpposingTeamLogo());
        if (hasOpposingTeamLogo()) {
          result = result && (getOpposingTeamLogo()
              == other.getOpposingTeamLogo());
        }
        result = result && (hasOpposingTeamName() == other.hasOpposingTeamName());
        if (hasOpposingTeamName()) {
          result = result && getOpposingTeamName()
              .equals(other.getOpposingTeamName());
        }
        result = result && (hasOwnedBy() == other.hasOwnedBy());
        if (hasOwnedBy()) {
          result = result && (getOwnedBy()
              == other.getOwnedBy());
        }
        result = result && (hasBenched() == other.hasBenched());
        if (hasBenched()) {
          result = result && (getBenched()
              == other.getBenched());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMatchId()) {
          hash = (37 * hash) + MATCH_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMatchId());
        }
        if (hasSeriesId()) {
          hash = (37 * hash) + SERIES_ID_FIELD_NUMBER;
          hash = (53 * hash) + getSeriesId();
        }
        if (hasSeriesNum()) {
          hash = (37 * hash) + SERIES_NUM_FIELD_NUMBER;
          hash = (53 * hash) + getSeriesNum();
        }
        if (hasSeriesType()) {
          hash = (37 * hash) + SERIES_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getSeriesType();
        }
        if (hasLeagueTier()) {
          hash = (37 * hash) + LEAGUE_TIER_FIELD_NUMBER;
          hash = (53 * hash) + getLeagueTier();
        }
        if (hasLeagueId()) {
          hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getLeagueId();
        }
        if (hasOpposingTeamId()) {
          hash = (37 * hash) + OPPOSING_TEAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + getOpposingTeamId();
        }
        if (hasOpposingTeamLogo()) {
          hash = (37 * hash) + OPPOSING_TEAM_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getOpposingTeamLogo());
        }
        if (hasOpposingTeamName()) {
          hash = (37 * hash) + OPPOSING_TEAM_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getOpposingTeamName().hashCode();
        }
        if (hasOwnedBy()) {
          hash = (37 * hash) + OWNED_BY_FIELD_NUMBER;
          hash = (53 * hash) + getOwnedBy();
        }
        if (hasBenched()) {
          hash = (37 * hash) + BENCHED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBenched());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder.class);
        }

        // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          matchId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          seriesId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          seriesNum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          seriesType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          leagueTier_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          leagueId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          opposingTeamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          opposingTeamLogo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000080);
          opposingTeamName_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          ownedBy_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          benched_ = false;
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData getDefaultInstanceForType() {
          return MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.getDefaultInstance();
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData build() {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData buildPartial() {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.matchId_ = matchId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.seriesId_ = seriesId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.seriesNum_ = seriesNum_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.seriesType_ = seriesType_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.leagueTier_ = leagueTier_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.leagueId_ = leagueId_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.opposingTeamId_ = opposingTeamId_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.opposingTeamLogo_ = opposingTeamLogo_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.opposingTeamName_ = opposingTeamName_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.ownedBy_ = ownedBy_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.benched_ = benched_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData) {
            return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData other) {
          if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.getDefaultInstance()) return this;
          if (other.hasMatchId()) {
            setMatchId(other.getMatchId());
          }
          if (other.hasSeriesId()) {
            setSeriesId(other.getSeriesId());
          }
          if (other.hasSeriesNum()) {
            setSeriesNum(other.getSeriesNum());
          }
          if (other.hasSeriesType()) {
            setSeriesType(other.getSeriesType());
          }
          if (other.hasLeagueTier()) {
            setLeagueTier(other.getLeagueTier());
          }
          if (other.hasLeagueId()) {
            setLeagueId(other.getLeagueId());
          }
          if (other.hasOpposingTeamId()) {
            setOpposingTeamId(other.getOpposingTeamId());
          }
          if (other.hasOpposingTeamLogo()) {
            setOpposingTeamLogo(other.getOpposingTeamLogo());
          }
          if (other.hasOpposingTeamName()) {
            bitField0_ |= 0x00000100;
            opposingTeamName_ = other.opposingTeamName_;
            onChanged();
          }
          if (other.hasOwnedBy()) {
            setOwnedBy(other.getOwnedBy());
          }
          if (other.hasBenched()) {
            setBenched(other.getBenched());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long matchId_ ;
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public boolean hasMatchId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public long getMatchId() {
          return matchId_;
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public Builder setMatchId(long value) {
          bitField0_ |= 0x00000001;
          matchId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public Builder clearMatchId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          matchId_ = 0L;
          onChanged();
          return this;
        }

        private int seriesId_ ;
        /**
         * <code>optional uint32 series_id = 2;</code>
         */
        public boolean hasSeriesId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 series_id = 2;</code>
         */
        public int getSeriesId() {
          return seriesId_;
        }
        /**
         * <code>optional uint32 series_id = 2;</code>
         */
        public Builder setSeriesId(int value) {
          bitField0_ |= 0x00000002;
          seriesId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 series_id = 2;</code>
         */
        public Builder clearSeriesId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          seriesId_ = 0;
          onChanged();
          return this;
        }

        private int seriesNum_ ;
        /**
         * <code>optional uint32 series_num = 3;</code>
         */
        public boolean hasSeriesNum() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 series_num = 3;</code>
         */
        public int getSeriesNum() {
          return seriesNum_;
        }
        /**
         * <code>optional uint32 series_num = 3;</code>
         */
        public Builder setSeriesNum(int value) {
          bitField0_ |= 0x00000004;
          seriesNum_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 series_num = 3;</code>
         */
        public Builder clearSeriesNum() {
          bitField0_ = (bitField0_ & ~0x00000004);
          seriesNum_ = 0;
          onChanged();
          return this;
        }

        private int seriesType_ ;
        /**
         * <code>optional uint32 series_type = 4;</code>
         */
        public boolean hasSeriesType() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 series_type = 4;</code>
         */
        public int getSeriesType() {
          return seriesType_;
        }
        /**
         * <code>optional uint32 series_type = 4;</code>
         */
        public Builder setSeriesType(int value) {
          bitField0_ |= 0x00000008;
          seriesType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 series_type = 4;</code>
         */
        public Builder clearSeriesType() {
          bitField0_ = (bitField0_ & ~0x00000008);
          seriesType_ = 0;
          onChanged();
          return this;
        }

        private int leagueTier_ ;
        /**
         * <code>optional uint32 league_tier = 5;</code>
         */
        public boolean hasLeagueTier() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 league_tier = 5;</code>
         */
        public int getLeagueTier() {
          return leagueTier_;
        }
        /**
         * <code>optional uint32 league_tier = 5;</code>
         */
        public Builder setLeagueTier(int value) {
          bitField0_ |= 0x00000010;
          leagueTier_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 league_tier = 5;</code>
         */
        public Builder clearLeagueTier() {
          bitField0_ = (bitField0_ & ~0x00000010);
          leagueTier_ = 0;
          onChanged();
          return this;
        }

        private int leagueId_ ;
        /**
         * <code>optional uint32 league_id = 6;</code>
         */
        public boolean hasLeagueId() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 league_id = 6;</code>
         */
        public int getLeagueId() {
          return leagueId_;
        }
        /**
         * <code>optional uint32 league_id = 6;</code>
         */
        public Builder setLeagueId(int value) {
          bitField0_ |= 0x00000020;
          leagueId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 league_id = 6;</code>
         */
        public Builder clearLeagueId() {
          bitField0_ = (bitField0_ & ~0x00000020);
          leagueId_ = 0;
          onChanged();
          return this;
        }

        private int opposingTeamId_ ;
        /**
         * <code>optional uint32 opposing_team_id = 7;</code>
         */
        public boolean hasOpposingTeamId() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 opposing_team_id = 7;</code>
         */
        public int getOpposingTeamId() {
          return opposingTeamId_;
        }
        /**
         * <code>optional uint32 opposing_team_id = 7;</code>
         */
        public Builder setOpposingTeamId(int value) {
          bitField0_ |= 0x00000040;
          opposingTeamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 opposing_team_id = 7;</code>
         */
        public Builder clearOpposingTeamId() {
          bitField0_ = (bitField0_ & ~0x00000040);
          opposingTeamId_ = 0;
          onChanged();
          return this;
        }

        private long opposingTeamLogo_ ;
        /**
         * <code>optional uint64 opposing_team_logo = 8;</code>
         */
        public boolean hasOpposingTeamLogo() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint64 opposing_team_logo = 8;</code>
         */
        public long getOpposingTeamLogo() {
          return opposingTeamLogo_;
        }
        /**
         * <code>optional uint64 opposing_team_logo = 8;</code>
         */
        public Builder setOpposingTeamLogo(long value) {
          bitField0_ |= 0x00000080;
          opposingTeamLogo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 opposing_team_logo = 8;</code>
         */
        public Builder clearOpposingTeamLogo() {
          bitField0_ = (bitField0_ & ~0x00000080);
          opposingTeamLogo_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object opposingTeamName_ = "";
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public boolean hasOpposingTeamName() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public java.lang.String getOpposingTeamName() {
          java.lang.Object ref = opposingTeamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              opposingTeamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public com.google.protobuf.ByteString
            getOpposingTeamNameBytes() {
          java.lang.Object ref = opposingTeamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            opposingTeamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public Builder setOpposingTeamName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          opposingTeamName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public Builder clearOpposingTeamName() {
          bitField0_ = (bitField0_ & ~0x00000100);
          opposingTeamName_ = getDefaultInstance().getOpposingTeamName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string opposing_team_name = 9;</code>
         */
        public Builder setOpposingTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          opposingTeamName_ = value;
          onChanged();
          return this;
        }

        private int ownedBy_ ;
        /**
         * <code>optional uint32 owned_by = 11;</code>
         */
        public boolean hasOwnedBy() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional uint32 owned_by = 11;</code>
         */
        public int getOwnedBy() {
          return ownedBy_;
        }
        /**
         * <code>optional uint32 owned_by = 11;</code>
         */
        public Builder setOwnedBy(int value) {
          bitField0_ |= 0x00000200;
          ownedBy_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 owned_by = 11;</code>
         */
        public Builder clearOwnedBy() {
          bitField0_ = (bitField0_ & ~0x00000200);
          ownedBy_ = 0;
          onChanged();
          return this;
        }

        private boolean benched_ ;
        /**
         * <code>optional bool benched = 12;</code>
         */
        public boolean hasBenched() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional bool benched = 12;</code>
         */
        public boolean getBenched() {
          return benched_;
        }
        /**
         * <code>optional bool benched = 12;</code>
         */
        public Builder setBenched(boolean value) {
          bitField0_ |= 0x00000400;
          benched_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool benched = 12;</code>
         */
        public Builder clearBenched() {
          bitField0_ = (bitField0_ & ~0x00000400);
          benched_ = false;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData)
      private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData();
      }

      public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<PlayerMatchData>
          PARSER = new com.google.protobuf.AbstractParser<PlayerMatchData>() {
        public PlayerMatchData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new PlayerMatchData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PlayerMatchData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PlayerMatchData> getParserForType() {
        return PARSER;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult getResult() {
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult.SUCCESS : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> data_;
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> getDataList() {
      return data_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(2, data_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, data_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse other = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && getDataList()
          .equals(other.getDataList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAFantasyPlayerScoreDetailsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAFantasyPlayerScoreDetailsResponse)
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.class, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          dataBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse build() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse buildPartial() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse result = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse other) {
        if (other == MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult getResult() {
        MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAFantasyPlayerScoreDetailsResponse.EResult result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData>(data_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder> dataBuilder_;

      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder setData(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder setData(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder addData(MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder addData(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder addData(
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder addData(
          int index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData data = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData.Builder, MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchDataOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAFantasyPlayerScoreDetailsResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAFantasyPlayerScoreDetailsResponse)
    private static final MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse();
    }

    public static MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreDetailsResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAFantasyPlayerScoreDetailsResponse>() {
      public CMsgDOTAFantasyPlayerScoreDetailsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAFantasyPlayerScoreDetailsResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreDetailsResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAFantasyPlayerScoreDetailsResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAFantasyPlayerScoreDetailsResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAPassportVoteTeamGuessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportVoteTeamGuess)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    boolean hasLeagueId();
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    int getLeagueId();

    /**
     * <code>optional uint32 winner_id = 2;</code>
     */
    boolean hasWinnerId();
    /**
     * <code>optional uint32 winner_id = 2;</code>
     */
    int getWinnerId();

    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     */
    boolean hasRunnerupId();
    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     */
    int getRunnerupId();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportVoteTeamGuess}
   */
  public  static final class CMsgDOTAPassportVoteTeamGuess extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportVoteTeamGuess)
      CMsgDOTAPassportVoteTeamGuessOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAPassportVoteTeamGuess.newBuilder() to construct.
    private CMsgDOTAPassportVoteTeamGuess(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPassportVoteTeamGuess() {
      leagueId_ = 0;
      winnerId_ = 0;
      runnerupId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAPassportVoteTeamGuess(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              leagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              winnerId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              runnerupId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.class, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder.class);
    }

    private int bitField0_;
    public static final int LEAGUE_ID_FIELD_NUMBER = 1;
    private int leagueId_;
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    public boolean hasLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    public int getLeagueId() {
      return leagueId_;
    }

    public static final int WINNER_ID_FIELD_NUMBER = 2;
    private int winnerId_;
    /**
     * <code>optional uint32 winner_id = 2;</code>
     */
    public boolean hasWinnerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 winner_id = 2;</code>
     */
    public int getWinnerId() {
      return winnerId_;
    }

    public static final int RUNNERUP_ID_FIELD_NUMBER = 3;
    private int runnerupId_;
    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     */
    public boolean hasRunnerupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 runnerup_id = 3;</code>
     */
    public int getRunnerupId() {
      return runnerupId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, winnerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, runnerupId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, winnerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, runnerupId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess other = (MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess) obj;

      boolean result = true;
      result = result && (hasLeagueId() == other.hasLeagueId());
      if (hasLeagueId()) {
        result = result && (getLeagueId()
            == other.getLeagueId());
      }
      result = result && (hasWinnerId() == other.hasWinnerId());
      if (hasWinnerId()) {
        result = result && (getWinnerId()
            == other.getWinnerId());
      }
      result = result && (hasRunnerupId() == other.hasRunnerupId());
      if (hasRunnerupId()) {
        result = result && (getRunnerupId()
            == other.getRunnerupId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLeagueId()) {
        hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLeagueId();
      }
      if (hasWinnerId()) {
        hash = (37 * hash) + WINNER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getWinnerId();
      }
      if (hasRunnerupId()) {
        hash = (37 * hash) + RUNNERUP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRunnerupId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportVoteTeamGuess}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportVoteTeamGuess)
        MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.class, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        leagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        winnerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        runnerupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess build() {
        MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess buildPartial() {
        MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess result = new MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.leagueId_ = leagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.winnerId_ = winnerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.runnerupId_ = runnerupId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess other) {
        if (other == MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance()) return this;
        if (other.hasLeagueId()) {
          setLeagueId(other.getLeagueId());
        }
        if (other.hasWinnerId()) {
          setWinnerId(other.getWinnerId());
        }
        if (other.hasRunnerupId()) {
          setRunnerupId(other.getRunnerupId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int leagueId_ ;
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public int getLeagueId() {
        return leagueId_;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public Builder setLeagueId(int value) {
        bitField0_ |= 0x00000001;
        leagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public Builder clearLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueId_ = 0;
        onChanged();
        return this;
      }

      private int winnerId_ ;
      /**
       * <code>optional uint32 winner_id = 2;</code>
       */
      public boolean hasWinnerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 winner_id = 2;</code>
       */
      public int getWinnerId() {
        return winnerId_;
      }
      /**
       * <code>optional uint32 winner_id = 2;</code>
       */
      public Builder setWinnerId(int value) {
        bitField0_ |= 0x00000002;
        winnerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 winner_id = 2;</code>
       */
      public Builder clearWinnerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        winnerId_ = 0;
        onChanged();
        return this;
      }

      private int runnerupId_ ;
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       */
      public boolean hasRunnerupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       */
      public int getRunnerupId() {
        return runnerupId_;
      }
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       */
      public Builder setRunnerupId(int value) {
        bitField0_ |= 0x00000004;
        runnerupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 runnerup_id = 3;</code>
       */
      public Builder clearRunnerupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        runnerupId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportVoteTeamGuess)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportVoteTeamGuess)
    private static final MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess();
    }

    public static MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAPassportVoteTeamGuess>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPassportVoteTeamGuess>() {
      public CMsgDOTAPassportVoteTeamGuess parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAPassportVoteTeamGuess(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPassportVoteTeamGuess> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportVoteTeamGuess> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAPassportVoteGenericSelectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportVoteGenericSelection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     */
    boolean hasSelectionIndex();
    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     */
    MsgGCClientFantasy.DOTA_2013PassportSelectionIndices getSelectionIndex();

    /**
     * <code>optional uint32 selection = 2;</code>
     */
    boolean hasSelection();
    /**
     * <code>optional uint32 selection = 2;</code>
     */
    int getSelection();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportVoteGenericSelection}
   */
  public  static final class CMsgDOTAPassportVoteGenericSelection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportVoteGenericSelection)
      CMsgDOTAPassportVoteGenericSelectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAPassportVoteGenericSelection.newBuilder() to construct.
    private CMsgDOTAPassportVoteGenericSelection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPassportVoteGenericSelection() {
      selectionIndex_ = 0;
      selection_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAPassportVoteGenericSelection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.DOTA_2013PassportSelectionIndices value = MsgGCClientFantasy.DOTA_2013PassportSelectionIndices.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                selectionIndex_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              selection_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.class, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder.class);
    }

    private int bitField0_;
    public static final int SELECTION_INDEX_FIELD_NUMBER = 1;
    private int selectionIndex_;
    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     */
    public boolean hasSelectionIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
     */
    public MsgGCClientFantasy.DOTA_2013PassportSelectionIndices getSelectionIndex() {
      MsgGCClientFantasy.DOTA_2013PassportSelectionIndices result = MsgGCClientFantasy.DOTA_2013PassportSelectionIndices.valueOf(selectionIndex_);
      return result == null ? MsgGCClientFantasy.DOTA_2013PassportSelectionIndices.PP13_SEL_ALLSTAR_PLAYER_0 : result;
    }

    public static final int SELECTION_FIELD_NUMBER = 2;
    private int selection_;
    /**
     * <code>optional uint32 selection = 2;</code>
     */
    public boolean hasSelection() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 selection = 2;</code>
     */
    public int getSelection() {
      return selection_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, selectionIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, selection_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, selectionIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, selection_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection other = (MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection) obj;

      boolean result = true;
      result = result && (hasSelectionIndex() == other.hasSelectionIndex());
      if (hasSelectionIndex()) {
        result = result && selectionIndex_ == other.selectionIndex_;
      }
      result = result && (hasSelection() == other.hasSelection());
      if (hasSelection()) {
        result = result && (getSelection()
            == other.getSelection());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSelectionIndex()) {
        hash = (37 * hash) + SELECTION_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + selectionIndex_;
      }
      if (hasSelection()) {
        hash = (37 * hash) + SELECTION_FIELD_NUMBER;
        hash = (53 * hash) + getSelection();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportVoteGenericSelection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportVoteGenericSelection)
        MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.class, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        selectionIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        selection_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection build() {
        MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection buildPartial() {
        MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection result = new MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.selectionIndex_ = selectionIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.selection_ = selection_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection other) {
        if (other == MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance()) return this;
        if (other.hasSelectionIndex()) {
          setSelectionIndex(other.getSelectionIndex());
        }
        if (other.hasSelection()) {
          setSelection(other.getSelection());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int selectionIndex_ = 0;
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       */
      public boolean hasSelectionIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       */
      public MsgGCClientFantasy.DOTA_2013PassportSelectionIndices getSelectionIndex() {
        MsgGCClientFantasy.DOTA_2013PassportSelectionIndices result = MsgGCClientFantasy.DOTA_2013PassportSelectionIndices.valueOf(selectionIndex_);
        return result == null ? MsgGCClientFantasy.DOTA_2013PassportSelectionIndices.PP13_SEL_ALLSTAR_PLAYER_0 : result;
      }
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       */
      public Builder setSelectionIndex(MsgGCClientFantasy.DOTA_2013PassportSelectionIndices value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        selectionIndex_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_2013PassportSelectionIndices selection_index = 1 [default = PP13_SEL_ALLSTAR_PLAYER_0];</code>
       */
      public Builder clearSelectionIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        selectionIndex_ = 0;
        onChanged();
        return this;
      }

      private int selection_ ;
      /**
       * <code>optional uint32 selection = 2;</code>
       */
      public boolean hasSelection() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 selection = 2;</code>
       */
      public int getSelection() {
        return selection_;
      }
      /**
       * <code>optional uint32 selection = 2;</code>
       */
      public Builder setSelection(int value) {
        bitField0_ |= 0x00000002;
        selection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 selection = 2;</code>
       */
      public Builder clearSelection() {
        bitField0_ = (bitField0_ & ~0x00000002);
        selection_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportVoteGenericSelection)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportVoteGenericSelection)
    private static final MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection();
    }

    public static MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAPassportVoteGenericSelection>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPassportVoteGenericSelection>() {
      public CMsgDOTAPassportVoteGenericSelection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAPassportVoteGenericSelection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPassportVoteGenericSelection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportVoteGenericSelection> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAPassportStampedPlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportStampedPlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 steam_id = 1;</code>
     */
    boolean hasSteamId();
    /**
     * <code>optional uint64 steam_id = 1;</code>
     */
    long getSteamId();

    /**
     * <code>optional uint32 stamp_level = 2;</code>
     */
    boolean hasStampLevel();
    /**
     * <code>optional uint32 stamp_level = 2;</code>
     */
    int getStampLevel();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportStampedPlayer}
   */
  public  static final class CMsgDOTAPassportStampedPlayer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportStampedPlayer)
      CMsgDOTAPassportStampedPlayerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAPassportStampedPlayer.newBuilder() to construct.
    private CMsgDOTAPassportStampedPlayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPassportStampedPlayer() {
      steamId_ = 0L;
      stampLevel_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAPassportStampedPlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              steamId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              stampLevel_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.class, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder.class);
    }

    private int bitField0_;
    public static final int STEAM_ID_FIELD_NUMBER = 1;
    private long steamId_;
    /**
     * <code>optional uint64 steam_id = 1;</code>
     */
    public boolean hasSteamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 steam_id = 1;</code>
     */
    public long getSteamId() {
      return steamId_;
    }

    public static final int STAMP_LEVEL_FIELD_NUMBER = 2;
    private int stampLevel_;
    /**
     * <code>optional uint32 stamp_level = 2;</code>
     */
    public boolean hasStampLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 stamp_level = 2;</code>
     */
    public int getStampLevel() {
      return stampLevel_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, steamId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, stampLevel_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, steamId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, stampLevel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer other = (MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer) obj;

      boolean result = true;
      result = result && (hasSteamId() == other.hasSteamId());
      if (hasSteamId()) {
        result = result && (getSteamId()
            == other.getSteamId());
      }
      result = result && (hasStampLevel() == other.hasStampLevel());
      if (hasStampLevel()) {
        result = result && (getStampLevel()
            == other.getStampLevel());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSteamId()) {
        hash = (37 * hash) + STEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamId());
      }
      if (hasStampLevel()) {
        hash = (37 * hash) + STAMP_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getStampLevel();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportStampedPlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportStampedPlayer)
        MsgGCClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.class, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        steamId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        stampLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer build() {
        MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer buildPartial() {
        MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer result = new MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.steamId_ = steamId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.stampLevel_ = stampLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer other) {
        if (other == MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasStampLevel()) {
          setStampLevel(other.getStampLevel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long steamId_ ;
      /**
       * <code>optional uint64 steam_id = 1;</code>
       */
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 steam_id = 1;</code>
       */
      public long getSteamId() {
        return steamId_;
      }
      /**
       * <code>optional uint64 steam_id = 1;</code>
       */
      public Builder setSteamId(long value) {
        bitField0_ |= 0x00000001;
        steamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 steam_id = 1;</code>
       */
      public Builder clearSteamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamId_ = 0L;
        onChanged();
        return this;
      }

      private int stampLevel_ ;
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       */
      public boolean hasStampLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       */
      public int getStampLevel() {
        return stampLevel_;
      }
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       */
      public Builder setStampLevel(int value) {
        bitField0_ |= 0x00000002;
        stampLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stamp_level = 2;</code>
       */
      public Builder clearStampLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stampLevel_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportStampedPlayer)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportStampedPlayer)
    private static final MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer();
    }

    public static MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAPassportStampedPlayer>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPassportStampedPlayer>() {
      public CMsgDOTAPassportStampedPlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAPassportStampedPlayer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPassportStampedPlayer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportStampedPlayer> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAPassportPlayerCardChallengeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportPlayerCardChallenge)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 challenge_id = 1;</code>
     */
    boolean hasChallengeId();
    /**
     * <code>optional uint32 challenge_id = 1;</code>
     */
    int getChallengeId();
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportPlayerCardChallenge}
   */
  public  static final class CMsgDOTAPassportPlayerCardChallenge extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportPlayerCardChallenge)
      CMsgDOTAPassportPlayerCardChallengeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAPassportPlayerCardChallenge.newBuilder() to construct.
    private CMsgDOTAPassportPlayerCardChallenge(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPassportPlayerCardChallenge() {
      challengeId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAPassportPlayerCardChallenge(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              challengeId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.class, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder.class);
    }

    private int bitField0_;
    public static final int CHALLENGE_ID_FIELD_NUMBER = 1;
    private int challengeId_;
    /**
     * <code>optional uint32 challenge_id = 1;</code>
     */
    public boolean hasChallengeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 challenge_id = 1;</code>
     */
    public int getChallengeId() {
      return challengeId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, challengeId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, challengeId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge other = (MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge) obj;

      boolean result = true;
      result = result && (hasChallengeId() == other.hasChallengeId());
      if (hasChallengeId()) {
        result = result && (getChallengeId()
            == other.getChallengeId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChallengeId()) {
        hash = (37 * hash) + CHALLENGE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChallengeId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportPlayerCardChallenge}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportPlayerCardChallenge)
        MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.class, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        challengeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge build() {
        MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge buildPartial() {
        MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge result = new MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.challengeId_ = challengeId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge other) {
        if (other == MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance()) return this;
        if (other.hasChallengeId()) {
          setChallengeId(other.getChallengeId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int challengeId_ ;
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       */
      public boolean hasChallengeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       */
      public int getChallengeId() {
        return challengeId_;
      }
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       */
      public Builder setChallengeId(int value) {
        bitField0_ |= 0x00000001;
        challengeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 challenge_id = 1;</code>
       */
      public Builder clearChallengeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        challengeId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportPlayerCardChallenge)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportPlayerCardChallenge)
    private static final MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge();
    }

    public static MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAPassportPlayerCardChallenge>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPassportPlayerCardChallenge>() {
      public CMsgDOTAPassportPlayerCardChallenge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAPassportPlayerCardChallenge(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPassportPlayerCardChallenge> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportPlayerCardChallenge> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAPassportVoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAPassportVote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess> 
        getTeamVotesList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess getTeamVotes(int index);
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    int getTeamVotesCount();
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
        getTeamVotesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder getTeamVotesOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection> 
        getGenericSelectionsList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection getGenericSelections(int index);
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    int getGenericSelectionsCount();
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
        getGenericSelectionsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder getGenericSelectionsOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer> 
        getStampedPlayersList();
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer getStampedPlayers(int index);
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    int getStampedPlayersCount();
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
        getStampedPlayersOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    MsgGCClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder getStampedPlayersOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    java.util.List<MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge> 
        getPlayerCardChallengesList();
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge getPlayerCardChallenges(int index);
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    int getPlayerCardChallengesCount();
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
        getPlayerCardChallengesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder getPlayerCardChallengesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAPassportVote}
   */
  public  static final class CMsgDOTAPassportVote extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAPassportVote)
      CMsgDOTAPassportVoteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAPassportVote.newBuilder() to construct.
    private CMsgDOTAPassportVote(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAPassportVote() {
      teamVotes_ = java.util.Collections.emptyList();
      genericSelections_ = java.util.Collections.emptyList();
      stampedPlayers_ = java.util.Collections.emptyList();
      playerCardChallenges_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAPassportVote(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                teamVotes_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess>();
                mutable_bitField0_ |= 0x00000001;
              }
              teamVotes_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                genericSelections_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection>();
                mutable_bitField0_ |= 0x00000002;
              }
              genericSelections_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                stampedPlayers_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer>();
                mutable_bitField0_ |= 0x00000004;
              }
              stampedPlayers_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                playerCardChallenges_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge>();
                mutable_bitField0_ |= 0x00000008;
              }
              playerCardChallenges_.add(
                  input.readMessage(MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          teamVotes_ = java.util.Collections.unmodifiableList(teamVotes_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          genericSelections_ = java.util.Collections.unmodifiableList(genericSelections_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          stampedPlayers_ = java.util.Collections.unmodifiableList(stampedPlayers_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          playerCardChallenges_ = java.util.Collections.unmodifiableList(playerCardChallenges_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVote_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgDOTAPassportVote.class, MsgGCClientFantasy.CMsgDOTAPassportVote.Builder.class);
    }

    public static final int TEAM_VOTES_FIELD_NUMBER = 1;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess> teamVotes_;
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess> getTeamVotesList() {
      return teamVotes_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
        getTeamVotesOrBuilderList() {
      return teamVotes_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    public int getTeamVotesCount() {
      return teamVotes_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess getTeamVotes(int index) {
      return teamVotes_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder getTeamVotesOrBuilder(
        int index) {
      return teamVotes_.get(index);
    }

    public static final int GENERIC_SELECTIONS_FIELD_NUMBER = 2;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection> genericSelections_;
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection> getGenericSelectionsList() {
      return genericSelections_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
        getGenericSelectionsOrBuilderList() {
      return genericSelections_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    public int getGenericSelectionsCount() {
      return genericSelections_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection getGenericSelections(int index) {
      return genericSelections_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder getGenericSelectionsOrBuilder(
        int index) {
      return genericSelections_.get(index);
    }

    public static final int STAMPED_PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer> stampedPlayers_;
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer> getStampedPlayersList() {
      return stampedPlayers_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
        getStampedPlayersOrBuilderList() {
      return stampedPlayers_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    public int getStampedPlayersCount() {
      return stampedPlayers_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer getStampedPlayers(int index) {
      return stampedPlayers_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder getStampedPlayersOrBuilder(
        int index) {
      return stampedPlayers_.get(index);
    }

    public static final int PLAYER_CARD_CHALLENGES_FIELD_NUMBER = 4;
    private java.util.List<MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge> playerCardChallenges_;
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge> getPlayerCardChallengesList() {
      return playerCardChallenges_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
        getPlayerCardChallengesOrBuilderList() {
      return playerCardChallenges_;
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    public int getPlayerCardChallengesCount() {
      return playerCardChallenges_.size();
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge getPlayerCardChallenges(int index) {
      return playerCardChallenges_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
     */
    public MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder getPlayerCardChallengesOrBuilder(
        int index) {
      return playerCardChallenges_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < teamVotes_.size(); i++) {
        output.writeMessage(1, teamVotes_.get(i));
      }
      for (int i = 0; i < genericSelections_.size(); i++) {
        output.writeMessage(2, genericSelections_.get(i));
      }
      for (int i = 0; i < stampedPlayers_.size(); i++) {
        output.writeMessage(3, stampedPlayers_.get(i));
      }
      for (int i = 0; i < playerCardChallenges_.size(); i++) {
        output.writeMessage(4, playerCardChallenges_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < teamVotes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, teamVotes_.get(i));
      }
      for (int i = 0; i < genericSelections_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, genericSelections_.get(i));
      }
      for (int i = 0; i < stampedPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, stampedPlayers_.get(i));
      }
      for (int i = 0; i < playerCardChallenges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, playerCardChallenges_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgDOTAPassportVote)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgDOTAPassportVote other = (MsgGCClientFantasy.CMsgDOTAPassportVote) obj;

      boolean result = true;
      result = result && getTeamVotesList()
          .equals(other.getTeamVotesList());
      result = result && getGenericSelectionsList()
          .equals(other.getGenericSelectionsList());
      result = result && getStampedPlayersList()
          .equals(other.getStampedPlayersList());
      result = result && getPlayerCardChallengesList()
          .equals(other.getPlayerCardChallengesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTeamVotesCount() > 0) {
        hash = (37 * hash) + TEAM_VOTES_FIELD_NUMBER;
        hash = (53 * hash) + getTeamVotesList().hashCode();
      }
      if (getGenericSelectionsCount() > 0) {
        hash = (37 * hash) + GENERIC_SELECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getGenericSelectionsList().hashCode();
      }
      if (getStampedPlayersCount() > 0) {
        hash = (37 * hash) + STAMPED_PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getStampedPlayersList().hashCode();
      }
      if (getPlayerCardChallengesCount() > 0) {
        hash = (37 * hash) + PLAYER_CARD_CHALLENGES_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerCardChallengesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgDOTAPassportVote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgDOTAPassportVote prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPassportVote}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAPassportVote)
        MsgGCClientFantasy.CMsgDOTAPassportVoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVote_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgDOTAPassportVote.class, MsgGCClientFantasy.CMsgDOTAPassportVote.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgDOTAPassportVote.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTeamVotesFieldBuilder();
          getGenericSelectionsFieldBuilder();
          getStampedPlayersFieldBuilder();
          getPlayerCardChallengesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (teamVotesBuilder_ == null) {
          teamVotes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          teamVotesBuilder_.clear();
        }
        if (genericSelectionsBuilder_ == null) {
          genericSelections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          genericSelectionsBuilder_.clear();
        }
        if (stampedPlayersBuilder_ == null) {
          stampedPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          stampedPlayersBuilder_.clear();
        }
        if (playerCardChallengesBuilder_ == null) {
          playerCardChallenges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          playerCardChallengesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgDOTAPassportVote_descriptor;
      }

      public MsgGCClientFantasy.CMsgDOTAPassportVote getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgDOTAPassportVote.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgDOTAPassportVote build() {
        MsgGCClientFantasy.CMsgDOTAPassportVote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgDOTAPassportVote buildPartial() {
        MsgGCClientFantasy.CMsgDOTAPassportVote result = new MsgGCClientFantasy.CMsgDOTAPassportVote(this);
        int from_bitField0_ = bitField0_;
        if (teamVotesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            teamVotes_ = java.util.Collections.unmodifiableList(teamVotes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.teamVotes_ = teamVotes_;
        } else {
          result.teamVotes_ = teamVotesBuilder_.build();
        }
        if (genericSelectionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            genericSelections_ = java.util.Collections.unmodifiableList(genericSelections_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.genericSelections_ = genericSelections_;
        } else {
          result.genericSelections_ = genericSelectionsBuilder_.build();
        }
        if (stampedPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            stampedPlayers_ = java.util.Collections.unmodifiableList(stampedPlayers_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.stampedPlayers_ = stampedPlayers_;
        } else {
          result.stampedPlayers_ = stampedPlayersBuilder_.build();
        }
        if (playerCardChallengesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            playerCardChallenges_ = java.util.Collections.unmodifiableList(playerCardChallenges_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.playerCardChallenges_ = playerCardChallenges_;
        } else {
          result.playerCardChallenges_ = playerCardChallengesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgDOTAPassportVote) {
          return mergeFrom((MsgGCClientFantasy.CMsgDOTAPassportVote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgDOTAPassportVote other) {
        if (other == MsgGCClientFantasy.CMsgDOTAPassportVote.getDefaultInstance()) return this;
        if (teamVotesBuilder_ == null) {
          if (!other.teamVotes_.isEmpty()) {
            if (teamVotes_.isEmpty()) {
              teamVotes_ = other.teamVotes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTeamVotesIsMutable();
              teamVotes_.addAll(other.teamVotes_);
            }
            onChanged();
          }
        } else {
          if (!other.teamVotes_.isEmpty()) {
            if (teamVotesBuilder_.isEmpty()) {
              teamVotesBuilder_.dispose();
              teamVotesBuilder_ = null;
              teamVotes_ = other.teamVotes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              teamVotesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTeamVotesFieldBuilder() : null;
            } else {
              teamVotesBuilder_.addAllMessages(other.teamVotes_);
            }
          }
        }
        if (genericSelectionsBuilder_ == null) {
          if (!other.genericSelections_.isEmpty()) {
            if (genericSelections_.isEmpty()) {
              genericSelections_ = other.genericSelections_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureGenericSelectionsIsMutable();
              genericSelections_.addAll(other.genericSelections_);
            }
            onChanged();
          }
        } else {
          if (!other.genericSelections_.isEmpty()) {
            if (genericSelectionsBuilder_.isEmpty()) {
              genericSelectionsBuilder_.dispose();
              genericSelectionsBuilder_ = null;
              genericSelections_ = other.genericSelections_;
              bitField0_ = (bitField0_ & ~0x00000002);
              genericSelectionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGenericSelectionsFieldBuilder() : null;
            } else {
              genericSelectionsBuilder_.addAllMessages(other.genericSelections_);
            }
          }
        }
        if (stampedPlayersBuilder_ == null) {
          if (!other.stampedPlayers_.isEmpty()) {
            if (stampedPlayers_.isEmpty()) {
              stampedPlayers_ = other.stampedPlayers_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureStampedPlayersIsMutable();
              stampedPlayers_.addAll(other.stampedPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.stampedPlayers_.isEmpty()) {
            if (stampedPlayersBuilder_.isEmpty()) {
              stampedPlayersBuilder_.dispose();
              stampedPlayersBuilder_ = null;
              stampedPlayers_ = other.stampedPlayers_;
              bitField0_ = (bitField0_ & ~0x00000004);
              stampedPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStampedPlayersFieldBuilder() : null;
            } else {
              stampedPlayersBuilder_.addAllMessages(other.stampedPlayers_);
            }
          }
        }
        if (playerCardChallengesBuilder_ == null) {
          if (!other.playerCardChallenges_.isEmpty()) {
            if (playerCardChallenges_.isEmpty()) {
              playerCardChallenges_ = other.playerCardChallenges_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayerCardChallengesIsMutable();
              playerCardChallenges_.addAll(other.playerCardChallenges_);
            }
            onChanged();
          }
        } else {
          if (!other.playerCardChallenges_.isEmpty()) {
            if (playerCardChallengesBuilder_.isEmpty()) {
              playerCardChallengesBuilder_.dispose();
              playerCardChallengesBuilder_ = null;
              playerCardChallenges_ = other.playerCardChallenges_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playerCardChallengesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlayerCardChallengesFieldBuilder() : null;
            } else {
              playerCardChallengesBuilder_.addAllMessages(other.playerCardChallenges_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgDOTAPassportVote parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgDOTAPassportVote) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess> teamVotes_ =
        java.util.Collections.emptyList();
      private void ensureTeamVotesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          teamVotes_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess>(teamVotes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> teamVotesBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess> getTeamVotesList() {
        if (teamVotesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teamVotes_);
        } else {
          return teamVotesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public int getTeamVotesCount() {
        if (teamVotesBuilder_ == null) {
          return teamVotes_.size();
        } else {
          return teamVotesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess getTeamVotes(int index) {
        if (teamVotesBuilder_ == null) {
          return teamVotes_.get(index);
        } else {
          return teamVotesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder setTeamVotes(
          int index, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess value) {
        if (teamVotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamVotesIsMutable();
          teamVotes_.set(index, value);
          onChanged();
        } else {
          teamVotesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder setTeamVotes(
          int index, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder builderForValue) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamVotesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess value) {
        if (teamVotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamVotesIsMutable();
          teamVotes_.add(value);
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(
          int index, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess value) {
        if (teamVotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamVotesIsMutable();
          teamVotes_.add(index, value);
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(
          MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder builderForValue) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.add(builderForValue.build());
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addTeamVotes(
          int index, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder builderForValue) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamVotesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder addAllTeamVotes(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess> values) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teamVotes_);
          onChanged();
        } else {
          teamVotesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder clearTeamVotes() {
        if (teamVotesBuilder_ == null) {
          teamVotes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          teamVotesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public Builder removeTeamVotes(int index) {
        if (teamVotesBuilder_ == null) {
          ensureTeamVotesIsMutable();
          teamVotes_.remove(index);
          onChanged();
        } else {
          teamVotesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder getTeamVotesBuilder(
          int index) {
        return getTeamVotesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder getTeamVotesOrBuilder(
          int index) {
        if (teamVotesBuilder_ == null) {
          return teamVotes_.get(index);  } else {
          return teamVotesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
           getTeamVotesOrBuilderList() {
        if (teamVotesBuilder_ != null) {
          return teamVotesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teamVotes_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder addTeamVotesBuilder() {
        return getTeamVotesFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder addTeamVotesBuilder(
          int index) {
        return getTeamVotesFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteTeamGuess team_votes = 1;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder> 
           getTeamVotesBuilderList() {
        return getTeamVotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder> 
          getTeamVotesFieldBuilder() {
        if (teamVotesBuilder_ == null) {
          teamVotesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuess.Builder, MsgGCClientFantasy.CMsgDOTAPassportVoteTeamGuessOrBuilder>(
                  teamVotes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          teamVotes_ = null;
        }
        return teamVotesBuilder_;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection> genericSelections_ =
        java.util.Collections.emptyList();
      private void ensureGenericSelectionsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          genericSelections_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection>(genericSelections_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> genericSelectionsBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection> getGenericSelectionsList() {
        if (genericSelectionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(genericSelections_);
        } else {
          return genericSelectionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public int getGenericSelectionsCount() {
        if (genericSelectionsBuilder_ == null) {
          return genericSelections_.size();
        } else {
          return genericSelectionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection getGenericSelections(int index) {
        if (genericSelectionsBuilder_ == null) {
          return genericSelections_.get(index);
        } else {
          return genericSelectionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder setGenericSelections(
          int index, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection value) {
        if (genericSelectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericSelectionsIsMutable();
          genericSelections_.set(index, value);
          onChanged();
        } else {
          genericSelectionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder setGenericSelections(
          int index, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder builderForValue) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.set(index, builderForValue.build());
          onChanged();
        } else {
          genericSelectionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection value) {
        if (genericSelectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(value);
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(
          int index, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection value) {
        if (genericSelectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(index, value);
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(
          MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder builderForValue) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(builderForValue.build());
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addGenericSelections(
          int index, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder builderForValue) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.add(index, builderForValue.build());
          onChanged();
        } else {
          genericSelectionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder addAllGenericSelections(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection> values) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, genericSelections_);
          onChanged();
        } else {
          genericSelectionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder clearGenericSelections() {
        if (genericSelectionsBuilder_ == null) {
          genericSelections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          genericSelectionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public Builder removeGenericSelections(int index) {
        if (genericSelectionsBuilder_ == null) {
          ensureGenericSelectionsIsMutable();
          genericSelections_.remove(index);
          onChanged();
        } else {
          genericSelectionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder getGenericSelectionsBuilder(
          int index) {
        return getGenericSelectionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder getGenericSelectionsOrBuilder(
          int index) {
        if (genericSelectionsBuilder_ == null) {
          return genericSelections_.get(index);  } else {
          return genericSelectionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
           getGenericSelectionsOrBuilderList() {
        if (genericSelectionsBuilder_ != null) {
          return genericSelectionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(genericSelections_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder addGenericSelectionsBuilder() {
        return getGenericSelectionsFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder addGenericSelectionsBuilder(
          int index) {
        return getGenericSelectionsFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportVoteGenericSelection generic_selections = 2;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder> 
           getGenericSelectionsBuilderList() {
        return getGenericSelectionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder> 
          getGenericSelectionsFieldBuilder() {
        if (genericSelectionsBuilder_ == null) {
          genericSelectionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelection.Builder, MsgGCClientFantasy.CMsgDOTAPassportVoteGenericSelectionOrBuilder>(
                  genericSelections_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          genericSelections_ = null;
        }
        return genericSelectionsBuilder_;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer> stampedPlayers_ =
        java.util.Collections.emptyList();
      private void ensureStampedPlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          stampedPlayers_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer>(stampedPlayers_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder> stampedPlayersBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer> getStampedPlayersList() {
        if (stampedPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stampedPlayers_);
        } else {
          return stampedPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public int getStampedPlayersCount() {
        if (stampedPlayersBuilder_ == null) {
          return stampedPlayers_.size();
        } else {
          return stampedPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer getStampedPlayers(int index) {
        if (stampedPlayersBuilder_ == null) {
          return stampedPlayers_.get(index);
        } else {
          return stampedPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder setStampedPlayers(
          int index, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer value) {
        if (stampedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStampedPlayersIsMutable();
          stampedPlayers_.set(index, value);
          onChanged();
        } else {
          stampedPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder setStampedPlayers(
          int index, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder builderForValue) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          stampedPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer value) {
        if (stampedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(value);
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(
          int index, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer value) {
        if (stampedPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(index, value);
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(
          MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder builderForValue) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addStampedPlayers(
          int index, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder builderForValue) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          stampedPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder addAllStampedPlayers(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer> values) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stampedPlayers_);
          onChanged();
        } else {
          stampedPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder clearStampedPlayers() {
        if (stampedPlayersBuilder_ == null) {
          stampedPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          stampedPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public Builder removeStampedPlayers(int index) {
        if (stampedPlayersBuilder_ == null) {
          ensureStampedPlayersIsMutable();
          stampedPlayers_.remove(index);
          onChanged();
        } else {
          stampedPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder getStampedPlayersBuilder(
          int index) {
        return getStampedPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder getStampedPlayersOrBuilder(
          int index) {
        if (stampedPlayersBuilder_ == null) {
          return stampedPlayers_.get(index);  } else {
          return stampedPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
           getStampedPlayersOrBuilderList() {
        if (stampedPlayersBuilder_ != null) {
          return stampedPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stampedPlayers_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder addStampedPlayersBuilder() {
        return getStampedPlayersFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder addStampedPlayersBuilder(
          int index) {
        return getStampedPlayersFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportStampedPlayer stamped_players = 3;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder> 
           getStampedPlayersBuilderList() {
        return getStampedPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder> 
          getStampedPlayersFieldBuilder() {
        if (stampedPlayersBuilder_ == null) {
          stampedPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayer.Builder, MsgGCClientFantasy.CMsgDOTAPassportStampedPlayerOrBuilder>(
                  stampedPlayers_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          stampedPlayers_ = null;
        }
        return stampedPlayersBuilder_;
      }

      private java.util.List<MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge> playerCardChallenges_ =
        java.util.Collections.emptyList();
      private void ensurePlayerCardChallengesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          playerCardChallenges_ = new java.util.ArrayList<MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge>(playerCardChallenges_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> playerCardChallengesBuilder_;

      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge> getPlayerCardChallengesList() {
        if (playerCardChallengesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerCardChallenges_);
        } else {
          return playerCardChallengesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public int getPlayerCardChallengesCount() {
        if (playerCardChallengesBuilder_ == null) {
          return playerCardChallenges_.size();
        } else {
          return playerCardChallengesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge getPlayerCardChallenges(int index) {
        if (playerCardChallengesBuilder_ == null) {
          return playerCardChallenges_.get(index);
        } else {
          return playerCardChallengesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder setPlayerCardChallenges(
          int index, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge value) {
        if (playerCardChallengesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.set(index, value);
          onChanged();
        } else {
          playerCardChallengesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder setPlayerCardChallenges(
          int index, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder builderForValue) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerCardChallengesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge value) {
        if (playerCardChallengesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(value);
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(
          int index, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge value) {
        if (playerCardChallengesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(index, value);
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(
          MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder builderForValue) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(builderForValue.build());
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addPlayerCardChallenges(
          int index, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder builderForValue) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerCardChallengesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder addAllPlayerCardChallenges(
          java.lang.Iterable<? extends MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge> values) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerCardChallenges_);
          onChanged();
        } else {
          playerCardChallengesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder clearPlayerCardChallenges() {
        if (playerCardChallengesBuilder_ == null) {
          playerCardChallenges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playerCardChallengesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public Builder removePlayerCardChallenges(int index) {
        if (playerCardChallengesBuilder_ == null) {
          ensurePlayerCardChallengesIsMutable();
          playerCardChallenges_.remove(index);
          onChanged();
        } else {
          playerCardChallengesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder getPlayerCardChallengesBuilder(
          int index) {
        return getPlayerCardChallengesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder getPlayerCardChallengesOrBuilder(
          int index) {
        if (playerCardChallengesBuilder_ == null) {
          return playerCardChallenges_.get(index);  } else {
          return playerCardChallengesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public java.util.List<? extends MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
           getPlayerCardChallengesOrBuilderList() {
        if (playerCardChallengesBuilder_ != null) {
          return playerCardChallengesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerCardChallenges_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder addPlayerCardChallengesBuilder() {
        return getPlayerCardChallengesFieldBuilder().addBuilder(
            MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder addPlayerCardChallengesBuilder(
          int index) {
        return getPlayerCardChallengesFieldBuilder().addBuilder(
            index, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAPassportPlayerCardChallenge player_card_challenges = 4;</code>
       */
      public java.util.List<MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder> 
           getPlayerCardChallengesBuilderList() {
        return getPlayerCardChallengesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder> 
          getPlayerCardChallengesFieldBuilder() {
        if (playerCardChallengesBuilder_ == null) {
          playerCardChallengesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallenge.Builder, MsgGCClientFantasy.CMsgDOTAPassportPlayerCardChallengeOrBuilder>(
                  playerCardChallenges_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          playerCardChallenges_ = null;
        }
        return playerCardChallengesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAPassportVote)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPassportVote)
    private static final MsgGCClientFantasy.CMsgDOTAPassportVote DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgDOTAPassportVote();
    }

    public static MsgGCClientFantasy.CMsgDOTAPassportVote getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAPassportVote>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAPassportVote>() {
      public CMsgDOTAPassportVote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAPassportVote(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAPassportVote> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPassportVote> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgDOTAPassportVote getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCGetPlayerCardRosterRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCGetPlayerCardRosterRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    boolean hasLeagueId();
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    int getLeagueId();

    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    int getTimestamp();
  }
  /**
   * Protobuf type {@code CMsgClientToGCGetPlayerCardRosterRequest}
   */
  public  static final class CMsgClientToGCGetPlayerCardRosterRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCGetPlayerCardRosterRequest)
      CMsgClientToGCGetPlayerCardRosterRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgClientToGCGetPlayerCardRosterRequest.newBuilder() to construct.
    private CMsgClientToGCGetPlayerCardRosterRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCGetPlayerCardRosterRequest() {
      leagueId_ = 0;
      timestamp_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgClientToGCGetPlayerCardRosterRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              leagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.class, MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.Builder.class);
    }

    private int bitField0_;
    public static final int LEAGUE_ID_FIELD_NUMBER = 1;
    private int leagueId_;
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    public boolean hasLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    public int getLeagueId() {
      return leagueId_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private int timestamp_;
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest other = (MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest) obj;

      boolean result = true;
      result = result && (hasLeagueId() == other.hasLeagueId());
      if (hasLeagueId()) {
        result = result && (getLeagueId()
            == other.getLeagueId());
      }
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLeagueId()) {
        hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLeagueId();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCGetPlayerCardRosterRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCGetPlayerCardRosterRequest)
        MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.class, MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        leagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest build() {
        MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest buildPartial() {
        MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest result = new MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.leagueId_ = leagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest other) {
        if (other == MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest.getDefaultInstance()) return this;
        if (other.hasLeagueId()) {
          setLeagueId(other.getLeagueId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int leagueId_ ;
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public int getLeagueId() {
        return leagueId_;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public Builder setLeagueId(int value) {
        bitField0_ |= 0x00000001;
        leagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public Builder clearLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueId_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgClientToGCGetPlayerCardRosterRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCGetPlayerCardRosterRequest)
    private static final MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest();
    }

    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCGetPlayerCardRosterRequest>() {
      public CMsgClientToGCGetPlayerCardRosterRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgClientToGCGetPlayerCardRosterRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCGetPlayerCardRosterResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCGetPlayerCardRosterResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result getResult();

    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     */
    java.util.List<java.lang.Long> getPlayerCardItemIdList();
    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     */
    int getPlayerCardItemIdCount();
    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     */
    long getPlayerCardItemId(int index);

    /**
     * <code>optional float score = 3;</code>
     */
    boolean hasScore();
    /**
     * <code>optional float score = 3;</code>
     */
    float getScore();

    /**
     * <code>optional bool finalized = 4;</code>
     */
    boolean hasFinalized();
    /**
     * <code>optional bool finalized = 4;</code>
     */
    boolean getFinalized();

    /**
     * <code>optional float percentile = 5;</code>
     */
    boolean hasPercentile();
    /**
     * <code>optional float percentile = 5;</code>
     */
    float getPercentile();
  }
  /**
   * Protobuf type {@code CMsgClientToGCGetPlayerCardRosterResponse}
   */
  public  static final class CMsgClientToGCGetPlayerCardRosterResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCGetPlayerCardRosterResponse)
      CMsgClientToGCGetPlayerCardRosterResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgClientToGCGetPlayerCardRosterResponse.newBuilder() to construct.
    private CMsgClientToGCGetPlayerCardRosterResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCGetPlayerCardRosterResponse() {
      result_ = 0;
      playerCardItemId_ = java.util.Collections.emptyList();
      score_ = 0F;
      finalized_ = false;
      percentile_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgClientToGCGetPlayerCardRosterResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result value = MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                playerCardItemId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              playerCardItemId_.add(input.readUInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                playerCardItemId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerCardItemId_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 29: {
              bitField0_ |= 0x00000002;
              score_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              finalized_ = input.readBool();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000008;
              percentile_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          playerCardItemId_ = java.util.Collections.unmodifiableList(playerCardItemId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.class, MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGCGetPlayerCardRosterResponse.Result}
     */
    public enum Result
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_INVALID_LEAGUE_ID = 2;</code>
       */
      ERROR_INVALID_LEAGUE_ID(2),
      /**
       * <code>ERROR_INVALID_TIMESTAMP = 3;</code>
       */
      ERROR_INVALID_TIMESTAMP(3),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_INVALID_LEAGUE_ID = 2;</code>
       */
      public static final int ERROR_INVALID_LEAGUE_ID_VALUE = 2;
      /**
       * <code>ERROR_INVALID_TIMESTAMP = 3;</code>
       */
      public static final int ERROR_INVALID_TIMESTAMP_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Result valueOf(int value) {
        return forNumber(value);
      }

      public static Result forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_INVALID_LEAGUE_ID;
          case 3: return ERROR_INVALID_TIMESTAMP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Result>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Result> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Result>() {
              public Result findValueByNumber(int number) {
                return Result.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final Result[] VALUES = values();

      public static Result valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Result(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGCGetPlayerCardRosterResponse.Result)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result getResult() {
      MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result result = MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result.SUCCESS : result;
    }

    public static final int PLAYER_CARD_ITEM_ID_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> playerCardItemId_;
    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getPlayerCardItemIdList() {
      return playerCardItemId_;
    }
    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     */
    public int getPlayerCardItemIdCount() {
      return playerCardItemId_.size();
    }
    /**
     * <code>repeated uint64 player_card_item_id = 2;</code>
     */
    public long getPlayerCardItemId(int index) {
      return playerCardItemId_.get(index);
    }

    public static final int SCORE_FIELD_NUMBER = 3;
    private float score_;
    /**
     * <code>optional float score = 3;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float score = 3;</code>
     */
    public float getScore() {
      return score_;
    }

    public static final int FINALIZED_FIELD_NUMBER = 4;
    private boolean finalized_;
    /**
     * <code>optional bool finalized = 4;</code>
     */
    public boolean hasFinalized() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool finalized = 4;</code>
     */
    public boolean getFinalized() {
      return finalized_;
    }

    public static final int PERCENTILE_FIELD_NUMBER = 5;
    private float percentile_;
    /**
     * <code>optional float percentile = 5;</code>
     */
    public boolean hasPercentile() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float percentile = 5;</code>
     */
    public float getPercentile() {
      return percentile_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      for (int i = 0; i < playerCardItemId_.size(); i++) {
        output.writeUInt64(2, playerCardItemId_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(3, score_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, finalized_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(5, percentile_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerCardItemId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(playerCardItemId_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerCardItemIdList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, score_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, finalized_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, percentile_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse other = (MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && getPlayerCardItemIdList()
          .equals(other.getPlayerCardItemIdList());
      result = result && (hasScore() == other.hasScore());
      if (hasScore()) {
        result = result && (
            java.lang.Float.floatToIntBits(getScore())
            == java.lang.Float.floatToIntBits(
                other.getScore()));
      }
      result = result && (hasFinalized() == other.hasFinalized());
      if (hasFinalized()) {
        result = result && (getFinalized()
            == other.getFinalized());
      }
      result = result && (hasPercentile() == other.hasPercentile());
      if (hasPercentile()) {
        result = result && (
            java.lang.Float.floatToIntBits(getPercentile())
            == java.lang.Float.floatToIntBits(
                other.getPercentile()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      if (getPlayerCardItemIdCount() > 0) {
        hash = (37 * hash) + PLAYER_CARD_ITEM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerCardItemIdList().hashCode();
      }
      if (hasScore()) {
        hash = (37 * hash) + SCORE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getScore());
      }
      if (hasFinalized()) {
        hash = (37 * hash) + FINALIZED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFinalized());
      }
      if (hasPercentile()) {
        hash = (37 * hash) + PERCENTILE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPercentile());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCGetPlayerCardRosterResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCGetPlayerCardRosterResponse)
        MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.class, MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerCardItemId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        score_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        finalized_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        percentile_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse build() {
        MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse buildPartial() {
        MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse result = new MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          playerCardItemId_ = java.util.Collections.unmodifiableList(playerCardItemId_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.playerCardItemId_ = playerCardItemId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.finalized_ = finalized_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.percentile_ = percentile_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse other) {
        if (other == MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (!other.playerCardItemId_.isEmpty()) {
          if (playerCardItemId_.isEmpty()) {
            playerCardItemId_ = other.playerCardItemId_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePlayerCardItemIdIsMutable();
            playerCardItemId_.addAll(other.playerCardItemId_);
          }
          onChanged();
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasFinalized()) {
          setFinalized(other.getFinalized());
        }
        if (other.hasPercentile()) {
          setPercentile(other.getPercentile());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result getResult() {
        MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result result = MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse.Result value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgClientToGCGetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> playerCardItemId_ = java.util.Collections.emptyList();
      private void ensurePlayerCardItemIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playerCardItemId_ = new java.util.ArrayList<java.lang.Long>(playerCardItemId_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getPlayerCardItemIdList() {
        return java.util.Collections.unmodifiableList(playerCardItemId_);
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       */
      public int getPlayerCardItemIdCount() {
        return playerCardItemId_.size();
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       */
      public long getPlayerCardItemId(int index) {
        return playerCardItemId_.get(index);
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       */
      public Builder setPlayerCardItemId(
          int index, long value) {
        ensurePlayerCardItemIdIsMutable();
        playerCardItemId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       */
      public Builder addPlayerCardItemId(long value) {
        ensurePlayerCardItemIdIsMutable();
        playerCardItemId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       */
      public Builder addAllPlayerCardItemId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePlayerCardItemIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, playerCardItemId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 player_card_item_id = 2;</code>
       */
      public Builder clearPlayerCardItemId() {
        playerCardItemId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private float score_ ;
      /**
       * <code>optional float score = 3;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float score = 3;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 3;</code>
       */
      public Builder setScore(float value) {
        bitField0_ |= 0x00000004;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 3;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        score_ = 0F;
        onChanged();
        return this;
      }

      private boolean finalized_ ;
      /**
       * <code>optional bool finalized = 4;</code>
       */
      public boolean hasFinalized() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool finalized = 4;</code>
       */
      public boolean getFinalized() {
        return finalized_;
      }
      /**
       * <code>optional bool finalized = 4;</code>
       */
      public Builder setFinalized(boolean value) {
        bitField0_ |= 0x00000008;
        finalized_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool finalized = 4;</code>
       */
      public Builder clearFinalized() {
        bitField0_ = (bitField0_ & ~0x00000008);
        finalized_ = false;
        onChanged();
        return this;
      }

      private float percentile_ ;
      /**
       * <code>optional float percentile = 5;</code>
       */
      public boolean hasPercentile() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float percentile = 5;</code>
       */
      public float getPercentile() {
        return percentile_;
      }
      /**
       * <code>optional float percentile = 5;</code>
       */
      public Builder setPercentile(float value) {
        bitField0_ |= 0x00000010;
        percentile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float percentile = 5;</code>
       */
      public Builder clearPercentile() {
        bitField0_ = (bitField0_ & ~0x00000010);
        percentile_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgClientToGCGetPlayerCardRosterResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCGetPlayerCardRosterResponse)
    private static final MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse();
    }

    public static MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCGetPlayerCardRosterResponse>() {
      public CMsgClientToGCGetPlayerCardRosterResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgClientToGCGetPlayerCardRosterResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCGetPlayerCardRosterResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgClientToGCGetPlayerCardRosterResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCSetPlayerCardRosterRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCSetPlayerCardRosterRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    boolean hasLeagueId();
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    int getLeagueId();

    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    int getTimestamp();

    /**
     * <code>optional uint32 slot = 3;</code>
     */
    boolean hasSlot();
    /**
     * <code>optional uint32 slot = 3;</code>
     */
    int getSlot();

    /**
     * <code>optional uint64 player_card_item_id = 4;</code>
     */
    boolean hasPlayerCardItemId();
    /**
     * <code>optional uint64 player_card_item_id = 4;</code>
     */
    long getPlayerCardItemId();

    /**
     * <code>optional uint32 event_id = 5;</code>
     */
    boolean hasEventId();
    /**
     * <code>optional uint32 event_id = 5;</code>
     */
    int getEventId();
  }
  /**
   * Protobuf type {@code CMsgClientToGCSetPlayerCardRosterRequest}
   */
  public  static final class CMsgClientToGCSetPlayerCardRosterRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCSetPlayerCardRosterRequest)
      CMsgClientToGCSetPlayerCardRosterRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgClientToGCSetPlayerCardRosterRequest.newBuilder() to construct.
    private CMsgClientToGCSetPlayerCardRosterRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCSetPlayerCardRosterRequest() {
      leagueId_ = 0;
      timestamp_ = 0;
      slot_ = 0;
      playerCardItemId_ = 0L;
      eventId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgClientToGCSetPlayerCardRosterRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              leagueId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              slot_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              playerCardItemId_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              eventId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.class, MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.Builder.class);
    }

    private int bitField0_;
    public static final int LEAGUE_ID_FIELD_NUMBER = 1;
    private int leagueId_;
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    public boolean hasLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    public int getLeagueId() {
      return leagueId_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private int timestamp_;
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int SLOT_FIELD_NUMBER = 3;
    private int slot_;
    /**
     * <code>optional uint32 slot = 3;</code>
     */
    public boolean hasSlot() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 slot = 3;</code>
     */
    public int getSlot() {
      return slot_;
    }

    public static final int PLAYER_CARD_ITEM_ID_FIELD_NUMBER = 4;
    private long playerCardItemId_;
    /**
     * <code>optional uint64 player_card_item_id = 4;</code>
     */
    public boolean hasPlayerCardItemId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 player_card_item_id = 4;</code>
     */
    public long getPlayerCardItemId() {
      return playerCardItemId_;
    }

    public static final int EVENT_ID_FIELD_NUMBER = 5;
    private int eventId_;
    /**
     * <code>optional uint32 event_id = 5;</code>
     */
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 event_id = 5;</code>
     */
    public int getEventId() {
      return eventId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, slot_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, playerCardItemId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, eventId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, leagueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, slot_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, playerCardItemId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, eventId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest other = (MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest) obj;

      boolean result = true;
      result = result && (hasLeagueId() == other.hasLeagueId());
      if (hasLeagueId()) {
        result = result && (getLeagueId()
            == other.getLeagueId());
      }
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && (hasSlot() == other.hasSlot());
      if (hasSlot()) {
        result = result && (getSlot()
            == other.getSlot());
      }
      result = result && (hasPlayerCardItemId() == other.hasPlayerCardItemId());
      if (hasPlayerCardItemId()) {
        result = result && (getPlayerCardItemId()
            == other.getPlayerCardItemId());
      }
      result = result && (hasEventId() == other.hasEventId());
      if (hasEventId()) {
        result = result && (getEventId()
            == other.getEventId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLeagueId()) {
        hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLeagueId();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      if (hasSlot()) {
        hash = (37 * hash) + SLOT_FIELD_NUMBER;
        hash = (53 * hash) + getSlot();
      }
      if (hasPlayerCardItemId()) {
        hash = (37 * hash) + PLAYER_CARD_ITEM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPlayerCardItemId());
      }
      if (hasEventId()) {
        hash = (37 * hash) + EVENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getEventId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCSetPlayerCardRosterRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCSetPlayerCardRosterRequest)
        MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.class, MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        leagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        slot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        playerCardItemId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        eventId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor;
      }

      public MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest build() {
        MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest buildPartial() {
        MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest result = new MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.leagueId_ = leagueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.slot_ = slot_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerCardItemId_ = playerCardItemId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.eventId_ = eventId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest) {
          return mergeFrom((MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest other) {
        if (other == MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest.getDefaultInstance()) return this;
        if (other.hasLeagueId()) {
          setLeagueId(other.getLeagueId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasSlot()) {
          setSlot(other.getSlot());
        }
        if (other.hasPlayerCardItemId()) {
          setPlayerCardItemId(other.getPlayerCardItemId());
        }
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int leagueId_ ;
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public int getLeagueId() {
        return leagueId_;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public Builder setLeagueId(int value) {
        bitField0_ |= 0x00000001;
        leagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public Builder clearLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueId_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private int slot_ ;
      /**
       * <code>optional uint32 slot = 3;</code>
       */
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 slot = 3;</code>
       */
      public int getSlot() {
        return slot_;
      }
      /**
       * <code>optional uint32 slot = 3;</code>
       */
      public Builder setSlot(int value) {
        bitField0_ |= 0x00000004;
        slot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot = 3;</code>
       */
      public Builder clearSlot() {
        bitField0_ = (bitField0_ & ~0x00000004);
        slot_ = 0;
        onChanged();
        return this;
      }

      private long playerCardItemId_ ;
      /**
       * <code>optional uint64 player_card_item_id = 4;</code>
       */
      public boolean hasPlayerCardItemId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 player_card_item_id = 4;</code>
       */
      public long getPlayerCardItemId() {
        return playerCardItemId_;
      }
      /**
       * <code>optional uint64 player_card_item_id = 4;</code>
       */
      public Builder setPlayerCardItemId(long value) {
        bitField0_ |= 0x00000008;
        playerCardItemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 player_card_item_id = 4;</code>
       */
      public Builder clearPlayerCardItemId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerCardItemId_ = 0L;
        onChanged();
        return this;
      }

      private int eventId_ ;
      /**
       * <code>optional uint32 event_id = 5;</code>
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 event_id = 5;</code>
       */
      public int getEventId() {
        return eventId_;
      }
      /**
       * <code>optional uint32 event_id = 5;</code>
       */
      public Builder setEventId(int value) {
        bitField0_ |= 0x00000010;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_id = 5;</code>
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        eventId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgClientToGCSetPlayerCardRosterRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCSetPlayerCardRosterRequest)
    private static final MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest();
    }

    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCSetPlayerCardRosterRequest>() {
      public CMsgClientToGCSetPlayerCardRosterRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgClientToGCSetPlayerCardRosterRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgClientToGCSetPlayerCardRosterResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgClientToGCSetPlayerCardRosterResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     */
    MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result getResult();
  }
  /**
   * Protobuf type {@code CMsgClientToGCSetPlayerCardRosterResponse}
   */
  public  static final class CMsgClientToGCSetPlayerCardRosterResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgClientToGCSetPlayerCardRosterResponse)
      CMsgClientToGCSetPlayerCardRosterResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgClientToGCSetPlayerCardRosterResponse.newBuilder() to construct.
    private CMsgClientToGCSetPlayerCardRosterResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgClientToGCSetPlayerCardRosterResponse() {
      result_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgClientToGCSetPlayerCardRosterResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result value = MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.class, MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code CMsgClientToGCSetPlayerCardRosterResponse.Result}
     */
    public enum Result
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 0;</code>
       */
      SUCCESS(0),
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      ERROR_UNSPECIFIED(1),
      /**
       * <code>ERROR_INVALID_LEAGUE_ID = 2;</code>
       */
      ERROR_INVALID_LEAGUE_ID(2),
      /**
       * <code>ERROR_INVALID_TIMESTAMP = 3;</code>
       */
      ERROR_INVALID_TIMESTAMP(3),
      /**
       * <code>ERROR_PLAYER_CARD_NOT_OWNED = 4;</code>
       */
      ERROR_PLAYER_CARD_NOT_OWNED(4),
      /**
       * <code>ERROR_INVALID_SLOT = 5;</code>
       */
      ERROR_INVALID_SLOT(5),
      /**
       * <code>ERROR_FAILED_CARD_INFO = 6;</code>
       */
      ERROR_FAILED_CARD_INFO(6),
      /**
       * <code>ERROR_ACCOUNT_DUPLICATE = 7;</code>
       */
      ERROR_ACCOUNT_DUPLICATE(7),
      /**
       * <code>ERROR_LOCKED_TIMESTAMP = 8;</code>
       */
      ERROR_LOCKED_TIMESTAMP(8),
      ;

      /**
       * <code>SUCCESS = 0;</code>
       */
      public static final int SUCCESS_VALUE = 0;
      /**
       * <code>ERROR_UNSPECIFIED = 1;</code>
       */
      public static final int ERROR_UNSPECIFIED_VALUE = 1;
      /**
       * <code>ERROR_INVALID_LEAGUE_ID = 2;</code>
       */
      public static final int ERROR_INVALID_LEAGUE_ID_VALUE = 2;
      /**
       * <code>ERROR_INVALID_TIMESTAMP = 3;</code>
       */
      public static final int ERROR_INVALID_TIMESTAMP_VALUE = 3;
      /**
       * <code>ERROR_PLAYER_CARD_NOT_OWNED = 4;</code>
       */
      public static final int ERROR_PLAYER_CARD_NOT_OWNED_VALUE = 4;
      /**
       * <code>ERROR_INVALID_SLOT = 5;</code>
       */
      public static final int ERROR_INVALID_SLOT_VALUE = 5;
      /**
       * <code>ERROR_FAILED_CARD_INFO = 6;</code>
       */
      public static final int ERROR_FAILED_CARD_INFO_VALUE = 6;
      /**
       * <code>ERROR_ACCOUNT_DUPLICATE = 7;</code>
       */
      public static final int ERROR_ACCOUNT_DUPLICATE_VALUE = 7;
      /**
       * <code>ERROR_LOCKED_TIMESTAMP = 8;</code>
       */
      public static final int ERROR_LOCKED_TIMESTAMP_VALUE = 8;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Result valueOf(int value) {
        return forNumber(value);
      }

      public static Result forNumber(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return ERROR_UNSPECIFIED;
          case 2: return ERROR_INVALID_LEAGUE_ID;
          case 3: return ERROR_INVALID_TIMESTAMP;
          case 4: return ERROR_PLAYER_CARD_NOT_OWNED;
          case 5: return ERROR_INVALID_SLOT;
          case 6: return ERROR_FAILED_CARD_INFO;
          case 7: return ERROR_ACCOUNT_DUPLICATE;
          case 8: return ERROR_LOCKED_TIMESTAMP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Result>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Result> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Result>() {
              public Result findValueByNumber(int number) {
                return Result.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final Result[] VALUES = values();

      public static Result valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Result(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgClientToGCSetPlayerCardRosterResponse.Result)
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
     */
    public MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result getResult() {
      MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result result = MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result.valueOf(result_);
      return result == null ? MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse)) {
        return super.equals(obj);
      }
      MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse other = (MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && result_ == other.result_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + result_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCSetPlayerCardRosterResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgClientToGCSetPlayerCardRosterResponse)
        MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.class, MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Builder.class);
      }

      // Construct using MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientFantasy.internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor;
      }

      public MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse getDefaultInstanceForType() {
        return MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.getDefaultInstance();
      }

      public MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse build() {
        MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse buildPartial() {
        MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse result = new MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse) {
          return mergeFrom((MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse other) {
        if (other == MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 0;
      /**
       * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       */
      public MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result getResult() {
        MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result result = MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result.valueOf(result_);
        return result == null ? MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result.SUCCESS : result;
      }
      /**
       * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       */
      public Builder setResult(MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse.Result value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgClientToGCSetPlayerCardRosterResponse.Result result = 1 [default = SUCCESS];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgClientToGCSetPlayerCardRosterResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCSetPlayerCardRosterResponse)
    private static final MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse();
    }

    public static MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgClientToGCSetPlayerCardRosterResponse>() {
      public CMsgClientToGCSetPlayerCardRosterResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgClientToGCSetPlayerCardRosterResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCSetPlayerCardRosterResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientFantasy.CMsgClientToGCSetPlayerCardRosterResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCPlayerInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgGCPlayerInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgGCPlayerInfo_PlayerInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgGCPlayerInfo_RegionLeaderboard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTACreateFantasyLeagueRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTACreateFantasyLeagueResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgFantasyLeagueScoring_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgFantasyLeagueScoring_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueFindRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueFindResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueInfoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAEditFantasyTeamRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAEditFantasyTeamResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamScoreRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamScoreResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamStandingsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamStandingsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerScoreRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerScoreResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerStandingsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerStandingsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerInfoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueCreateRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueCreateResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamCreateRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamCreateResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueDraftStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamTradesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamTradesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyTeamRosterResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyMessageAdd_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyMessageAdd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyMessagesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyMessagesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyMessagesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyMessagesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyMessagesResponse_Message_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyRemoveOwner_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyRemoveOwner_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyRemoveOwnerResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyScheduledMatchesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyScheduledMatchesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeaveLeagueRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyLeaveLeagueResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportStampedPlayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPassportVote_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAPassportVote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgClientToGCGetPlayerCardRosterRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgClientToGCGetPlayerCardRosterResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgClientToGCSetPlayerCardRosterRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgClientToGCSetPlayerCardRosterResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$dota_gcmessages_client_fantasy.proto\032\027" +
      "dota_shared_enums.proto\"\255\003\n\020CMsgGCPlayer" +
      "Info\0222\n\014player_infos\030\001 \003(\0132\034.CMsgGCPlaye" +
      "rInfo.PlayerInfo\0229\n\014leaderboards\030\002 \003(\0132#" +
      ".CMsgGCPlayerInfo.RegionLeaderboard\032\355\001\n\n" +
      "PlayerInfo\022\022\n\naccount_id\030\001 \001(\r\022\014\n\004name\030\002" +
      " \001(\t\022\024\n\014country_code\030\003 \001(\t\022\024\n\014fantasy_ro" +
      "le\030\004 \001(\r\022\017\n\007team_id\030\005 \001(\r\022\021\n\tteam_name\030\006" +
      " \001(\t\022\020\n\010team_tag\030\007 \001(\t\022\017\n\007sponsor\030\010 \001(\t\022" +
      "\021\n\tis_locked\030\t \001(\010\022\016\n\006is_pro\030\n \001(\010\022\024\n\014lo",
      "cked_until\030\013 \001(\r\022\021\n\ttimestamp\030\014 \001(\r\032:\n\021R" +
      "egionLeaderboard\022\020\n\010division\030\001 \001(\r\022\023\n\013ac" +
      "count_ids\030\002 \003(\r\"\256\001\n\"CMsgDOTACreateFantas" +
      "yLeagueRequest\022\023\n\013league_name\030\001 \001(\t\022\023\n\013l" +
      "eague_logo\030\002 \001(\004\022J\n\016selection_mode\030\003 \001(\016" +
      "2\027.Fantasy_Selection_Mode:\031FANTASY_SELEC" +
      "TION_INVALID\022\022\n\nteam_count\030\004 \001(\r\"\363\001\n#CMs" +
      "gDOTACreateFantasyLeagueResponse\022E\n\006resu" +
      "lt\030\001 \001(\0162,.CMsgDOTACreateFantasyLeagueRe" +
      "sponse.EResult:\007SUCCESS\"\204\001\n\007EResult\022\013\n\007S",
      "UCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\032\n\026ERROR" +
      "_TOO_MANY_LEAGUES\020\002\022\034\n\030ERROR_INVALID_TEA" +
      "M_COUNT\020\003\022\033\n\027ERROR_CREATION_DISABLED\020\004\"\237" +
      "\002\n\030CMsgFantasyLeagueScoring\022\r\n\005level\030\001 \001" +
      "(\002\022\r\n\005kills\030\002 \001(\002\022\016\n\006deaths\030\003 \001(\002\022\017\n\007ass" +
      "ists\030\004 \001(\002\022\021\n\tlast_hits\030\005 \001(\002\022\016\n\006denies\030" +
      "\006 \001(\002\022\013\n\003gpm\030\007 \001(\002\022\014\n\004xppm\030\010 \001(\002\022\r\n\005stun" +
      "s\030\t \001(\002\022\017\n\007healing\030\n \001(\002\022\023\n\013tower_kills\030" +
      "\013 \001(\002\022\024\n\014roshan_kills\030\014 \001(\002\022\032\n\022multiplie" +
      "r_premium\030\r \001(\002\022\037\n\027multiplier_profession",
      "al\030\016 \001(\002\"\316\005\n\031CMsgDOTAFantasyLeagueInfo\022\031" +
      "\n\021fantasy_league_id\030\001 \001(\r\022\037\n\027commissione" +
      "r_account_id\030\002 \001(\r\022\033\n\023fantasy_league_nam" +
      "e\030\003 \001(\t\022J\n\016selection_mode\030\004 \001(\0162\027.Fantas" +
      "y_Selection_Mode:\031FANTASY_SELECTION_INVA" +
      "LID\022\022\n\nteam_count\030\005 \001(\r\022\014\n\004logo\030\006 \001(\004\022*\n" +
      "\007scoring\030\007 \001(\0132\031.CMsgFantasyLeagueScorin" +
      "g\022\022\n\ndraft_time\030\014 \001(\r\022\027\n\017draft_pick_time" +
      "\030\r \001(\r\022\024\n\014season_start\030\017 \001(\r\022\025\n\rseason_l" +
      "ength\030\020 \001(\r\022\022\n\nveto_votes\030\021 \001(\r\022\024\n\014acqui",
      "sitions\030\022 \001(\r\022\016\n\006slot_1\030\023 \001(\r\022\016\n\006slot_2\030" +
      "\024 \001(\r\022\016\n\006slot_3\030\025 \001(\r\022\016\n\006slot_4\030\026 \001(\r\022\016\n" +
      "\006slot_5\030\027 \001(\r\022\023\n\013bench_slots\030\030 \001(\r\0228\n\now" +
      "ner_info\030\031 \003(\0132$.CMsgDOTAFantasyLeagueIn" +
      "fo.OwnerInfo\022\017\n\007players\030\032 \003(\r\022\021\n\ttime_zo" +
      "ne\030\033 \001(\r\022\016\n\006season\030\034 \001(\r\022\020\n\010password\030\035 \001" +
      "(\t\032U\n\tOwnerInfo\022\030\n\020owner_account_id\030\001 \001(" +
      "\r\022\023\n\013left_league\030\002 \001(\010\022\031\n\021player_account" +
      "_id\030\003 \003(\r\"p\n$CMsgDOTAFantasyLeagueEditIn" +
      "foRequest\022\031\n\021fantasy_league_id\030\001 \001(\r\022-\n\t",
      "edit_info\030\002 \001(\0132\032.CMsgDOTAFantasyLeagueI" +
      "nfo\"\270\001\n%CMsgDOTAFantasyLeagueEditInfoRes" +
      "ponse\022G\n\006result\030\001 \001(\0162..CMsgDOTAFantasyL" +
      "eagueEditInfoResponse.EResult:\007SUCCESS\"F" +
      "\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIF" +
      "IED\020\001\022\027\n\023ERROR_NO_PERMISSION\020\002\"O\n CMsgDO" +
      "TAFantasyLeagueFindRequest\022\031\n\021fantasy_le" +
      "ague_id\030\001 \001(\r\022\020\n\010password\030\002 \001(\t\"\307\002\n!CMsg" +
      "DOTAFantasyLeagueFindResponse\022C\n\006result\030" +
      "\001 \001(\0162*.CMsgDOTAFantasyLeagueFindRespons",
      "e.EResult:\007SUCCESS\022\033\n\023fantasy_league_nam" +
      "e\030\002 \001(\t\022\031\n\021commissioner_name\030\003 \001(\t\"\244\001\n\007E" +
      "Result\022\013\n\007SUCCESS\020\000\022\032\n\026ERROR_LEAGUE_NOT_" +
      "FOUND\020\001\022\026\n\022ERROR_BAD_PASSWORD\020\002\022\025\n\021ERROR" +
      "_UNSPECIFIED\020\003\022\016\n\nERROR_FULL\020\004\022\030\n\024ERROR_" +
      "ALREADY_MEMBER\020\005\022\027\n\023ERROR_LEAGUE_LOCKED\020" +
      "\006\"=\n CMsgDOTAFantasyLeagueInfoRequest\022\031\n" +
      "\021fantasy_league_id\030\001 \001(\r\"\260\001\n!CMsgDOTAFan" +
      "tasyLeagueInfoResponse\022C\n\006result\030\001 \001(\0162*" +
      ".CMsgDOTAFantasyLeagueInfoResponse.EResu",
      "lt:\007SUCCESS\"F\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021E" +
      "RROR_UNSPECIFIED\020\001\022\027\n\023ERROR_BAD_LEAGUE_I" +
      "D\020\002\"A\n$CMsgDOTAFantasyLeagueMatchupsRequ" +
      "est\022\031\n\021fantasy_league_id\030\001 \001(\r\"\232\004\n%CMsgD" +
      "OTAFantasyLeagueMatchupsResponse\022G\n\006resu" +
      "lt\030\001 \001(\0162..CMsgDOTAFantasyLeagueMatchups" +
      "Response.EResult:\007SUCCESS\022\031\n\021fantasy_lea" +
      "gue_id\030\002 \001(\r\022N\n\017weekly_matchups\030\003 \003(\01325." +
      "CMsgDOTAFantasyLeagueMatchupsResponse.We" +
      "eklyMatchups\032c\n\007Matchup\022\032\n\022owner_account",
      "_id_1\030\001 \001(\r\022\032\n\022owner_account_id_2\030\002 \001(\r\022" +
      "\017\n\007score_1\030\003 \001(\002\022\017\n\007score_2\030\004 \001(\002\032w\n\016Wee" +
      "klyMatchups\022?\n\007matchup\030\001 \003(\0132..CMsgDOTAF" +
      "antasyLeagueMatchupsResponse.Matchup\022\022\n\n" +
      "start_time\030\002 \001(\r\022\020\n\010end_time\030\003 \001(\r\"_\n\007ER" +
      "esult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020" +
      "\001\022\027\n\023ERROR_BAD_LEAGUE_ID\020\002\022\027\n\023ERROR_NO_P" +
      "ERMISSION\020\003\"u\n\036CMsgDOTAEditFantasyTeamRe" +
      "quest\022\031\n\021fantasy_league_id\030\001 \001(\r\022\022\n\nteam" +
      "_index\030\002 \001(\r\022\021\n\tteam_name\030\003 \001(\t\022\021\n\tteam_",
      "logo\030\004 \001(\004\"\350\001\n\037CMsgDOTAEditFantasyTeamRe" +
      "sponse\022A\n\006result\030\001 \001(\0162(.CMsgDOTAEditFan" +
      "tasyTeamResponse.EResult:\007SUCCESS\"\201\001\n\007ER" +
      "esult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020" +
      "\001\022\033\n\027ERROR_INVALID_TEAM_INFO\020\002\022\034\n\030ERROR_" +
      "NAME_ALREADY_TAKEN\020\003\022\027\n\023ERROR_NO_PERMISS" +
      "ION\020\004\"L\n/CMsgDOTAFantasyTeamInfoRequestB" +
      "yFantasyLeagueID\022\031\n\021fantasy_league_id\030\001 " +
      "\001(\r\"J\n.CMsgDOTAFantasyTeamInfoRequestByO" +
      "wnerAccountID\022\030\n\020owner_account_id\030\001 \001(\r\"",
      "L\n\037CMsgDOTAFantasyTeamInfoResponse\022)\n\007re" +
      "sults\030\001 \003(\0132\030.CMsgDOTAFantasyTeamInfo\"\306\001" +
      "\n\027CMsgDOTAFantasyTeamInfo\022\031\n\021fantasy_lea" +
      "gue_id\030\001 \001(\r\022\030\n\020owner_account_id\030\002 \001(\r\022\032" +
      "\n\022fantasy_team_index\030\003 \001(\r\022\021\n\tteam_name\030" +
      "\004 \001(\t\022\021\n\tteam_logo\030\005 \001(\004\022\014\n\004wins\030\006 \001(\r\022\016" +
      "\n\006losses\030\007 \001(\r\022\026\n\016current_roster\030\010 \003(\r\"\326" +
      "\001\n\037CMsgDOTAFantasyTeamScoreRequest\022\031\n\021fa" +
      "ntasy_league_id\030\001 \001(\r\022\030\n\020owner_account_i" +
      "d\030\002 \001(\r\022\032\n\022fantasy_team_index\030\003 \001(\r\022\027\n\017f",
      "ilter_match_id\030\004 \001(\004\022\031\n\021filter_start_tim" +
      "e\030\005 \001(\r\022\027\n\017filter_end_time\030\006 \001(\r\022\025\n\rincl" +
      "ude_bench\030\007 \001(\010\"\360\002\n CMsgDOTAFantasyTeamS" +
      "coreResponse\022B\n\006result\030\001 \001(\0162).CMsgDOTAF" +
      "antasyTeamScoreResponse.EResult:\007SUCCESS" +
      "\022\032\n\022fantasy_team_score\030\002 \001(\002\022O\n\024fantasy_" +
      "player_score\030\003 \003(\01321.CMsgDOTAFantasyTeam" +
      "ScoreResponse.CMsgPlayerScore\0324\n\017CMsgPla" +
      "yerScore\022\022\n\naccount_id\030\001 \001(\r\022\r\n\005score\030\002 " +
      "\001(\002\"e\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNS",
      "PECIFIED\020\001\022\027\n\023ERROR_NO_PERMISSION\020\002\022\035\n\031E" +
      "RROR_OWNER_NOT_IN_LEAGUE\020\003\"\317\001\n#CMsgDOTAF" +
      "antasyTeamStandingsRequest\022\031\n\021fantasy_le" +
      "ague_id\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\022\031\n\021filter_s" +
      "tart_time\030\003 \001(\r\022\027\n\017filter_end_time\030\004 \001(\r" +
      "\022\027\n\017filter_match_id\030\005 \001(\004\022\031\n\021filter_last" +
      "_match\030\006 \001(\010\022\026\n\016filter_in_hall\030\007 \001(\010\"\201\004\n" +
      "$CMsgDOTAFantasyTeamStandingsResponse\022F\n" +
      "\006result\030\001 \001(\0162-.CMsgDOTAFantasyTeamStand" +
      "ingsResponse.EResult:\007SUCCESS\022H\n\013team_sc",
      "ores\030\003 \003(\01323.CMsgDOTAFantasyTeamStanding" +
      "sResponse.CMsgTeamScore\032\376\001\n\rCMsgTeamScor" +
      "e\022\031\n\021fantasy_league_id\030\001 \001(\r\022\030\n\020owner_ac" +
      "count_id\030\002 \001(\r\022\032\n\022fantasy_team_index\030\003 \001" +
      "(\r\022\031\n\021fantasy_team_logo\030\004 \001(\004\022\022\n\nowner_n" +
      "ame\030\005 \001(\t\022\031\n\021fantasy_team_name\030\006 \001(\t\022\r\n\005" +
      "score\030\007 \001(\002\022\025\n\rscore_against\030\010 \001(\002\022\014\n\004wi" +
      "ns\030\t \001(\r\022\016\n\006losses\030\n \001(\r\022\016\n\006streak\030\013 \001(\005" +
      "\"F\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPEC" +
      "IFIED\020\001\022\027\n\023ERROR_NO_PERMISSION\020\002\"\301\001\n!CMs",
      "gDOTAFantasyPlayerScoreRequest\022\031\n\021fantas" +
      "y_league_id\030\001 \001(\r\022\031\n\021player_account_id\030\002" +
      " \001(\r\022\031\n\021filter_start_time\030\003 \001(\r\022\027\n\017filte" +
      "r_end_time\030\004 \001(\r\022\027\n\017filter_match_id\030\005 \001(" +
      "\004\022\031\n\021filter_last_match\030\006 \001(\010\"\214\002\n\"CMsgDOT" +
      "AFantasyPlayerScoreResponse\022D\n\006result\030\001 " +
      "\001(\0162+.CMsgDOTAFantasyPlayerScoreResponse" +
      ".EResult:\007SUCCESS\022\031\n\021fantasy_league_id\030\002" +
      " \001(\r\022\031\n\021player_account_id\030\003 \001(\r\022\023\n\013playe" +
      "r_name\030\004 \001(\t\022\r\n\005score\030\005 \001(\002\"F\n\007EResult\022\013",
      "\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\027\n\023ER" +
      "ROR_NO_PERMISSION\020\002\"\307\001\n%CMsgDOTAFantasyP" +
      "layerStandingsRequest\022\031\n\021fantasy_league_" +
      "id\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\022\014\n\004role\030\003 \001(\r\022\031\n" +
      "\021filter_start_time\030\004 \001(\r\022\027\n\017filter_end_t" +
      "ime\030\005 \001(\r\022\027\n\017filter_match_id\030\006 \001(\004\022\031\n\021fi" +
      "lter_last_match\030\007 \001(\010\"\205\003\n&CMsgDOTAFantas" +
      "yPlayerStandingsResponse\022H\n\006result\030\001 \001(\016" +
      "2/.CMsgDOTAFantasyPlayerStandingsRespons" +
      "e.EResult:\007SUCCESS\022\031\n\021fantasy_league_id\030",
      "\002 \001(\r\022\014\n\004role\030\003 \001(\r\022N\n\rplayer_scores\030\004 \003" +
      "(\01327.CMsgDOTAFantasyPlayerStandingsRespo" +
      "nse.CMsgPlayerScore\032P\n\017CMsgPlayerScore\022\031" +
      "\n\021player_account_id\030\001 \001(\r\022\023\n\013player_name" +
      "\030\002 \001(\t\022\r\n\005score\030\003 \001(\002\"F\n\007EResult\022\013\n\007SUCC" +
      "ESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\027\n\023ERROR_NO" +
      "_PERMISSION\020\002\"\"\n CMsgDOTAFantasyPlayerIn" +
      "foRequest\"C\n!CMsgDOTAFantasyPlayerInfoRe" +
      "sponse\022\036\n\003msg\030\001 \001(\0132\021.CMsgGCPlayerInfo\"\237" +
      "\001\n\"CMsgDOTAFantasyLeagueCreateRequest\022\021\n",
      "\tseason_id\030\001 \001(\r\022\033\n\023fantasy_league_name\030" +
      "\002 \001(\t\022\020\n\010password\030\003 \001(\t\022\021\n\tteam_name\030\004 \001" +
      "(\t\022\014\n\004logo\030\005 \001(\004\022\026\n\016ticket_item_id\030\006 \001(\004" +
      "\"\320\002\n#CMsgDOTAFantasyLeagueCreateResponse" +
      "\022E\n\006result\030\001 \001(\0162,.CMsgDOTAFantasyLeague" +
      "CreateResponse.EResult:\007SUCCESS\022\031\n\021fanta" +
      "sy_league_id\030\002 \001(\r\"\306\001\n\007EResult\022\013\n\007SUCCES" +
      "S\020\000\022\027\n\023ERROR_NO_PERMISSION\020\001\022\027\n\023ERROR_BA" +
      "D_SEASON_ID\020\002\022\031\n\025ERROR_BAD_LEAGUE_NAME\020\003" +
      "\022\027\n\023ERROR_BAD_TEAM_NAME\020\004\022\025\n\021ERROR_UNSPE",
      "CIFIED\020\005\022\034\n\030ERROR_FAILED_LOGO_UPLOAD\020\006\022\023" +
      "\n\017ERROR_NO_TICKET\020\007\"\210\001\n CMsgDOTAFantasyT" +
      "eamCreateRequest\022\031\n\021fantasy_league_id\030\001 " +
      "\001(\r\022\020\n\010password\030\002 \001(\t\022\021\n\tteam_name\030\003 \001(\t" +
      "\022\014\n\004logo\030\004 \001(\004\022\026\n\016ticket_item_id\030\005 \001(\004\"\220" +
      "\003\n!CMsgDOTAFantasyTeamCreateResponse\022C\n\006" +
      "result\030\001 \001(\0162*.CMsgDOTAFantasyTeamCreate" +
      "Response.EResult:\007SUCCESS\022\032\n\022fantasy_tea" +
      "m_index\030\002 \001(\r\"\211\002\n\007EResult\022\013\n\007SUCCESS\020\000\022\027" +
      "\n\023ERROR_NO_PERMISSION\020\001\022\034\n\030ERROR_FAILED_",
      "LOGO_UPLOAD\020\002\022\037\n\033ERROR_BAD_FANTASY_LEAGU" +
      "E_ID\020\003\022\022\n\016ERROR_BAD_NAME\020\004\022\016\n\nERROR_FULL" +
      "\020\005\022\030\n\024ERROR_ALREADY_MEMBER\020\006\022\026\n\022ERROR_BA" +
      "D_PASSWORD\020\007\022\025\n\021ERROR_UNSPECIFIED\020\010\022\023\n\017E" +
      "RROR_NO_TICKET\020\t\022\027\n\023ERROR_LEAGUE_LOCKED\020" +
      "\n\"\331\001\n\'CMsgDOTAFantasyLeagueEditInvitesRe" +
      "quest\022\031\n\021fantasy_league_id\030\001 \001(\r\022\020\n\010pass" +
      "word\030\002 \001(\t\022L\n\rinvite_change\030\003 \003(\01325.CMsg" +
      "DOTAFantasyLeagueEditInvitesRequest.Invi" +
      "teChange\0323\n\014InviteChange\022\022\n\naccount_id\030\001",
      " \001(\r\022\017\n\007invited\030\002 \001(\010\"\245\001\n(CMsgDOTAFantas" +
      "yLeagueEditInvitesResponse\022J\n\006result\030\001 \001" +
      "(\01621.CMsgDOTAFantasyLeagueEditInvitesRes" +
      "ponse.EResult:\007SUCCESS\"-\n\007EResult\022\013\n\007SUC" +
      "CESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\"D\n\'CMsgDOT" +
      "AFantasyLeagueDraftStatusRequest\022\031\n\021fant" +
      "asy_league_id\030\001 \001(\r\"\306\001\n CMsgDOTAFantasyL" +
      "eagueDraftStatus\022\031\n\021fantasy_league_id\030\001 " +
      "\001(\r\022\023\n\013draft_order\030\002 \003(\r\022\024\n\014current_pick" +
      "\030\003 \001(\r\022\026\n\016time_remaining\030\004 \001(\r\022\026\n\016pendin",
      "g_resume\030\005 \001(\010\022\021\n\tcompleted\030\006 \001(\010\022\031\n\021ava" +
      "ilable_players\030\007 \003(\r\"s\n\'CMsgDOTAFantasyL" +
      "eagueDraftPlayerRequest\022\031\n\021fantasy_leagu" +
      "e_id\030\001 \001(\r\022\022\n\nteam_index\030\002 \001(\r\022\031\n\021player" +
      "_account_id\030\003 \001(\r\"\202\003\n(CMsgDOTAFantasyLea" +
      "gueDraftPlayerResponse\022J\n\006result\030\001 \001(\01621" +
      ".CMsgDOTAFantasyLeagueDraftPlayerRespons" +
      "e.EResult:\007SUCCESS\"\211\002\n\007EResult\022\013\n\007SUCCES" +
      "S\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022 \n\034ERROR_INVA" +
      "LID_FANTASY_LEAGUE\020\002\022%\n!ERROR_FANTASY_LE",
      "AGUE_NOT_DRAFTING\020\003\022\035\n\031ERROR_OWNER_NOT_I" +
      "N_LEAGUE\020\004\022\031\n\025ERROR_NOT_OWNERS_TURN\020\005\022\030\n" +
      "\024ERROR_PLAYER_INVALID\020\006\022\034\n\030ERROR_PLAYER_" +
      "UNAVAILABLE\020\007\022\037\n\033ERROR_PLAYER_NO_VALID_S" +
      "LOTS\020\010\"\210\001\n$CMsgDOTAFantasyTeamRosterSwap" +
      "Request\022\031\n\021fantasy_league_id\030\001 \001(\r\022\022\n\nte" +
      "am_index\030\002 \001(\r\022\021\n\ttimestamp\030\003 \001(\r\022\016\n\006slo" +
      "t_1\030\004 \001(\r\022\016\n\006slot_2\030\005 \001(\r\"\356\001\n%CMsgDOTAFa" +
      "ntasyTeamRosterSwapResponse\022G\n\006result\030\001 " +
      "\001(\0162..CMsgDOTAFantasyTeamRosterSwapRespo",
      "nse.EResult:\007SUCCESS\"|\n\007EResult\022\013\n\007SUCCE" +
      "SS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\035\n\031ERROR_OWN" +
      "ER_NOT_IN_LEAGUE\020\002\022\027\n\023ERROR_SLOTS_INVALI" +
      "D\020\003\022\025\n\021ERROR_SLOT_LOCKED\020\004\"\211\001\n\'CMsgDOTAF" +
      "antasyTeamRosterAddDropRequest\022\031\n\021fantas" +
      "y_league_id\030\001 \001(\r\022\022\n\nteam_index\030\002 \001(\r\022\026\n" +
      "\016add_account_id\030\005 \001(\r\022\027\n\017drop_account_id" +
      "\030\006 \001(\r\"\244\002\n(CMsgDOTAFantasyTeamRosterAddD" +
      "ropResponse\022J\n\006result\030\001 \001(\01621.CMsgDOTAFa" +
      "ntasyTeamRosterAddDropResponse.EResult:\007",
      "SUCCESS\"\253\001\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERRO" +
      "R_UNSPECIFIED\020\001\022\035\n\031ERROR_OWNER_NOT_IN_LE" +
      "AGUE\020\002\022\036\n\032ERROR_PLAYER_NOT_AVAILABLE\020\003\022\034" +
      "\n\030ERROR_PLAYER_NOT_ON_TEAM\020\004\022\037\n\033ERROR_TR" +
      "ADE_ALREADY_PENDING\020\005\"=\n CMsgDOTAFantasy" +
      "TeamTradesRequest\022\031\n\021fantasy_league_id\030\001" +
      " \001(\r\"\211\003\n!CMsgDOTAFantasyTeamTradesRespon" +
      "se\022C\n\006result\030\001 \001(\0162*.CMsgDOTAFantasyTeam" +
      "TradesResponse.EResult:\007SUCCESS\0228\n\006trade" +
      "s\030\002 \003(\0132(.CMsgDOTAFantasyTeamTradesRespo",
      "nse.Trade\032\234\001\n\005Trade\022\021\n\ttimestamp\030\001 \001(\r\022\032" +
      "\n\022owner_account_id_1\030\002 \001(\r\022\032\n\022owner_acco" +
      "unt_id_2\030\003 \001(\r\022\033\n\023player_account_id_1\030\004 " +
      "\001(\r\022\033\n\023player_account_id_2\030\005 \001(\r\022\016\n\006stat" +
      "us\030\006 \001(\r\"F\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERRO" +
      "R_UNSPECIFIED\020\001\022\027\n\023ERROR_NO_PERMISSION\020\002" +
      "\"\212\001\n%CMsgDOTAFantasyTeamTradeCancelReque" +
      "st\022\031\n\021fantasy_league_id\030\001 \001(\r\022\024\n\014team_in" +
      "dex_1\030\003 \001(\r\022\032\n\022owner_account_id_2\030\004 \001(\r\022" +
      "\024\n\014team_index_2\030\005 \001(\r\"\316\001\n&CMsgDOTAFantas",
      "yTeamTradeCancelResponse\022H\n\006result\030\001 \001(\016" +
      "2/.CMsgDOTAFantasyTeamTradeCancelRespons" +
      "e.EResult:\007SUCCESS\"Z\n\007EResult\022\013\n\007SUCCESS" +
      "\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022\027\n\023ERROR_NO_PE" +
      "RMISSION\020\002\022\022\n\016ERROR_NO_TRADE\020\003\"~\n CMsgDO" +
      "TAFantasyTeamRosterRequest\022\031\n\021fantasy_le" +
      "ague_id\030\001 \001(\r\022\022\n\nteam_index\030\002 \001(\r\022\030\n\020own" +
      "er_account_id\030\003 \001(\r\022\021\n\ttimestamp\030\004 \001(\r\"\202" +
      "\002\n!CMsgDOTAFantasyTeamRosterResponse\022C\n\006" +
      "result\030\001 \001(\0162*.CMsgDOTAFantasyTeamRoster",
      "Response.EResult:\007SUCCESS\022\032\n\022player_acco" +
      "unt_ids\030\002 \003(\r\022\025\n\rplayer_locked\030\003 \003(\010\"e\n\007" +
      "EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIE" +
      "D\020\001\022\027\n\023ERROR_NO_PERMISSION\020\002\022\035\n\031ERROR_OW" +
      "NER_NOT_IN_LEAGUE\020\003\"G\n*CMsgDOTAFantasyPl" +
      "ayerHisoricalStatsRequest\022\031\n\021fantasy_lea" +
      "gue_id\030\001 \001(\r\"\201\006\n+CMsgDOTAFantasyPlayerHi" +
      "soricalStatsResponse\022M\n\006result\030\001 \001(\01624.C" +
      "MsgDOTAFantasyPlayerHisoricalStatsRespon" +
      "se.EResult:\007SUCCESS\022G\n\005stats\030\002 \003(\01328.CMs",
      "gDOTAFantasyPlayerHisoricalStatsResponse" +
      ".PlayerStats\032\201\002\n\026PlayerScoreAccumulator\022" +
      "\017\n\007matches\030\001 \001(\r\022\016\n\006levels\030\002 \001(\002\022\r\n\005kill" +
      "s\030\003 \001(\002\022\016\n\006deaths\030\004 \001(\002\022\017\n\007assists\030\005 \001(\002" +
      "\022\021\n\tlast_hits\030\006 \001(\002\022\016\n\006denies\030\007 \001(\002\022\013\n\003g" +
      "pm\030\010 \001(\002\022\014\n\004xppm\030\t \001(\002\022\r\n\005stuns\030\n \001(\002\022\017\n" +
      "\007healing\030\013 \001(\002\022\023\n\013tower_kills\030\014 \001(\002\022\024\n\014r" +
      "oshan_kills\030\r \001(\002\022\r\n\005score\030\016 \001(\002\032\355\001\n\013Pla" +
      "yerStats\022\022\n\naccount_id\030\001 \001(\r\022\r\n\005weeks\030\002 " +
      "\001(\r\022Z\n\rstats_premium\030\004 \001(\0132C.CMsgDOTAFan",
      "tasyPlayerHisoricalStatsResponse.PlayerS" +
      "coreAccumulator\022_\n\022stats_professional\030\005 " +
      "\001(\0132C.CMsgDOTAFantasyPlayerHisoricalStat" +
      "sResponse.PlayerScoreAccumulator\"F\n\007ERes" +
      "ult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSPECIFIED\020\001\022" +
      "\027\n\023ERROR_NO_PERMISSION\020\002\"G\n\031CMsgDOTAFant" +
      "asyMessageAdd\022\031\n\021fantasy_league_id\030\001 \001(\r" +
      "\022\017\n\007message\030\002 \001(\t\"g\n\036CMsgDOTAFantasyMess" +
      "agesRequest\022\031\n\021fantasy_league_id\030\001 \001(\r\022\025" +
      "\n\rstart_message\030\002 \001(\r\022\023\n\013end_message\030\003 \001",
      "(\r\"\335\002\n\037CMsgDOTAFantasyMessagesResponse\022A" +
      "\n\006result\030\001 \001(\0162(.CMsgDOTAFantasyMessages" +
      "Response.EResult:\007SUCCESS\022:\n\010messages\030\002 " +
      "\003(\0132(.CMsgDOTAFantasyMessagesResponse.Me" +
      "ssage\022\032\n\022num_total_messages\030\003 \001(\r\032W\n\007Mes" +
      "sage\022\022\n\nmessage_id\030\001 \001(\r\022\017\n\007message\030\002 \001(" +
      "\t\022\031\n\021author_account_id\030\003 \001(\r\022\014\n\004time\030\004 \001" +
      "(\r\"F\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSP" +
      "ECIFIED\020\001\022\027\n\023ERROR_NO_PERMISSION\020\002\"e\n\032CM" +
      "sgDOTAFantasyRemoveOwner\022\031\n\021fantasy_leag",
      "ue_id\030\001 \001(\r\022\030\n\020owner_account_id\030\002 \001(\r\022\022\n" +
      "\nteam_index\030\003 \001(\r\"\343\001\n\"CMsgDOTAFantasyRem" +
      "oveOwnerResponse\022D\n\006result\030\001 \001(\0162+.CMsgD" +
      "OTAFantasyRemoveOwnerResponse.EResult:\007S" +
      "UCCESS\"w\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_" +
      "UNSPECIFIED\020\001\022\027\n\023ERROR_NO_PERMISSION\020\002\022\027" +
      "\n\023ERROR_LEAGUE_LOCKED\020\003\022\026\n\022ERROR_NOT_A_M" +
      "EMBER\020\004\"C\n&CMsgDOTAFantasyScheduledMatch" +
      "esRequest\022\031\n\021fantasy_league_id\030\001 \001(\r\"\315\002\n" +
      "\'CMsgDOTAFantasyScheduledMatchesResponse",
      "\022I\n\006result\030\001 \001(\01620.CMsgDOTAFantasySchedu" +
      "ledMatchesResponse.EResult:\007SUCCESS\022Y\n\024s" +
      "cheduled_match_days\030\002 \003(\0132;.CMsgDOTAFant" +
      "asyScheduledMatchesResponse.ScheduledMat" +
      "chDays\032M\n\022ScheduledMatchDays\022\021\n\ttimestam" +
      "p\030\001 \001(\r\022\020\n\010team_ids\030\002 \003(\r\022\022\n\nleague_ids\030" +
      "\003 \003(\r\"-\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_U" +
      "NSPECIFIED\020\001\"Z\n!CMsgDOTAFantasyLeaveLeag" +
      "ueRequest\022\031\n\021fantasy_league_id\030\001 \001(\r\022\032\n\022" +
      "fantasy_team_index\030\002 \001(\r\"\343\001\n\"CMsgDOTAFan",
      "tasyLeaveLeagueResponse\022D\n\006result\030\001 \001(\0162" +
      "+.CMsgDOTAFantasyLeaveLeagueResponse.ERe" +
      "sult:\007SUCCESS\"w\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n" +
      "\021ERROR_UNSPECIFIED\020\001\022\024\n\020ERROR_NOT_MEMBER" +
      "\020\002\022\032\n\026ERROR_LEAGUE_NOT_FOUND\020\003\022\026\n\022ERROR_" +
      "DRAFT_ACTIVE\020\004\"\206\001\n(CMsgDOTAFantasyPlayer" +
      "ScoreDetailsRequest\022\031\n\021fantasy_league_id" +
      "\030\001 \001(\r\022\031\n\021player_account_id\030\002 \001(\r\022\022\n\nsta" +
      "rt_time\030\003 \001(\r\022\020\n\010end_time\030\004 \001(\r\"\206\004\n)CMsg" +
      "DOTAFantasyPlayerScoreDetailsResponse\022K\n",
      "\006result\030\001 \001(\01622.CMsgDOTAFantasyPlayerSco" +
      "reDetailsResponse.EResult:\007SUCCESS\022H\n\004da" +
      "ta\030\002 \003(\0132:.CMsgDOTAFantasyPlayerScoreDet" +
      "ailsResponse.PlayerMatchData\032\374\001\n\017PlayerM" +
      "atchData\022\020\n\010match_id\030\001 \001(\004\022\021\n\tseries_id\030" +
      "\002 \001(\r\022\022\n\nseries_num\030\003 \001(\r\022\023\n\013series_type" +
      "\030\004 \001(\r\022\023\n\013league_tier\030\005 \001(\r\022\021\n\tleague_id" +
      "\030\006 \001(\r\022\030\n\020opposing_team_id\030\007 \001(\r\022\032\n\022oppo" +
      "sing_team_logo\030\010 \001(\004\022\032\n\022opposing_team_na" +
      "me\030\t \001(\t\022\020\n\010owned_by\030\013 \001(\r\022\017\n\007benched\030\014 ",
      "\001(\010\"C\n\007EResult\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNS" +
      "PECIFIED\020\001\022\024\n\020ERROR_NOT_MEMBER\020\002\"Z\n\035CMsg" +
      "DOTAPassportVoteTeamGuess\022\021\n\tleague_id\030\001" +
      " \001(\r\022\021\n\twinner_id\030\002 \001(\r\022\023\n\013runnerup_id\030\003" +
      " \001(\r\"\221\001\n$CMsgDOTAPassportVoteGenericSele" +
      "ction\022V\n\017selection_index\030\001 \001(\0162\".DOTA_20" +
      "13PassportSelectionIndices:\031PP13_SEL_ALL" +
      "STAR_PLAYER_0\022\021\n\tselection\030\002 \001(\r\"F\n\035CMsg" +
      "DOTAPassportStampedPlayer\022\020\n\010steam_id\030\001 " +
      "\001(\004\022\023\n\013stamp_level\030\002 \001(\r\";\n#CMsgDOTAPass",
      "portPlayerCardChallenge\022\024\n\014challenge_id\030" +
      "\001 \001(\r\"\214\002\n\024CMsgDOTAPassportVote\0222\n\nteam_v" +
      "otes\030\001 \003(\0132\036.CMsgDOTAPassportVoteTeamGue" +
      "ss\022A\n\022generic_selections\030\002 \003(\0132%.CMsgDOT" +
      "APassportVoteGenericSelection\0227\n\017stamped" +
      "_players\030\003 \003(\0132\036.CMsgDOTAPassportStamped" +
      "Player\022D\n\026player_card_challenges\030\004 \003(\0132$" +
      ".CMsgDOTAPassportPlayerCardChallenge\"P\n(" +
      "CMsgClientToGCGetPlayerCardRosterRequest" +
      "\022\021\n\tleague_id\030\001 \001(\r\022\021\n\ttimestamp\030\002 \001(\r\"\262",
      "\002\n)CMsgClientToGCGetPlayerCardRosterResp" +
      "onse\022J\n\006result\030\001 \001(\01621.CMsgClientToGCGet" +
      "PlayerCardRosterResponse.Result:\007SUCCESS" +
      "\022\033\n\023player_card_item_id\030\002 \003(\004\022\r\n\005score\030\003" +
      " \001(\002\022\021\n\tfinalized\030\004 \001(\010\022\022\n\npercentile\030\005 " +
      "\001(\002\"f\n\006Result\022\013\n\007SUCCESS\020\000\022\025\n\021ERROR_UNSP" +
      "ECIFIED\020\001\022\033\n\027ERROR_INVALID_LEAGUE_ID\020\002\022\033" +
      "\n\027ERROR_INVALID_TIMESTAMP\020\003\"\215\001\n(CMsgClie" +
      "ntToGCSetPlayerCardRosterRequest\022\021\n\tleag" +
      "ue_id\030\001 \001(\r\022\021\n\ttimestamp\030\002 \001(\r\022\014\n\004slot\030\003",
      " \001(\r\022\033\n\023player_card_item_id\030\004 \001(\004\022\020\n\010eve" +
      "nt_id\030\005 \001(\r\"\356\002\n)CMsgClientToGCSetPlayerC" +
      "ardRosterResponse\022J\n\006result\030\001 \001(\01621.CMsg" +
      "ClientToGCSetPlayerCardRosterResponse.Re" +
      "sult:\007SUCCESS\"\364\001\n\006Result\022\013\n\007SUCCESS\020\000\022\025\n" +
      "\021ERROR_UNSPECIFIED\020\001\022\033\n\027ERROR_INVALID_LE" +
      "AGUE_ID\020\002\022\033\n\027ERROR_INVALID_TIMESTAMP\020\003\022\037" +
      "\n\033ERROR_PLAYER_CARD_NOT_OWNED\020\004\022\026\n\022ERROR" +
      "_INVALID_SLOT\020\005\022\032\n\026ERROR_FAILED_CARD_INF" +
      "O\020\006\022\033\n\027ERROR_ACCOUNT_DUPLICATE\020\007\022\032\n\026ERRO",
      "R_LOCKED_TIMESTAMP\020\010*\243\025\n!DOTA_2013Passpo" +
      "rtSelectionIndices\022\035\n\031PP13_SEL_ALLSTAR_P" +
      "LAYER_0\020\000\022\035\n\031PP13_SEL_ALLSTAR_PLAYER_1\020\001" +
      "\022\035\n\031PP13_SEL_ALLSTAR_PLAYER_2\020\002\022\035\n\031PP13_" +
      "SEL_ALLSTAR_PLAYER_3\020\003\022\035\n\031PP13_SEL_ALLST" +
      "AR_PLAYER_4\020\004\022\035\n\031PP13_SEL_ALLSTAR_PLAYER" +
      "_5\020\005\022\035\n\031PP13_SEL_ALLSTAR_PLAYER_6\020\006\022\035\n\031P" +
      "P13_SEL_ALLSTAR_PLAYER_7\020\007\022\035\n\031PP13_SEL_A" +
      "LLSTAR_PLAYER_8\020\010\022\035\n\031PP13_SEL_ALLSTAR_PL" +
      "AYER_9\020\t\022\034\n\030PP13_SEL_QUALPRED_WEST_0\020\n\022\034",
      "\n\030PP13_SEL_QUALPRED_WEST_1\020\013\022\034\n\030PP13_SEL" +
      "_QUALPRED_WEST_2\020\014\022\034\n\030PP13_SEL_QUALPRED_" +
      "WEST_3\020\r\022\034\n\030PP13_SEL_QUALPRED_WEST_4\020\016\022\034" +
      "\n\030PP13_SEL_QUALPRED_WEST_5\020\017\022\034\n\030PP13_SEL" +
      "_QUALPRED_WEST_6\020\020\022\034\n\030PP13_SEL_QUALPRED_" +
      "WEST_7\020\021\022\034\n\030PP13_SEL_QUALPRED_WEST_8\020\022\022\034" +
      "\n\030PP13_SEL_QUALPRED_WEST_9\020\023\022\035\n\031PP13_SEL" +
      "_QUALPRED_WEST_10\020\024\022\035\n\031PP13_SEL_QUALPRED" +
      "_WEST_11\020\025\022\035\n\031PP13_SEL_QUALPRED_WEST_12\020" +
      "\026\022\035\n\031PP13_SEL_QUALPRED_WEST_13\020\027\022\035\n\031PP13",
      "_SEL_QUALPRED_WEST_14\020\030\022\034\n\030PP13_SEL_QUAL" +
      "PRED_EAST_0\020\031\022\034\n\030PP13_SEL_QUALPRED_EAST_" +
      "1\020\032\022\034\n\030PP13_SEL_QUALPRED_EAST_2\020\033\022\034\n\030PP1" +
      "3_SEL_QUALPRED_EAST_3\020\034\022\034\n\030PP13_SEL_QUAL" +
      "PRED_EAST_4\020\035\022\034\n\030PP13_SEL_QUALPRED_EAST_" +
      "5\020\036\022\034\n\030PP13_SEL_QUALPRED_EAST_6\020\037\022\034\n\030PP1" +
      "3_SEL_QUALPRED_EAST_7\020 \022\034\n\030PP13_SEL_QUAL" +
      "PRED_EAST_8\020!\022\034\n\030PP13_SEL_QUALPRED_EAST_" +
      "9\020\"\022\035\n\031PP13_SEL_QUALPRED_EAST_10\020#\022\035\n\031PP" +
      "13_SEL_QUALPRED_EAST_11\020$\022\035\n\031PP13_SEL_QU",
      "ALPRED_EAST_12\020%\022\035\n\031PP13_SEL_QUALPRED_EA" +
      "ST_13\020&\022\035\n\031PP13_SEL_QUALPRED_EAST_14\020\'\022\031" +
      "\n\025PP13_SEL_TEAMCUP_TEAM\020(\022\033\n\027PP13_SEL_TE" +
      "AMCUP_PLAYER\020)\022\036\n\032PP13_SEL_TEAMCUP_TEAM_" +
      "LOCK\020*\022 \n\034PP13_SEL_TEAMCUP_PLAYER_LOCK\020+" +
      "\022\030\n\024PP13_SEL_EVENTPRED_0\020,\022\030\n\024PP13_SEL_E" +
      "VENTPRED_1\020-\022\030\n\024PP13_SEL_EVENTPRED_2\020.\022\030" +
      "\n\024PP13_SEL_EVENTPRED_3\020/\022\030\n\024PP13_SEL_EVE" +
      "NTPRED_4\0200\022\030\n\024PP13_SEL_EVENTPRED_5\0201\022\030\n\024" +
      "PP13_SEL_EVENTPRED_6\0202\022\030\n\024PP13_SEL_EVENT",
      "PRED_7\0203\022\030\n\024PP13_SEL_EVENTPRED_8\0204\022\030\n\024PP" +
      "13_SEL_EVENTPRED_9\0205\022\031\n\025PP13_SEL_EVENTPR" +
      "ED_10\0206\022\031\n\025PP13_SEL_EVENTPRED_11\0207\022\031\n\025PP" +
      "13_SEL_EVENTPRED_12\0208\022\031\n\025PP13_SEL_EVENTP" +
      "RED_13\0209\022\031\n\025PP13_SEL_EVENTPRED_14\020:\022\031\n\025P" +
      "P13_SEL_EVENTPRED_15\020;\022\031\n\025PP13_SEL_EVENT" +
      "PRED_16\020<\022\031\n\025PP13_SEL_EVENTPRED_17\020=\022\031\n\025" +
      "PP13_SEL_EVENTPRED_18\020>\022\031\n\025PP13_SEL_EVEN" +
      "TPRED_19\020?\022\031\n\025PP13_SEL_EVENTPRED_20\020@\022\031\n" +
      "\025PP13_SEL_EVENTPRED_21\020A\022\031\n\025PP13_SEL_EVE",
      "NTPRED_22\020B\022\031\n\025PP13_SEL_EVENTPRED_23\020C\022\031" +
      "\n\025PP13_SEL_EVENTPRED_24\020D\022\031\n\025PP13_SEL_EV" +
      "ENTPRED_25\020E\022\031\n\025PP13_SEL_EVENTPRED_26\020F\022" +
      "\031\n\025PP13_SEL_EVENTPRED_27\020G\022\031\n\025PP13_SEL_E" +
      "VENTPRED_28\020H\022\031\n\025PP13_SEL_EVENTPRED_29\020I" +
      "\022\031\n\025PP13_SEL_EVENTPRED_30\020J\022\031\n\025PP13_SEL_" +
      "EVENTPRED_31\020K\022\031\n\025PP13_SEL_EVENTPRED_32\020" +
      "L\022\031\n\025PP13_SEL_EVENTPRED_33\020M\022\031\n\025PP13_SEL" +
      "_EVENTPRED_34\020N\022\031\n\025PP13_SEL_EVENTPRED_35" +
      "\020O\022\031\n\025PP13_SEL_EVENTPRED_36\020P\022\031\n\025PP13_SE",
      "L_EVENTPRED_37\020Q\022\031\n\025PP13_SEL_EVENTPRED_3" +
      "8\020R\022\031\n\025PP13_SEL_EVENTPRED_39\020S\022\031\n\025PP13_S" +
      "EL_EVENTPRED_40\020T\022\031\n\025PP13_SEL_EVENTPRED_" +
      "41\020U\022\031\n\025PP13_SEL_EVENTPRED_42\020V\022\031\n\025PP13_" +
      "SEL_EVENTPRED_43\020W\022\023\n\017PP13_SEL_SOLO_0\020X\022" +
      "\023\n\017PP13_SEL_SOLO_1\020Y\022\023\n\017PP13_SEL_SOLO_2\020" +
      "Z\022\023\n\017PP13_SEL_SOLO_3\020[\022\023\n\017PP13_SEL_SOLO_" +
      "4\020\\\022\023\n\017PP13_SEL_SOLO_5\020]\022\023\n\017PP13_SEL_SOL" +
      "O_6\020^\022\023\n\017PP13_SEL_SOLO_7\020_B\005H\001\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          MsgSharedEnums.getDescriptor(),
        }, assigner);
    internal_static_CMsgGCPlayerInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CMsgGCPlayerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgGCPlayerInfo_descriptor,
        new java.lang.String[] { "PlayerInfos", "Leaderboards", });
    internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor =
      internal_static_CMsgGCPlayerInfo_descriptor.getNestedTypes().get(0);
    internal_static_CMsgGCPlayerInfo_PlayerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgGCPlayerInfo_PlayerInfo_descriptor,
        new java.lang.String[] { "AccountId", "Name", "CountryCode", "FantasyRole", "TeamId", "TeamName", "TeamTag", "Sponsor", "IsLocked", "IsPro", "LockedUntil", "Timestamp", });
    internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor =
      internal_static_CMsgGCPlayerInfo_descriptor.getNestedTypes().get(1);
    internal_static_CMsgGCPlayerInfo_RegionLeaderboard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgGCPlayerInfo_RegionLeaderboard_descriptor,
        new java.lang.String[] { "Division", "AccountIds", });
    internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMsgDOTACreateFantasyLeagueRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTACreateFantasyLeagueRequest_descriptor,
        new java.lang.String[] { "LeagueName", "LeagueLogo", "SelectionMode", "TeamCount", });
    internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CMsgDOTACreateFantasyLeagueResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTACreateFantasyLeagueResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgFantasyLeagueScoring_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CMsgFantasyLeagueScoring_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgFantasyLeagueScoring_descriptor,
        new java.lang.String[] { "Level", "Kills", "Deaths", "Assists", "LastHits", "Denies", "Gpm", "Xppm", "Stuns", "Healing", "TowerKills", "RoshanKills", "MultiplierPremium", "MultiplierProfessional", });
    internal_static_CMsgDOTAFantasyLeagueInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CMsgDOTAFantasyLeagueInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueInfo_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "CommissionerAccountId", "FantasyLeagueName", "SelectionMode", "TeamCount", "Logo", "Scoring", "DraftTime", "DraftPickTime", "SeasonStart", "SeasonLength", "VetoVotes", "Acquisitions", "Slot1", "Slot2", "Slot3", "Slot4", "Slot5", "BenchSlots", "OwnerInfo", "Players", "TimeZone", "Season", "Password", });
    internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor =
      internal_static_CMsgDOTAFantasyLeagueInfo_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueInfo_OwnerInfo_descriptor,
        new java.lang.String[] { "OwnerAccountId", "LeftLeague", "PlayerAccountId", });
    internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueEditInfoRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "EditInfo", });
    internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueEditInfoResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CMsgDOTAFantasyLeagueFindRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueFindRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Password", });
    internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CMsgDOTAFantasyLeagueFindResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueFindResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyLeagueName", "CommissionerName", });
    internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CMsgDOTAFantasyLeagueInfoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueInfoRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CMsgDOTAFantasyLeagueInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueInfoResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueMatchupsRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyLeagueId", "WeeklyMatchups", });
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor =
      internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup_descriptor,
        new java.lang.String[] { "OwnerAccountId1", "OwnerAccountId2", "Score1", "Score2", });
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor =
      internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups_descriptor,
        new java.lang.String[] { "Matchup", "StartTime", "EndTime", });
    internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_CMsgDOTAEditFantasyTeamRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAEditFantasyTeamRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex", "TeamName", "TeamLogo", });
    internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_CMsgDOTAEditFantasyTeamResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAEditFantasyTeamResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID_descriptor,
        new java.lang.String[] { "OwnerAccountId", });
    internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_CMsgDOTAFantasyTeamInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamInfoResponse_descriptor,
        new java.lang.String[] { "Results", });
    internal_static_CMsgDOTAFantasyTeamInfo_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_CMsgDOTAFantasyTeamInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamInfo_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "OwnerAccountId", "FantasyTeamIndex", "TeamName", "TeamLogo", "Wins", "Losses", "CurrentRoster", });
    internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_CMsgDOTAFantasyTeamScoreRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamScoreRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "OwnerAccountId", "FantasyTeamIndex", "FilterMatchId", "FilterStartTime", "FilterEndTime", "IncludeBench", });
    internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_CMsgDOTAFantasyTeamScoreResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyTeamScore", "FantasyPlayerScore", });
    internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor =
      internal_static_CMsgDOTAFantasyTeamScoreResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore_descriptor,
        new java.lang.String[] { "AccountId", "Score", });
    internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_CMsgDOTAFantasyTeamStandingsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamStandingsRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Count", "FilterStartTime", "FilterEndTime", "FilterMatchId", "FilterLastMatch", "FilterInHall", });
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor,
        new java.lang.String[] { "Result", "TeamScores", });
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor =
      internal_static_CMsgDOTAFantasyTeamStandingsResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "OwnerAccountId", "FantasyTeamIndex", "FantasyTeamLogo", "OwnerName", "FantasyTeamName", "Score", "ScoreAgainst", "Wins", "Losses", "Streak", });
    internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_CMsgDOTAFantasyPlayerScoreRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerScoreRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "PlayerAccountId", "FilterStartTime", "FilterEndTime", "FilterMatchId", "FilterLastMatch", });
    internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_CMsgDOTAFantasyPlayerScoreResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerScoreResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyLeagueId", "PlayerAccountId", "PlayerName", "Score", });
    internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_CMsgDOTAFantasyPlayerStandingsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerStandingsRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Count", "Role", "FilterStartTime", "FilterEndTime", "FilterMatchId", "FilterLastMatch", });
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyLeagueId", "Role", "PlayerScores", });
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor =
      internal_static_CMsgDOTAFantasyPlayerStandingsResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore_descriptor,
        new java.lang.String[] { "PlayerAccountId", "PlayerName", "Score", });
    internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_CMsgDOTAFantasyPlayerInfoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerInfoRequest_descriptor,
        new java.lang.String[] { });
    internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_CMsgDOTAFantasyPlayerInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerInfoResponse_descriptor,
        new java.lang.String[] { "Msg", });
    internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_CMsgDOTAFantasyLeagueCreateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueCreateRequest_descriptor,
        new java.lang.String[] { "SeasonId", "FantasyLeagueName", "Password", "TeamName", "Logo", "TicketItemId", });
    internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_CMsgDOTAFantasyLeagueCreateResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueCreateResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_CMsgDOTAFantasyTeamCreateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamCreateRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Password", "TeamName", "Logo", "TicketItemId", });
    internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_CMsgDOTAFantasyTeamCreateResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamCreateResponse_descriptor,
        new java.lang.String[] { "Result", "FantasyTeamIndex", });
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Password", "InviteChange", });
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor =
      internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange_descriptor,
        new java.lang.String[] { "AccountId", "Invited", });
    internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueEditInvitesResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueDraftStatusRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_CMsgDOTAFantasyLeagueDraftStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueDraftStatus_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "DraftOrder", "CurrentPick", "TimeRemaining", "PendingResume", "Completed", "AvailablePlayers", });
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueDraftPlayerRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex", "PlayerAccountId", });
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeagueDraftPlayerResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor =
      getDescriptor().getMessageTypes().get(39);
    internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterSwapRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex", "Timestamp", "Slot1", "Slot2", });
    internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor =
      getDescriptor().getMessageTypes().get(40);
    internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterSwapResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor =
      getDescriptor().getMessageTypes().get(41);
    internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterAddDropRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex", "AddAccountId", "DropAccountId", });
    internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor =
      getDescriptor().getMessageTypes().get(42);
    internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterAddDropResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor =
      getDescriptor().getMessageTypes().get(43);
    internal_static_CMsgDOTAFantasyTeamTradesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamTradesRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor =
      getDescriptor().getMessageTypes().get(44);
    internal_static_CMsgDOTAFantasyTeamTradesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor,
        new java.lang.String[] { "Result", "Trades", });
    internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor =
      internal_static_CMsgDOTAFantasyTeamTradesResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamTradesResponse_Trade_descriptor,
        new java.lang.String[] { "Timestamp", "OwnerAccountId1", "OwnerAccountId2", "PlayerAccountId1", "PlayerAccountId2", "Status", });
    internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor =
      getDescriptor().getMessageTypes().get(45);
    internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamTradeCancelRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex1", "OwnerAccountId2", "TeamIndex2", });
    internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor =
      getDescriptor().getMessageTypes().get(46);
    internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamTradeCancelResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor =
      getDescriptor().getMessageTypes().get(47);
    internal_static_CMsgDOTAFantasyTeamRosterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "TeamIndex", "OwnerAccountId", "Timestamp", });
    internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor =
      getDescriptor().getMessageTypes().get(48);
    internal_static_CMsgDOTAFantasyTeamRosterResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyTeamRosterResponse_descriptor,
        new java.lang.String[] { "Result", "PlayerAccountIds", "PlayerLocked", });
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor =
      getDescriptor().getMessageTypes().get(49);
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerHisoricalStatsRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor =
      getDescriptor().getMessageTypes().get(50);
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor,
        new java.lang.String[] { "Result", "Stats", });
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor =
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator_descriptor,
        new java.lang.String[] { "Matches", "Levels", "Kills", "Deaths", "Assists", "LastHits", "Denies", "Gpm", "Xppm", "Stuns", "Healing", "TowerKills", "RoshanKills", "Score", });
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor =
      internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats_descriptor,
        new java.lang.String[] { "AccountId", "Weeks", "StatsPremium", "StatsProfessional", });
    internal_static_CMsgDOTAFantasyMessageAdd_descriptor =
      getDescriptor().getMessageTypes().get(51);
    internal_static_CMsgDOTAFantasyMessageAdd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyMessageAdd_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "Message", });
    internal_static_CMsgDOTAFantasyMessagesRequest_descriptor =
      getDescriptor().getMessageTypes().get(52);
    internal_static_CMsgDOTAFantasyMessagesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyMessagesRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "StartMessage", "EndMessage", });
    internal_static_CMsgDOTAFantasyMessagesResponse_descriptor =
      getDescriptor().getMessageTypes().get(53);
    internal_static_CMsgDOTAFantasyMessagesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyMessagesResponse_descriptor,
        new java.lang.String[] { "Result", "Messages", "NumTotalMessages", });
    internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor =
      internal_static_CMsgDOTAFantasyMessagesResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyMessagesResponse_Message_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyMessagesResponse_Message_descriptor,
        new java.lang.String[] { "MessageId", "Message", "AuthorAccountId", "Time", });
    internal_static_CMsgDOTAFantasyRemoveOwner_descriptor =
      getDescriptor().getMessageTypes().get(54);
    internal_static_CMsgDOTAFantasyRemoveOwner_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyRemoveOwner_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "OwnerAccountId", "TeamIndex", });
    internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor =
      getDescriptor().getMessageTypes().get(55);
    internal_static_CMsgDOTAFantasyRemoveOwnerResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyRemoveOwnerResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor =
      getDescriptor().getMessageTypes().get(56);
    internal_static_CMsgDOTAFantasyScheduledMatchesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyScheduledMatchesRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", });
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor =
      getDescriptor().getMessageTypes().get(57);
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor,
        new java.lang.String[] { "Result", "ScheduledMatchDays", });
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor =
      internal_static_CMsgDOTAFantasyScheduledMatchesResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays_descriptor,
        new java.lang.String[] { "Timestamp", "TeamIds", "LeagueIds", });
    internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor =
      getDescriptor().getMessageTypes().get(58);
    internal_static_CMsgDOTAFantasyLeaveLeagueRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeaveLeagueRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "FantasyTeamIndex", });
    internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor =
      getDescriptor().getMessageTypes().get(59);
    internal_static_CMsgDOTAFantasyLeaveLeagueResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyLeaveLeagueResponse_descriptor,
        new java.lang.String[] { "Result", });
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor =
      getDescriptor().getMessageTypes().get(60);
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerScoreDetailsRequest_descriptor,
        new java.lang.String[] { "FantasyLeagueId", "PlayerAccountId", "StartTime", "EndTime", });
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor =
      getDescriptor().getMessageTypes().get(61);
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor,
        new java.lang.String[] { "Result", "Data", });
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor =
      internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData_descriptor,
        new java.lang.String[] { "MatchId", "SeriesId", "SeriesNum", "SeriesType", "LeagueTier", "LeagueId", "OpposingTeamId", "OpposingTeamLogo", "OpposingTeamName", "OwnedBy", "Benched", });
    internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor =
      getDescriptor().getMessageTypes().get(62);
    internal_static_CMsgDOTAPassportVoteTeamGuess_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAPassportVoteTeamGuess_descriptor,
        new java.lang.String[] { "LeagueId", "WinnerId", "RunnerupId", });
    internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor =
      getDescriptor().getMessageTypes().get(63);
    internal_static_CMsgDOTAPassportVoteGenericSelection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAPassportVoteGenericSelection_descriptor,
        new java.lang.String[] { "SelectionIndex", "Selection", });
    internal_static_CMsgDOTAPassportStampedPlayer_descriptor =
      getDescriptor().getMessageTypes().get(64);
    internal_static_CMsgDOTAPassportStampedPlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAPassportStampedPlayer_descriptor,
        new java.lang.String[] { "SteamId", "StampLevel", });
    internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor =
      getDescriptor().getMessageTypes().get(65);
    internal_static_CMsgDOTAPassportPlayerCardChallenge_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAPassportPlayerCardChallenge_descriptor,
        new java.lang.String[] { "ChallengeId", });
    internal_static_CMsgDOTAPassportVote_descriptor =
      getDescriptor().getMessageTypes().get(66);
    internal_static_CMsgDOTAPassportVote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAPassportVote_descriptor,
        new java.lang.String[] { "TeamVotes", "GenericSelections", "StampedPlayers", "PlayerCardChallenges", });
    internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor =
      getDescriptor().getMessageTypes().get(67);
    internal_static_CMsgClientToGCGetPlayerCardRosterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgClientToGCGetPlayerCardRosterRequest_descriptor,
        new java.lang.String[] { "LeagueId", "Timestamp", });
    internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor =
      getDescriptor().getMessageTypes().get(68);
    internal_static_CMsgClientToGCGetPlayerCardRosterResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgClientToGCGetPlayerCardRosterResponse_descriptor,
        new java.lang.String[] { "Result", "PlayerCardItemId", "Score", "Finalized", "Percentile", });
    internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor =
      getDescriptor().getMessageTypes().get(69);
    internal_static_CMsgClientToGCSetPlayerCardRosterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgClientToGCSetPlayerCardRosterRequest_descriptor,
        new java.lang.String[] { "LeagueId", "Timestamp", "Slot", "PlayerCardItemId", "EventId", });
    internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor =
      getDescriptor().getMessageTypes().get(70);
    internal_static_CMsgClientToGCSetPlayerCardRosterResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgClientToGCSetPlayerCardRosterResponse_descriptor,
        new java.lang.String[] { "Result", });
    MsgSharedEnums.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
