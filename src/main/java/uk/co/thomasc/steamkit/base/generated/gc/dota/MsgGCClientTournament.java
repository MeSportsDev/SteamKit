// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client_tournament.proto
package uk.co.thomasc.steamkit.base.generated.gc.dota;

public final class MsgGCClientTournament {
  private MsgGCClientTournament() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code ETournamentEvent}
   */
  public enum ETournamentEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ETournamentEvent_None = 0;</code>
     */
    k_ETournamentEvent_None(0),
    /**
     * <code>k_ETournamentEvent_TournamentCreated = 1;</code>
     */
    k_ETournamentEvent_TournamentCreated(1),
    /**
     * <code>k_ETournamentEvent_TournamentsMerged = 2;</code>
     */
    k_ETournamentEvent_TournamentsMerged(2),
    /**
     * <code>k_ETournamentEvent_GameOutcome = 3;</code>
     */
    k_ETournamentEvent_GameOutcome(3),
    /**
     * <code>k_ETournamentEvent_TeamGivenBye = 4;</code>
     */
    k_ETournamentEvent_TeamGivenBye(4),
    /**
     * <code>k_ETournamentEvent_TournamentCanceledByAdmin = 5;</code>
     */
    k_ETournamentEvent_TournamentCanceledByAdmin(5),
    /**
     * <code>k_ETournamentEvent_TeamAbandoned = 6;</code>
     */
    k_ETournamentEvent_TeamAbandoned(6),
    /**
     * <code>k_ETournamentEvent_ScheduledGameStarted = 7;</code>
     */
    k_ETournamentEvent_ScheduledGameStarted(7),
    /**
     * <code>k_ETournamentEvent_Canceled = 8;</code>
     */
    k_ETournamentEvent_Canceled(8),
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeRefund = 9;</code>
     */
    k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeRefund(9),
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeForfeit = 10;</code>
     */
    k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeForfeit(10),
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_GrantedVictory = 11;</code>
     */
    k_ETournamentEvent_TeamParticipationTimedOut_GrantedVictory(11),
    ;

    /**
     * <code>k_ETournamentEvent_None = 0;</code>
     */
    public static final int k_ETournamentEvent_None_VALUE = 0;
    /**
     * <code>k_ETournamentEvent_TournamentCreated = 1;</code>
     */
    public static final int k_ETournamentEvent_TournamentCreated_VALUE = 1;
    /**
     * <code>k_ETournamentEvent_TournamentsMerged = 2;</code>
     */
    public static final int k_ETournamentEvent_TournamentsMerged_VALUE = 2;
    /**
     * <code>k_ETournamentEvent_GameOutcome = 3;</code>
     */
    public static final int k_ETournamentEvent_GameOutcome_VALUE = 3;
    /**
     * <code>k_ETournamentEvent_TeamGivenBye = 4;</code>
     */
    public static final int k_ETournamentEvent_TeamGivenBye_VALUE = 4;
    /**
     * <code>k_ETournamentEvent_TournamentCanceledByAdmin = 5;</code>
     */
    public static final int k_ETournamentEvent_TournamentCanceledByAdmin_VALUE = 5;
    /**
     * <code>k_ETournamentEvent_TeamAbandoned = 6;</code>
     */
    public static final int k_ETournamentEvent_TeamAbandoned_VALUE = 6;
    /**
     * <code>k_ETournamentEvent_ScheduledGameStarted = 7;</code>
     */
    public static final int k_ETournamentEvent_ScheduledGameStarted_VALUE = 7;
    /**
     * <code>k_ETournamentEvent_Canceled = 8;</code>
     */
    public static final int k_ETournamentEvent_Canceled_VALUE = 8;
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeRefund = 9;</code>
     */
    public static final int k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeRefund_VALUE = 9;
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeForfeit = 10;</code>
     */
    public static final int k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeForfeit_VALUE = 10;
    /**
     * <code>k_ETournamentEvent_TeamParticipationTimedOut_GrantedVictory = 11;</code>
     */
    public static final int k_ETournamentEvent_TeamParticipationTimedOut_GrantedVictory_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ETournamentEvent valueOf(int value) {
      return forNumber(value);
    }

    public static ETournamentEvent forNumber(int value) {
      switch (value) {
        case 0: return k_ETournamentEvent_None;
        case 1: return k_ETournamentEvent_TournamentCreated;
        case 2: return k_ETournamentEvent_TournamentsMerged;
        case 3: return k_ETournamentEvent_GameOutcome;
        case 4: return k_ETournamentEvent_TeamGivenBye;
        case 5: return k_ETournamentEvent_TournamentCanceledByAdmin;
        case 6: return k_ETournamentEvent_TeamAbandoned;
        case 7: return k_ETournamentEvent_ScheduledGameStarted;
        case 8: return k_ETournamentEvent_Canceled;
        case 9: return k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeRefund;
        case 10: return k_ETournamentEvent_TeamParticipationTimedOut_EntryFeeForfeit;
        case 11: return k_ETournamentEvent_TeamParticipationTimedOut_GrantedVictory;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ETournamentEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ETournamentEvent> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ETournamentEvent>() {
            public ETournamentEvent findValueByNumber(int number) {
              return ETournamentEvent.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MsgGCClientTournament.getDescriptor().getEnumTypes().get(0);
    }

    private static final ETournamentEvent[] VALUES = values();

    public static ETournamentEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ETournamentEvent(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ETournamentEvent)
  }

  public interface CMsgDOTATournamentInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    boolean hasLeagueId();
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    int getLeagueId();

    /**
     * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Phase>
        getPhaseListList();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentInfo.Phase getPhaseList(int index);
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
     */
    int getPhaseListCount();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseOrBuilder>
        getPhaseListOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseOrBuilder getPhaseListOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Team>
        getTeamsListList();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentInfo.Team getTeamsList(int index);
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
     */
    int getTeamsListCount();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.TeamOrBuilder>
        getTeamsListOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentInfo.TeamOrBuilder getTeamsListOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch>
        getUpcomingMatchesListList();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch getUpcomingMatchesList(int index);
    /**
     * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
     */
    int getUpcomingMatchesListCount();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatchOrBuilder>
        getUpcomingMatchesListOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatchOrBuilder getUpcomingMatchesListOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.News>
        getNewsListList();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentInfo.News getNewsList(int index);
    /**
     * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
     */
    int getNewsListCount();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.NewsOrBuilder>
        getNewsListOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentInfo.NewsOrBuilder getNewsListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTATournamentInfo}
   */
  public  static final class CMsgDOTATournamentInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTATournamentInfo)
      CMsgDOTATournamentInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTATournamentInfo.newBuilder() to construct.
    private CMsgDOTATournamentInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTATournamentInfo() {
      leagueId_ = 0;
      phaseList_ = java.util.Collections.emptyList();
      teamsList_ = java.util.Collections.emptyList();
      upcomingMatchesList_ = java.util.Collections.emptyList();
      newsList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTATournamentInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              leagueId_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                phaseList_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentInfo.Phase>();
                mutable_bitField0_ |= 0x00000002;
              }
              phaseList_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                teamsList_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentInfo.Team>();
                mutable_bitField0_ |= 0x00000004;
              }
              teamsList_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTATournamentInfo.Team.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                upcomingMatchesList_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch>();
                mutable_bitField0_ |= 0x00000008;
              }
              upcomingMatchesList_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                newsList_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentInfo.News>();
                mutable_bitField0_ |= 0x00000010;
              }
              newsList_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTATournamentInfo.News.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          phaseList_ = java.util.Collections.unmodifiableList(phaseList_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          teamsList_ = java.util.Collections.unmodifiableList(teamsList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          upcomingMatchesList_ = java.util.Collections.unmodifiableList(upcomingMatchesList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          newsList_ = java.util.Collections.unmodifiableList(newsList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTATournamentInfo.class, MsgGCClientTournament.CMsgDOTATournamentInfo.Builder.class);
    }

    public interface PhaseGroupOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentInfo.PhaseGroup)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 group_id = 1;</code>
       */
      boolean hasGroupId();
      /**
       * <code>optional uint32 group_id = 1;</code>
       */
      int getGroupId();

      /**
       * <code>optional string group_name = 2;</code>
       */
      boolean hasGroupName();
      /**
       * <code>optional string group_name = 2;</code>
       */
      java.lang.String getGroupName();
      /**
       * <code>optional string group_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getGroupNameBytes();
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentInfo.PhaseGroup}
     */
    public  static final class PhaseGroup extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournamentInfo.PhaseGroup)
        PhaseGroupOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PhaseGroup.newBuilder() to construct.
      private PhaseGroup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PhaseGroup() {
        groupId_ = 0;
        groupName_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PhaseGroup(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                groupId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                groupName_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_PhaseGroup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_PhaseGroup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.class, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder.class);
      }

      private int bitField0_;
      public static final int GROUP_ID_FIELD_NUMBER = 1;
      private int groupId_;
      /**
       * <code>optional uint32 group_id = 1;</code>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 group_id = 1;</code>
       */
      public int getGroupId() {
        return groupId_;
      }

      public static final int GROUP_NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object groupName_;
      /**
       * <code>optional string group_name = 2;</code>
       */
      public boolean hasGroupName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string group_name = 2;</code>
       */
      public java.lang.String getGroupName() {
        java.lang.Object ref = groupName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            groupName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string group_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getGroupNameBytes() {
        java.lang.Object ref = groupName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          groupName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, groupId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, groupName_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, groupId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, groupName_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup other = (MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup) obj;

        boolean result = true;
        result = result && (hasGroupId() == other.hasGroupId());
        if (hasGroupId()) {
          result = result && (getGroupId()
              == other.getGroupId());
        }
        result = result && (hasGroupName() == other.hasGroupName());
        if (hasGroupName()) {
          result = result && getGroupName()
              .equals(other.getGroupName());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasGroupId()) {
          hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
          hash = (53 * hash) + getGroupId();
        }
        if (hasGroupName()) {
          hash = (37 * hash) + GROUP_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getGroupName().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournamentInfo.PhaseGroup}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentInfo.PhaseGroup)
          MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroupOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_PhaseGroup_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_PhaseGroup_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.class, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          groupId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          groupName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_PhaseGroup_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup build() {
          MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup buildPartial() {
          MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup result = new MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.groupId_ = groupId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.groupName_ = groupName_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup other) {
          if (other == MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.getDefaultInstance()) return this;
          if (other.hasGroupId()) {
            setGroupId(other.getGroupId());
          }
          if (other.hasGroupName()) {
            bitField0_ |= 0x00000002;
            groupName_ = other.groupName_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int groupId_ ;
        /**
         * <code>optional uint32 group_id = 1;</code>
         */
        public boolean hasGroupId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 group_id = 1;</code>
         */
        public int getGroupId() {
          return groupId_;
        }
        /**
         * <code>optional uint32 group_id = 1;</code>
         */
        public Builder setGroupId(int value) {
          bitField0_ |= 0x00000001;
          groupId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 group_id = 1;</code>
         */
        public Builder clearGroupId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          groupId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object groupName_ = "";
        /**
         * <code>optional string group_name = 2;</code>
         */
        public boolean hasGroupName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string group_name = 2;</code>
         */
        public java.lang.String getGroupName() {
          java.lang.Object ref = groupName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              groupName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string group_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getGroupNameBytes() {
          java.lang.Object ref = groupName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            groupName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string group_name = 2;</code>
         */
        public Builder setGroupName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          groupName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string group_name = 2;</code>
         */
        public Builder clearGroupName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          groupName_ = getDefaultInstance().getGroupName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string group_name = 2;</code>
         */
        public Builder setGroupNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          groupName_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentInfo.PhaseGroup)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournamentInfo.PhaseGroup)
      private static final MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup();
      }

      public static MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<PhaseGroup>
          PARSER = new com.google.protobuf.AbstractParser<PhaseGroup>() {
        public PhaseGroup parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new PhaseGroup(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PhaseGroup> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PhaseGroup> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PhaseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentInfo.Phase)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 phase_id = 1;</code>
       */
      boolean hasPhaseId();
      /**
       * <code>optional uint32 phase_id = 1;</code>
       */
      int getPhaseId();

      /**
       * <code>optional string phase_name = 2;</code>
       */
      boolean hasPhaseName();
      /**
       * <code>optional string phase_name = 2;</code>
       */
      java.lang.String getPhaseName();
      /**
       * <code>optional string phase_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getPhaseNameBytes();

      /**
       * <code>optional uint32 type_id = 3;</code>
       */
      boolean hasTypeId();
      /**
       * <code>optional uint32 type_id = 3;</code>
       */
      int getTypeId();

      /**
       * <code>optional uint32 iterations = 4;</code>
       */
      boolean hasIterations();
      /**
       * <code>optional uint32 iterations = 4;</code>
       */
      int getIterations();

      /**
       * <code>optional uint32 min_start_time = 5;</code>
       */
      boolean hasMinStartTime();
      /**
       * <code>optional uint32 min_start_time = 5;</code>
       */
      int getMinStartTime();

      /**
       * <code>optional uint32 max_start_time = 6;</code>
       */
      boolean hasMaxStartTime();
      /**
       * <code>optional uint32 max_start_time = 6;</code>
       */
      int getMaxStartTime();

      /**
       * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
       */
      java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup>
          getGroupListList();
      /**
       * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
       */
      MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup getGroupList(int index);
      /**
       * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
       */
      int getGroupListCount();
      /**
       * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
       */
      java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroupOrBuilder>
          getGroupListOrBuilderList();
      /**
       * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
       */
      MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroupOrBuilder getGroupListOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentInfo.Phase}
     */
    public  static final class Phase extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournamentInfo.Phase)
        PhaseOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Phase.newBuilder() to construct.
      private Phase(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Phase() {
        phaseId_ = 0;
        phaseName_ = "";
        typeId_ = 0;
        iterations_ = 0;
        minStartTime_ = 0;
        maxStartTime_ = 0;
        groupList_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Phase(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                phaseId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                phaseName_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                typeId_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                iterations_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                minStartTime_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                maxStartTime_ = input.readUInt32();
                break;
              }
              case 58: {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  groupList_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup>();
                  mutable_bitField0_ |= 0x00000040;
                }
                groupList_.add(
                    input.readMessage(MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
            groupList_ = java.util.Collections.unmodifiableList(groupList_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_Phase_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_Phase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.class, MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder.class);
      }

      private int bitField0_;
      public static final int PHASE_ID_FIELD_NUMBER = 1;
      private int phaseId_;
      /**
       * <code>optional uint32 phase_id = 1;</code>
       */
      public boolean hasPhaseId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 phase_id = 1;</code>
       */
      public int getPhaseId() {
        return phaseId_;
      }

      public static final int PHASE_NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object phaseName_;
      /**
       * <code>optional string phase_name = 2;</code>
       */
      public boolean hasPhaseName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string phase_name = 2;</code>
       */
      public java.lang.String getPhaseName() {
        java.lang.Object ref = phaseName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            phaseName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string phase_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPhaseNameBytes() {
        java.lang.Object ref = phaseName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          phaseName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TYPE_ID_FIELD_NUMBER = 3;
      private int typeId_;
      /**
       * <code>optional uint32 type_id = 3;</code>
       */
      public boolean hasTypeId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 type_id = 3;</code>
       */
      public int getTypeId() {
        return typeId_;
      }

      public static final int ITERATIONS_FIELD_NUMBER = 4;
      private int iterations_;
      /**
       * <code>optional uint32 iterations = 4;</code>
       */
      public boolean hasIterations() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 iterations = 4;</code>
       */
      public int getIterations() {
        return iterations_;
      }

      public static final int MIN_START_TIME_FIELD_NUMBER = 5;
      private int minStartTime_;
      /**
       * <code>optional uint32 min_start_time = 5;</code>
       */
      public boolean hasMinStartTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 min_start_time = 5;</code>
       */
      public int getMinStartTime() {
        return minStartTime_;
      }

      public static final int MAX_START_TIME_FIELD_NUMBER = 6;
      private int maxStartTime_;
      /**
       * <code>optional uint32 max_start_time = 6;</code>
       */
      public boolean hasMaxStartTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 max_start_time = 6;</code>
       */
      public int getMaxStartTime() {
        return maxStartTime_;
      }

      public static final int GROUP_LIST_FIELD_NUMBER = 7;
      private java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup> groupList_;
      /**
       * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup> getGroupListList() {
        return groupList_;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroupOrBuilder>
          getGroupListOrBuilderList() {
        return groupList_;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
       */
      public int getGroupListCount() {
        return groupList_.size();
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup getGroupList(int index) {
        return groupList_.get(index);
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroupOrBuilder getGroupListOrBuilder(
          int index) {
        return groupList_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, phaseId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, phaseName_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, typeId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, iterations_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, minStartTime_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, maxStartTime_);
        }
        for (int i = 0; i < groupList_.size(); i++) {
          output.writeMessage(7, groupList_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, phaseId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, phaseName_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, typeId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, iterations_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, minStartTime_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, maxStartTime_);
        }
        for (int i = 0; i < groupList_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, groupList_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournamentInfo.Phase)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTATournamentInfo.Phase other = (MsgGCClientTournament.CMsgDOTATournamentInfo.Phase) obj;

        boolean result = true;
        result = result && (hasPhaseId() == other.hasPhaseId());
        if (hasPhaseId()) {
          result = result && (getPhaseId()
              == other.getPhaseId());
        }
        result = result && (hasPhaseName() == other.hasPhaseName());
        if (hasPhaseName()) {
          result = result && getPhaseName()
              .equals(other.getPhaseName());
        }
        result = result && (hasTypeId() == other.hasTypeId());
        if (hasTypeId()) {
          result = result && (getTypeId()
              == other.getTypeId());
        }
        result = result && (hasIterations() == other.hasIterations());
        if (hasIterations()) {
          result = result && (getIterations()
              == other.getIterations());
        }
        result = result && (hasMinStartTime() == other.hasMinStartTime());
        if (hasMinStartTime()) {
          result = result && (getMinStartTime()
              == other.getMinStartTime());
        }
        result = result && (hasMaxStartTime() == other.hasMaxStartTime());
        if (hasMaxStartTime()) {
          result = result && (getMaxStartTime()
              == other.getMaxStartTime());
        }
        result = result && getGroupListList()
            .equals(other.getGroupListList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPhaseId()) {
          hash = (37 * hash) + PHASE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getPhaseId();
        }
        if (hasPhaseName()) {
          hash = (37 * hash) + PHASE_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getPhaseName().hashCode();
        }
        if (hasTypeId()) {
          hash = (37 * hash) + TYPE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTypeId();
        }
        if (hasIterations()) {
          hash = (37 * hash) + ITERATIONS_FIELD_NUMBER;
          hash = (53 * hash) + getIterations();
        }
        if (hasMinStartTime()) {
          hash = (37 * hash) + MIN_START_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getMinStartTime();
        }
        if (hasMaxStartTime()) {
          hash = (37 * hash) + MAX_START_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getMaxStartTime();
        }
        if (getGroupListCount() > 0) {
          hash = (37 * hash) + GROUP_LIST_FIELD_NUMBER;
          hash = (53 * hash) + getGroupListList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournamentInfo.Phase prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournamentInfo.Phase}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentInfo.Phase)
          MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_Phase_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_Phase_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.class, MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getGroupListFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          phaseId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          phaseName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          typeId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          iterations_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          minStartTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          maxStartTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          if (groupListBuilder_ == null) {
            groupList_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            groupListBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_Phase_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.Phase getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.Phase build() {
          MsgGCClientTournament.CMsgDOTATournamentInfo.Phase result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.Phase buildPartial() {
          MsgGCClientTournament.CMsgDOTATournamentInfo.Phase result = new MsgGCClientTournament.CMsgDOTATournamentInfo.Phase(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.phaseId_ = phaseId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.phaseName_ = phaseName_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.typeId_ = typeId_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.iterations_ = iterations_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.minStartTime_ = minStartTime_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.maxStartTime_ = maxStartTime_;
          if (groupListBuilder_ == null) {
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
              groupList_ = java.util.Collections.unmodifiableList(groupList_);
              bitField0_ = (bitField0_ & ~0x00000040);
            }
            result.groupList_ = groupList_;
          } else {
            result.groupList_ = groupListBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTATournamentInfo.Phase) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTATournamentInfo.Phase)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournamentInfo.Phase other) {
          if (other == MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.getDefaultInstance()) return this;
          if (other.hasPhaseId()) {
            setPhaseId(other.getPhaseId());
          }
          if (other.hasPhaseName()) {
            bitField0_ |= 0x00000002;
            phaseName_ = other.phaseName_;
            onChanged();
          }
          if (other.hasTypeId()) {
            setTypeId(other.getTypeId());
          }
          if (other.hasIterations()) {
            setIterations(other.getIterations());
          }
          if (other.hasMinStartTime()) {
            setMinStartTime(other.getMinStartTime());
          }
          if (other.hasMaxStartTime()) {
            setMaxStartTime(other.getMaxStartTime());
          }
          if (groupListBuilder_ == null) {
            if (!other.groupList_.isEmpty()) {
              if (groupList_.isEmpty()) {
                groupList_ = other.groupList_;
                bitField0_ = (bitField0_ & ~0x00000040);
              } else {
                ensureGroupListIsMutable();
                groupList_.addAll(other.groupList_);
              }
              onChanged();
            }
          } else {
            if (!other.groupList_.isEmpty()) {
              if (groupListBuilder_.isEmpty()) {
                groupListBuilder_.dispose();
                groupListBuilder_ = null;
                groupList_ = other.groupList_;
                bitField0_ = (bitField0_ & ~0x00000040);
                groupListBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getGroupListFieldBuilder() : null;
              } else {
                groupListBuilder_.addAllMessages(other.groupList_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTATournamentInfo.Phase parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTATournamentInfo.Phase) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int phaseId_ ;
        /**
         * <code>optional uint32 phase_id = 1;</code>
         */
        public boolean hasPhaseId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 phase_id = 1;</code>
         */
        public int getPhaseId() {
          return phaseId_;
        }
        /**
         * <code>optional uint32 phase_id = 1;</code>
         */
        public Builder setPhaseId(int value) {
          bitField0_ |= 0x00000001;
          phaseId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 phase_id = 1;</code>
         */
        public Builder clearPhaseId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          phaseId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object phaseName_ = "";
        /**
         * <code>optional string phase_name = 2;</code>
         */
        public boolean hasPhaseName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string phase_name = 2;</code>
         */
        public java.lang.String getPhaseName() {
          java.lang.Object ref = phaseName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              phaseName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string phase_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getPhaseNameBytes() {
          java.lang.Object ref = phaseName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            phaseName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string phase_name = 2;</code>
         */
        public Builder setPhaseName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          phaseName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string phase_name = 2;</code>
         */
        public Builder clearPhaseName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          phaseName_ = getDefaultInstance().getPhaseName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string phase_name = 2;</code>
         */
        public Builder setPhaseNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          phaseName_ = value;
          onChanged();
          return this;
        }

        private int typeId_ ;
        /**
         * <code>optional uint32 type_id = 3;</code>
         */
        public boolean hasTypeId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 type_id = 3;</code>
         */
        public int getTypeId() {
          return typeId_;
        }
        /**
         * <code>optional uint32 type_id = 3;</code>
         */
        public Builder setTypeId(int value) {
          bitField0_ |= 0x00000004;
          typeId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 type_id = 3;</code>
         */
        public Builder clearTypeId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          typeId_ = 0;
          onChanged();
          return this;
        }

        private int iterations_ ;
        /**
         * <code>optional uint32 iterations = 4;</code>
         */
        public boolean hasIterations() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 iterations = 4;</code>
         */
        public int getIterations() {
          return iterations_;
        }
        /**
         * <code>optional uint32 iterations = 4;</code>
         */
        public Builder setIterations(int value) {
          bitField0_ |= 0x00000008;
          iterations_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 iterations = 4;</code>
         */
        public Builder clearIterations() {
          bitField0_ = (bitField0_ & ~0x00000008);
          iterations_ = 0;
          onChanged();
          return this;
        }

        private int minStartTime_ ;
        /**
         * <code>optional uint32 min_start_time = 5;</code>
         */
        public boolean hasMinStartTime() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 min_start_time = 5;</code>
         */
        public int getMinStartTime() {
          return minStartTime_;
        }
        /**
         * <code>optional uint32 min_start_time = 5;</code>
         */
        public Builder setMinStartTime(int value) {
          bitField0_ |= 0x00000010;
          minStartTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 min_start_time = 5;</code>
         */
        public Builder clearMinStartTime() {
          bitField0_ = (bitField0_ & ~0x00000010);
          minStartTime_ = 0;
          onChanged();
          return this;
        }

        private int maxStartTime_ ;
        /**
         * <code>optional uint32 max_start_time = 6;</code>
         */
        public boolean hasMaxStartTime() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 max_start_time = 6;</code>
         */
        public int getMaxStartTime() {
          return maxStartTime_;
        }
        /**
         * <code>optional uint32 max_start_time = 6;</code>
         */
        public Builder setMaxStartTime(int value) {
          bitField0_ |= 0x00000020;
          maxStartTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 max_start_time = 6;</code>
         */
        public Builder clearMaxStartTime() {
          bitField0_ = (bitField0_ & ~0x00000020);
          maxStartTime_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup> groupList_ =
          java.util.Collections.emptyList();
        private void ensureGroupListIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            groupList_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup>(groupList_);
            bitField0_ |= 0x00000040;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroupOrBuilder> groupListBuilder_;

        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup> getGroupListList() {
          if (groupListBuilder_ == null) {
            return java.util.Collections.unmodifiableList(groupList_);
          } else {
            return groupListBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public int getGroupListCount() {
          if (groupListBuilder_ == null) {
            return groupList_.size();
          } else {
            return groupListBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup getGroupList(int index) {
          if (groupListBuilder_ == null) {
            return groupList_.get(index);
          } else {
            return groupListBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public Builder setGroupList(
            int index, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup value) {
          if (groupListBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGroupListIsMutable();
            groupList_.set(index, value);
            onChanged();
          } else {
            groupListBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public Builder setGroupList(
            int index, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder builderForValue) {
          if (groupListBuilder_ == null) {
            ensureGroupListIsMutable();
            groupList_.set(index, builderForValue.build());
            onChanged();
          } else {
            groupListBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public Builder addGroupList(MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup value) {
          if (groupListBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGroupListIsMutable();
            groupList_.add(value);
            onChanged();
          } else {
            groupListBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public Builder addGroupList(
            int index, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup value) {
          if (groupListBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureGroupListIsMutable();
            groupList_.add(index, value);
            onChanged();
          } else {
            groupListBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public Builder addGroupList(
            MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder builderForValue) {
          if (groupListBuilder_ == null) {
            ensureGroupListIsMutable();
            groupList_.add(builderForValue.build());
            onChanged();
          } else {
            groupListBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public Builder addGroupList(
            int index, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder builderForValue) {
          if (groupListBuilder_ == null) {
            ensureGroupListIsMutable();
            groupList_.add(index, builderForValue.build());
            onChanged();
          } else {
            groupListBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public Builder addAllGroupList(
            java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup> values) {
          if (groupListBuilder_ == null) {
            ensureGroupListIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, groupList_);
            onChanged();
          } else {
            groupListBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public Builder clearGroupList() {
          if (groupListBuilder_ == null) {
            groupList_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
            onChanged();
          } else {
            groupListBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public Builder removeGroupList(int index) {
          if (groupListBuilder_ == null) {
            ensureGroupListIsMutable();
            groupList_.remove(index);
            onChanged();
          } else {
            groupListBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder getGroupListBuilder(
            int index) {
          return getGroupListFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroupOrBuilder getGroupListOrBuilder(
            int index) {
          if (groupListBuilder_ == null) {
            return groupList_.get(index);  } else {
            return groupListBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroupOrBuilder>
             getGroupListOrBuilderList() {
          if (groupListBuilder_ != null) {
            return groupListBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(groupList_);
          }
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder addGroupListBuilder() {
          return getGroupListFieldBuilder().addBuilder(
              MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder addGroupListBuilder(
            int index) {
          return getGroupListFieldBuilder().addBuilder(
              index, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTATournamentInfo.PhaseGroup group_list = 7;</code>
         */
        public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder>
             getGroupListBuilderList() {
          return getGroupListFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroupOrBuilder>
            getGroupListFieldBuilder() {
          if (groupListBuilder_ == null) {
            groupListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroup.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseGroupOrBuilder>(
                    groupList_,
                    ((bitField0_ & 0x00000040) == 0x00000040),
                    getParentForChildren(),
                    isClean());
            groupList_ = null;
          }
          return groupListBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentInfo.Phase)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournamentInfo.Phase)
      private static final MsgGCClientTournament.CMsgDOTATournamentInfo.Phase DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournamentInfo.Phase();
      }

      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Phase getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Phase>
          PARSER = new com.google.protobuf.AbstractParser<Phase>() {
        public Phase parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Phase(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Phase> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Phase> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTATournamentInfo.Phase getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TeamOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentInfo.Team)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 team_id = 1;</code>
       */
      boolean hasTeamId();
      /**
       * <code>optional uint32 team_id = 1;</code>
       */
      int getTeamId();

      /**
       * <code>optional string name = 2;</code>
       */
      boolean hasName();
      /**
       * <code>optional string name = 2;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 2;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string tag = 3;</code>
       */
      boolean hasTag();
      /**
       * <code>optional string tag = 3;</code>
       */
      java.lang.String getTag();
      /**
       * <code>optional string tag = 3;</code>
       */
      com.google.protobuf.ByteString
          getTagBytes();

      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      boolean hasTeamLogo();
      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      long getTeamLogo();

      /**
       * <code>optional bool eliminated = 5;</code>
       */
      boolean hasEliminated();
      /**
       * <code>optional bool eliminated = 5;</code>
       */
      boolean getEliminated();
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentInfo.Team}
     */
    public  static final class Team extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournamentInfo.Team)
        TeamOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Team.newBuilder() to construct.
      private Team(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Team() {
        teamId_ = 0;
        name_ = "";
        tag_ = "";
        teamLogo_ = 0L;
        eliminated_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Team(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                teamId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                name_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                tag_ = bs;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                teamLogo_ = input.readUInt64();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                eliminated_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_Team_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_Team_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournamentInfo.Team.class, MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder.class);
      }

      private int bitField0_;
      public static final int TEAM_ID_FIELD_NUMBER = 1;
      private int teamId_;
      /**
       * <code>optional uint32 team_id = 1;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 team_id = 1;</code>
       */
      public int getTeamId() {
        return teamId_;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object name_;
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TAG_FIELD_NUMBER = 3;
      private volatile java.lang.Object tag_;
      /**
       * <code>optional string tag = 3;</code>
       */
      public boolean hasTag() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string tag = 3;</code>
       */
      public java.lang.String getTag() {
        java.lang.Object ref = tag_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tag_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string tag = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTagBytes() {
        java.lang.Object ref = tag_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM_LOGO_FIELD_NUMBER = 4;
      private long teamLogo_;
      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      public boolean hasTeamLogo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 team_logo = 4;</code>
       */
      public long getTeamLogo() {
        return teamLogo_;
      }

      public static final int ELIMINATED_FIELD_NUMBER = 5;
      private boolean eliminated_;
      /**
       * <code>optional bool eliminated = 5;</code>
       */
      public boolean hasEliminated() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool eliminated = 5;</code>
       */
      public boolean getEliminated() {
        return eliminated_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, teamId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tag_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(4, teamLogo_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, eliminated_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, teamId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, tag_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, teamLogo_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, eliminated_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournamentInfo.Team)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTATournamentInfo.Team other = (MsgGCClientTournament.CMsgDOTATournamentInfo.Team) obj;

        boolean result = true;
        result = result && (hasTeamId() == other.hasTeamId());
        if (hasTeamId()) {
          result = result && (getTeamId()
              == other.getTeamId());
        }
        result = result && (hasName() == other.hasName());
        if (hasName()) {
          result = result && getName()
              .equals(other.getName());
        }
        result = result && (hasTag() == other.hasTag());
        if (hasTag()) {
          result = result && getTag()
              .equals(other.getTag());
        }
        result = result && (hasTeamLogo() == other.hasTeamLogo());
        if (hasTeamLogo()) {
          result = result && (getTeamLogo()
              == other.getTeamLogo());
        }
        result = result && (hasEliminated() == other.hasEliminated());
        if (hasEliminated()) {
          result = result && (getEliminated()
              == other.getEliminated());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTeamId()) {
          hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeamId();
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasTag()) {
          hash = (37 * hash) + TAG_FIELD_NUMBER;
          hash = (53 * hash) + getTag().hashCode();
        }
        if (hasTeamLogo()) {
          hash = (37 * hash) + TEAM_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeamLogo());
        }
        if (hasEliminated()) {
          hash = (37 * hash) + ELIMINATED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getEliminated());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournamentInfo.Team prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournamentInfo.Team}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentInfo.Team)
          MsgGCClientTournament.CMsgDOTATournamentInfo.TeamOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_Team_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_Team_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTATournamentInfo.Team.class, MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTATournamentInfo.Team.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          teamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          tag_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          teamLogo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          eliminated_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_Team_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.Team getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTATournamentInfo.Team.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.Team build() {
          MsgGCClientTournament.CMsgDOTATournamentInfo.Team result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.Team buildPartial() {
          MsgGCClientTournament.CMsgDOTATournamentInfo.Team result = new MsgGCClientTournament.CMsgDOTATournamentInfo.Team(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.teamId_ = teamId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.tag_ = tag_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.teamLogo_ = teamLogo_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.eliminated_ = eliminated_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTATournamentInfo.Team) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTATournamentInfo.Team)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournamentInfo.Team other) {
          if (other == MsgGCClientTournament.CMsgDOTATournamentInfo.Team.getDefaultInstance()) return this;
          if (other.hasTeamId()) {
            setTeamId(other.getTeamId());
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000002;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasTag()) {
            bitField0_ |= 0x00000004;
            tag_ = other.tag_;
            onChanged();
          }
          if (other.hasTeamLogo()) {
            setTeamLogo(other.getTeamLogo());
          }
          if (other.hasEliminated()) {
            setEliminated(other.getEliminated());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTATournamentInfo.Team parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTATournamentInfo.Team) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int teamId_ ;
        /**
         * <code>optional uint32 team_id = 1;</code>
         */
        public boolean hasTeamId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 team_id = 1;</code>
         */
        public int getTeamId() {
          return teamId_;
        }
        /**
         * <code>optional uint32 team_id = 1;</code>
         */
        public Builder setTeamId(int value) {
          bitField0_ |= 0x00000001;
          teamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_id = 1;</code>
         */
        public Builder clearTeamId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          teamId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 2;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object tag_ = "";
        /**
         * <code>optional string tag = 3;</code>
         */
        public boolean hasTag() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string tag = 3;</code>
         */
        public java.lang.String getTag() {
          java.lang.Object ref = tag_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              tag_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string tag = 3;</code>
         */
        public com.google.protobuf.ByteString
            getTagBytes() {
          java.lang.Object ref = tag_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tag_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string tag = 3;</code>
         */
        public Builder setTag(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          tag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string tag = 3;</code>
         */
        public Builder clearTag() {
          bitField0_ = (bitField0_ & ~0x00000004);
          tag_ = getDefaultInstance().getTag();
          onChanged();
          return this;
        }
        /**
         * <code>optional string tag = 3;</code>
         */
        public Builder setTagBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          tag_ = value;
          onChanged();
          return this;
        }

        private long teamLogo_ ;
        /**
         * <code>optional uint64 team_logo = 4;</code>
         */
        public boolean hasTeamLogo() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint64 team_logo = 4;</code>
         */
        public long getTeamLogo() {
          return teamLogo_;
        }
        /**
         * <code>optional uint64 team_logo = 4;</code>
         */
        public Builder setTeamLogo(long value) {
          bitField0_ |= 0x00000008;
          teamLogo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team_logo = 4;</code>
         */
        public Builder clearTeamLogo() {
          bitField0_ = (bitField0_ & ~0x00000008);
          teamLogo_ = 0L;
          onChanged();
          return this;
        }

        private boolean eliminated_ ;
        /**
         * <code>optional bool eliminated = 5;</code>
         */
        public boolean hasEliminated() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool eliminated = 5;</code>
         */
        public boolean getEliminated() {
          return eliminated_;
        }
        /**
         * <code>optional bool eliminated = 5;</code>
         */
        public Builder setEliminated(boolean value) {
          bitField0_ |= 0x00000010;
          eliminated_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool eliminated = 5;</code>
         */
        public Builder clearEliminated() {
          bitField0_ = (bitField0_ & ~0x00000010);
          eliminated_ = false;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentInfo.Team)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournamentInfo.Team)
      private static final MsgGCClientTournament.CMsgDOTATournamentInfo.Team DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournamentInfo.Team();
      }

      public static MsgGCClientTournament.CMsgDOTATournamentInfo.Team getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Team>
          PARSER = new com.google.protobuf.AbstractParser<Team>() {
        public Team parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Team(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Team> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Team> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTATournamentInfo.Team getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface UpcomingMatchOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentInfo.UpcomingMatch)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 series_id = 1;</code>
       */
      boolean hasSeriesId();
      /**
       * <code>optional uint32 series_id = 1;</code>
       */
      int getSeriesId();

      /**
       * <code>optional uint32 team1_id = 2;</code>
       */
      boolean hasTeam1Id();
      /**
       * <code>optional uint32 team1_id = 2;</code>
       */
      int getTeam1Id();

      /**
       * <code>optional uint32 team2_id = 3;</code>
       */
      boolean hasTeam2Id();
      /**
       * <code>optional uint32 team2_id = 3;</code>
       */
      int getTeam2Id();

      /**
       * <code>optional uint32 bo = 4;</code>
       */
      boolean hasBo();
      /**
       * <code>optional uint32 bo = 4;</code>
       */
      int getBo();

      /**
       * <code>optional string stage_name = 5;</code>
       */
      boolean hasStageName();
      /**
       * <code>optional string stage_name = 5;</code>
       */
      java.lang.String getStageName();
      /**
       * <code>optional string stage_name = 5;</code>
       */
      com.google.protobuf.ByteString
          getStageNameBytes();

      /**
       * <code>optional uint32 start_time = 6;</code>
       */
      boolean hasStartTime();
      /**
       * <code>optional uint32 start_time = 6;</code>
       */
      int getStartTime();

      /**
       * <code>optional string winner_stage = 7;</code>
       */
      boolean hasWinnerStage();
      /**
       * <code>optional string winner_stage = 7;</code>
       */
      java.lang.String getWinnerStage();
      /**
       * <code>optional string winner_stage = 7;</code>
       */
      com.google.protobuf.ByteString
          getWinnerStageBytes();

      /**
       * <code>optional string loser_stage = 8;</code>
       */
      boolean hasLoserStage();
      /**
       * <code>optional string loser_stage = 8;</code>
       */
      java.lang.String getLoserStage();
      /**
       * <code>optional string loser_stage = 8;</code>
       */
      com.google.protobuf.ByteString
          getLoserStageBytes();

      /**
       * <code>optional string team1_tag = 9;</code>
       */
      boolean hasTeam1Tag();
      /**
       * <code>optional string team1_tag = 9;</code>
       */
      java.lang.String getTeam1Tag();
      /**
       * <code>optional string team1_tag = 9;</code>
       */
      com.google.protobuf.ByteString
          getTeam1TagBytes();

      /**
       * <code>optional string team2_tag = 10;</code>
       */
      boolean hasTeam2Tag();
      /**
       * <code>optional string team2_tag = 10;</code>
       */
      java.lang.String getTeam2Tag();
      /**
       * <code>optional string team2_tag = 10;</code>
       */
      com.google.protobuf.ByteString
          getTeam2TagBytes();

      /**
       * <code>optional string team1_prev_opponent_tag = 11;</code>
       */
      boolean hasTeam1PrevOpponentTag();
      /**
       * <code>optional string team1_prev_opponent_tag = 11;</code>
       */
      java.lang.String getTeam1PrevOpponentTag();
      /**
       * <code>optional string team1_prev_opponent_tag = 11;</code>
       */
      com.google.protobuf.ByteString
          getTeam1PrevOpponentTagBytes();

      /**
       * <code>optional string team2_prev_opponent_tag = 12;</code>
       */
      boolean hasTeam2PrevOpponentTag();
      /**
       * <code>optional string team2_prev_opponent_tag = 12;</code>
       */
      java.lang.String getTeam2PrevOpponentTag();
      /**
       * <code>optional string team2_prev_opponent_tag = 12;</code>
       */
      com.google.protobuf.ByteString
          getTeam2PrevOpponentTagBytes();

      /**
       * <code>optional uint64 team1_logo = 13;</code>
       */
      boolean hasTeam1Logo();
      /**
       * <code>optional uint64 team1_logo = 13;</code>
       */
      long getTeam1Logo();

      /**
       * <code>optional uint64 team2_logo = 14;</code>
       */
      boolean hasTeam2Logo();
      /**
       * <code>optional uint64 team2_logo = 14;</code>
       */
      long getTeam2Logo();

      /**
       * <code>optional uint64 team1_prev_opponent_logo = 15;</code>
       */
      boolean hasTeam1PrevOpponentLogo();
      /**
       * <code>optional uint64 team1_prev_opponent_logo = 15;</code>
       */
      long getTeam1PrevOpponentLogo();

      /**
       * <code>optional uint64 team2_prev_opponent_logo = 16;</code>
       */
      boolean hasTeam2PrevOpponentLogo();
      /**
       * <code>optional uint64 team2_prev_opponent_logo = 16;</code>
       */
      long getTeam2PrevOpponentLogo();

      /**
       * <code>optional uint32 team1_prev_opponent_id = 17;</code>
       */
      boolean hasTeam1PrevOpponentId();
      /**
       * <code>optional uint32 team1_prev_opponent_id = 17;</code>
       */
      int getTeam1PrevOpponentId();

      /**
       * <code>optional uint32 team2_prev_opponent_id = 18;</code>
       */
      boolean hasTeam2PrevOpponentId();
      /**
       * <code>optional uint32 team2_prev_opponent_id = 18;</code>
       */
      int getTeam2PrevOpponentId();

      /**
       * <code>optional uint32 team1_prev_match_score = 19;</code>
       */
      boolean hasTeam1PrevMatchScore();
      /**
       * <code>optional uint32 team1_prev_match_score = 19;</code>
       */
      int getTeam1PrevMatchScore();

      /**
       * <code>optional uint32 team1_prev_match_opponent_score = 20;</code>
       */
      boolean hasTeam1PrevMatchOpponentScore();
      /**
       * <code>optional uint32 team1_prev_match_opponent_score = 20;</code>
       */
      int getTeam1PrevMatchOpponentScore();

      /**
       * <code>optional uint32 team2_prev_match_score = 21;</code>
       */
      boolean hasTeam2PrevMatchScore();
      /**
       * <code>optional uint32 team2_prev_match_score = 21;</code>
       */
      int getTeam2PrevMatchScore();

      /**
       * <code>optional uint32 team2_prev_match_opponent_score = 22;</code>
       */
      boolean hasTeam2PrevMatchOpponentScore();
      /**
       * <code>optional uint32 team2_prev_match_opponent_score = 22;</code>
       */
      int getTeam2PrevMatchOpponentScore();

      /**
       * <code>optional uint32 phase_type = 23;</code>
       */
      boolean hasPhaseType();
      /**
       * <code>optional uint32 phase_type = 23;</code>
       */
      int getPhaseType();

      /**
       * <code>optional uint32 team1_score = 24;</code>
       */
      boolean hasTeam1Score();
      /**
       * <code>optional uint32 team1_score = 24;</code>
       */
      int getTeam1Score();

      /**
       * <code>optional uint32 team2_score = 25;</code>
       */
      boolean hasTeam2Score();
      /**
       * <code>optional uint32 team2_score = 25;</code>
       */
      int getTeam2Score();

      /**
       * <code>optional uint32 phase_id = 26;</code>
       */
      boolean hasPhaseId();
      /**
       * <code>optional uint32 phase_id = 26;</code>
       */
      int getPhaseId();
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentInfo.UpcomingMatch}
     */
    public  static final class UpcomingMatch extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournamentInfo.UpcomingMatch)
        UpcomingMatchOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use UpcomingMatch.newBuilder() to construct.
      private UpcomingMatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private UpcomingMatch() {
        seriesId_ = 0;
        team1Id_ = 0;
        team2Id_ = 0;
        bo_ = 0;
        stageName_ = "";
        startTime_ = 0;
        winnerStage_ = "";
        loserStage_ = "";
        team1Tag_ = "";
        team2Tag_ = "";
        team1PrevOpponentTag_ = "";
        team2PrevOpponentTag_ = "";
        team1Logo_ = 0L;
        team2Logo_ = 0L;
        team1PrevOpponentLogo_ = 0L;
        team2PrevOpponentLogo_ = 0L;
        team1PrevOpponentId_ = 0;
        team2PrevOpponentId_ = 0;
        team1PrevMatchScore_ = 0;
        team1PrevMatchOpponentScore_ = 0;
        team2PrevMatchScore_ = 0;
        team2PrevMatchOpponentScore_ = 0;
        phaseType_ = 0;
        team1Score_ = 0;
        team2Score_ = 0;
        phaseId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private UpcomingMatch(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                seriesId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                team1Id_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                team2Id_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                bo_ = input.readUInt32();
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                stageName_ = bs;
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                startTime_ = input.readUInt32();
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000040;
                winnerStage_ = bs;
                break;
              }
              case 66: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000080;
                loserStage_ = bs;
                break;
              }
              case 74: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000100;
                team1Tag_ = bs;
                break;
              }
              case 82: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000200;
                team2Tag_ = bs;
                break;
              }
              case 90: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000400;
                team1PrevOpponentTag_ = bs;
                break;
              }
              case 98: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000800;
                team2PrevOpponentTag_ = bs;
                break;
              }
              case 104: {
                bitField0_ |= 0x00001000;
                team1Logo_ = input.readUInt64();
                break;
              }
              case 112: {
                bitField0_ |= 0x00002000;
                team2Logo_ = input.readUInt64();
                break;
              }
              case 120: {
                bitField0_ |= 0x00004000;
                team1PrevOpponentLogo_ = input.readUInt64();
                break;
              }
              case 128: {
                bitField0_ |= 0x00008000;
                team2PrevOpponentLogo_ = input.readUInt64();
                break;
              }
              case 136: {
                bitField0_ |= 0x00010000;
                team1PrevOpponentId_ = input.readUInt32();
                break;
              }
              case 144: {
                bitField0_ |= 0x00020000;
                team2PrevOpponentId_ = input.readUInt32();
                break;
              }
              case 152: {
                bitField0_ |= 0x00040000;
                team1PrevMatchScore_ = input.readUInt32();
                break;
              }
              case 160: {
                bitField0_ |= 0x00080000;
                team1PrevMatchOpponentScore_ = input.readUInt32();
                break;
              }
              case 168: {
                bitField0_ |= 0x00100000;
                team2PrevMatchScore_ = input.readUInt32();
                break;
              }
              case 176: {
                bitField0_ |= 0x00200000;
                team2PrevMatchOpponentScore_ = input.readUInt32();
                break;
              }
              case 184: {
                bitField0_ |= 0x00400000;
                phaseType_ = input.readUInt32();
                break;
              }
              case 192: {
                bitField0_ |= 0x00800000;
                team1Score_ = input.readUInt32();
                break;
              }
              case 200: {
                bitField0_ |= 0x01000000;
                team2Score_ = input.readUInt32();
                break;
              }
              case 208: {
                bitField0_ |= 0x02000000;
                phaseId_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_UpcomingMatch_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_UpcomingMatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.class, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder.class);
      }

      private int bitField0_;
      public static final int SERIES_ID_FIELD_NUMBER = 1;
      private int seriesId_;
      /**
       * <code>optional uint32 series_id = 1;</code>
       */
      public boolean hasSeriesId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 series_id = 1;</code>
       */
      public int getSeriesId() {
        return seriesId_;
      }

      public static final int TEAM1_ID_FIELD_NUMBER = 2;
      private int team1Id_;
      /**
       * <code>optional uint32 team1_id = 2;</code>
       */
      public boolean hasTeam1Id() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team1_id = 2;</code>
       */
      public int getTeam1Id() {
        return team1Id_;
      }

      public static final int TEAM2_ID_FIELD_NUMBER = 3;
      private int team2Id_;
      /**
       * <code>optional uint32 team2_id = 3;</code>
       */
      public boolean hasTeam2Id() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 team2_id = 3;</code>
       */
      public int getTeam2Id() {
        return team2Id_;
      }

      public static final int BO_FIELD_NUMBER = 4;
      private int bo_;
      /**
       * <code>optional uint32 bo = 4;</code>
       */
      public boolean hasBo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 bo = 4;</code>
       */
      public int getBo() {
        return bo_;
      }

      public static final int STAGE_NAME_FIELD_NUMBER = 5;
      private volatile java.lang.Object stageName_;
      /**
       * <code>optional string stage_name = 5;</code>
       */
      public boolean hasStageName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string stage_name = 5;</code>
       */
      public java.lang.String getStageName() {
        java.lang.Object ref = stageName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stageName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string stage_name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getStageNameBytes() {
        java.lang.Object ref = stageName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stageName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int START_TIME_FIELD_NUMBER = 6;
      private int startTime_;
      /**
       * <code>optional uint32 start_time = 6;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 start_time = 6;</code>
       */
      public int getStartTime() {
        return startTime_;
      }

      public static final int WINNER_STAGE_FIELD_NUMBER = 7;
      private volatile java.lang.Object winnerStage_;
      /**
       * <code>optional string winner_stage = 7;</code>
       */
      public boolean hasWinnerStage() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string winner_stage = 7;</code>
       */
      public java.lang.String getWinnerStage() {
        java.lang.Object ref = winnerStage_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            winnerStage_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string winner_stage = 7;</code>
       */
      public com.google.protobuf.ByteString
          getWinnerStageBytes() {
        java.lang.Object ref = winnerStage_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          winnerStage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LOSER_STAGE_FIELD_NUMBER = 8;
      private volatile java.lang.Object loserStage_;
      /**
       * <code>optional string loser_stage = 8;</code>
       */
      public boolean hasLoserStage() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string loser_stage = 8;</code>
       */
      public java.lang.String getLoserStage() {
        java.lang.Object ref = loserStage_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            loserStage_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string loser_stage = 8;</code>
       */
      public com.google.protobuf.ByteString
          getLoserStageBytes() {
        java.lang.Object ref = loserStage_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          loserStage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM1_TAG_FIELD_NUMBER = 9;
      private volatile java.lang.Object team1Tag_;
      /**
       * <code>optional string team1_tag = 9;</code>
       */
      public boolean hasTeam1Tag() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string team1_tag = 9;</code>
       */
      public java.lang.String getTeam1Tag() {
        java.lang.Object ref = team1Tag_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            team1Tag_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team1_tag = 9;</code>
       */
      public com.google.protobuf.ByteString
          getTeam1TagBytes() {
        java.lang.Object ref = team1Tag_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          team1Tag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM2_TAG_FIELD_NUMBER = 10;
      private volatile java.lang.Object team2Tag_;
      /**
       * <code>optional string team2_tag = 10;</code>
       */
      public boolean hasTeam2Tag() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string team2_tag = 10;</code>
       */
      public java.lang.String getTeam2Tag() {
        java.lang.Object ref = team2Tag_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            team2Tag_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team2_tag = 10;</code>
       */
      public com.google.protobuf.ByteString
          getTeam2TagBytes() {
        java.lang.Object ref = team2Tag_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          team2Tag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM1_PREV_OPPONENT_TAG_FIELD_NUMBER = 11;
      private volatile java.lang.Object team1PrevOpponentTag_;
      /**
       * <code>optional string team1_prev_opponent_tag = 11;</code>
       */
      public boolean hasTeam1PrevOpponentTag() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string team1_prev_opponent_tag = 11;</code>
       */
      public java.lang.String getTeam1PrevOpponentTag() {
        java.lang.Object ref = team1PrevOpponentTag_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            team1PrevOpponentTag_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team1_prev_opponent_tag = 11;</code>
       */
      public com.google.protobuf.ByteString
          getTeam1PrevOpponentTagBytes() {
        java.lang.Object ref = team1PrevOpponentTag_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          team1PrevOpponentTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM2_PREV_OPPONENT_TAG_FIELD_NUMBER = 12;
      private volatile java.lang.Object team2PrevOpponentTag_;
      /**
       * <code>optional string team2_prev_opponent_tag = 12;</code>
       */
      public boolean hasTeam2PrevOpponentTag() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string team2_prev_opponent_tag = 12;</code>
       */
      public java.lang.String getTeam2PrevOpponentTag() {
        java.lang.Object ref = team2PrevOpponentTag_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            team2PrevOpponentTag_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team2_prev_opponent_tag = 12;</code>
       */
      public com.google.protobuf.ByteString
          getTeam2PrevOpponentTagBytes() {
        java.lang.Object ref = team2PrevOpponentTag_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          team2PrevOpponentTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM1_LOGO_FIELD_NUMBER = 13;
      private long team1Logo_;
      /**
       * <code>optional uint64 team1_logo = 13;</code>
       */
      public boolean hasTeam1Logo() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint64 team1_logo = 13;</code>
       */
      public long getTeam1Logo() {
        return team1Logo_;
      }

      public static final int TEAM2_LOGO_FIELD_NUMBER = 14;
      private long team2Logo_;
      /**
       * <code>optional uint64 team2_logo = 14;</code>
       */
      public boolean hasTeam2Logo() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint64 team2_logo = 14;</code>
       */
      public long getTeam2Logo() {
        return team2Logo_;
      }

      public static final int TEAM1_PREV_OPPONENT_LOGO_FIELD_NUMBER = 15;
      private long team1PrevOpponentLogo_;
      /**
       * <code>optional uint64 team1_prev_opponent_logo = 15;</code>
       */
      public boolean hasTeam1PrevOpponentLogo() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint64 team1_prev_opponent_logo = 15;</code>
       */
      public long getTeam1PrevOpponentLogo() {
        return team1PrevOpponentLogo_;
      }

      public static final int TEAM2_PREV_OPPONENT_LOGO_FIELD_NUMBER = 16;
      private long team2PrevOpponentLogo_;
      /**
       * <code>optional uint64 team2_prev_opponent_logo = 16;</code>
       */
      public boolean hasTeam2PrevOpponentLogo() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint64 team2_prev_opponent_logo = 16;</code>
       */
      public long getTeam2PrevOpponentLogo() {
        return team2PrevOpponentLogo_;
      }

      public static final int TEAM1_PREV_OPPONENT_ID_FIELD_NUMBER = 17;
      private int team1PrevOpponentId_;
      /**
       * <code>optional uint32 team1_prev_opponent_id = 17;</code>
       */
      public boolean hasTeam1PrevOpponentId() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 team1_prev_opponent_id = 17;</code>
       */
      public int getTeam1PrevOpponentId() {
        return team1PrevOpponentId_;
      }

      public static final int TEAM2_PREV_OPPONENT_ID_FIELD_NUMBER = 18;
      private int team2PrevOpponentId_;
      /**
       * <code>optional uint32 team2_prev_opponent_id = 18;</code>
       */
      public boolean hasTeam2PrevOpponentId() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 team2_prev_opponent_id = 18;</code>
       */
      public int getTeam2PrevOpponentId() {
        return team2PrevOpponentId_;
      }

      public static final int TEAM1_PREV_MATCH_SCORE_FIELD_NUMBER = 19;
      private int team1PrevMatchScore_;
      /**
       * <code>optional uint32 team1_prev_match_score = 19;</code>
       */
      public boolean hasTeam1PrevMatchScore() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 team1_prev_match_score = 19;</code>
       */
      public int getTeam1PrevMatchScore() {
        return team1PrevMatchScore_;
      }

      public static final int TEAM1_PREV_MATCH_OPPONENT_SCORE_FIELD_NUMBER = 20;
      private int team1PrevMatchOpponentScore_;
      /**
       * <code>optional uint32 team1_prev_match_opponent_score = 20;</code>
       */
      public boolean hasTeam1PrevMatchOpponentScore() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint32 team1_prev_match_opponent_score = 20;</code>
       */
      public int getTeam1PrevMatchOpponentScore() {
        return team1PrevMatchOpponentScore_;
      }

      public static final int TEAM2_PREV_MATCH_SCORE_FIELD_NUMBER = 21;
      private int team2PrevMatchScore_;
      /**
       * <code>optional uint32 team2_prev_match_score = 21;</code>
       */
      public boolean hasTeam2PrevMatchScore() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint32 team2_prev_match_score = 21;</code>
       */
      public int getTeam2PrevMatchScore() {
        return team2PrevMatchScore_;
      }

      public static final int TEAM2_PREV_MATCH_OPPONENT_SCORE_FIELD_NUMBER = 22;
      private int team2PrevMatchOpponentScore_;
      /**
       * <code>optional uint32 team2_prev_match_opponent_score = 22;</code>
       */
      public boolean hasTeam2PrevMatchOpponentScore() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 team2_prev_match_opponent_score = 22;</code>
       */
      public int getTeam2PrevMatchOpponentScore() {
        return team2PrevMatchOpponentScore_;
      }

      public static final int PHASE_TYPE_FIELD_NUMBER = 23;
      private int phaseType_;
      /**
       * <code>optional uint32 phase_type = 23;</code>
       */
      public boolean hasPhaseType() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 phase_type = 23;</code>
       */
      public int getPhaseType() {
        return phaseType_;
      }

      public static final int TEAM1_SCORE_FIELD_NUMBER = 24;
      private int team1Score_;
      /**
       * <code>optional uint32 team1_score = 24;</code>
       */
      public boolean hasTeam1Score() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 team1_score = 24;</code>
       */
      public int getTeam1Score() {
        return team1Score_;
      }

      public static final int TEAM2_SCORE_FIELD_NUMBER = 25;
      private int team2Score_;
      /**
       * <code>optional uint32 team2_score = 25;</code>
       */
      public boolean hasTeam2Score() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional uint32 team2_score = 25;</code>
       */
      public int getTeam2Score() {
        return team2Score_;
      }

      public static final int PHASE_ID_FIELD_NUMBER = 26;
      private int phaseId_;
      /**
       * <code>optional uint32 phase_id = 26;</code>
       */
      public boolean hasPhaseId() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 phase_id = 26;</code>
       */
      public int getPhaseId() {
        return phaseId_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, seriesId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, team1Id_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, team2Id_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, bo_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, stageName_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, startTime_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 7, winnerStage_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 8, loserStage_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 9, team1Tag_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 10, team2Tag_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 11, team1PrevOpponentTag_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 12, team2PrevOpponentTag_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeUInt64(13, team1Logo_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeUInt64(14, team2Logo_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          output.writeUInt64(15, team1PrevOpponentLogo_);
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          output.writeUInt64(16, team2PrevOpponentLogo_);
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          output.writeUInt32(17, team1PrevOpponentId_);
        }
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          output.writeUInt32(18, team2PrevOpponentId_);
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          output.writeUInt32(19, team1PrevMatchScore_);
        }
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          output.writeUInt32(20, team1PrevMatchOpponentScore_);
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          output.writeUInt32(21, team2PrevMatchScore_);
        }
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          output.writeUInt32(22, team2PrevMatchOpponentScore_);
        }
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          output.writeUInt32(23, phaseType_);
        }
        if (((bitField0_ & 0x00800000) == 0x00800000)) {
          output.writeUInt32(24, team1Score_);
        }
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          output.writeUInt32(25, team2Score_);
        }
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          output.writeUInt32(26, phaseId_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, seriesId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, team1Id_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, team2Id_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, bo_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, stageName_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, startTime_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, winnerStage_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, loserStage_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, team1Tag_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, team2Tag_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, team1PrevOpponentTag_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, team2PrevOpponentTag_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(13, team1Logo_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(14, team2Logo_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(15, team1PrevOpponentLogo_);
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(16, team2PrevOpponentLogo_);
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(17, team1PrevOpponentId_);
        }
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(18, team2PrevOpponentId_);
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(19, team1PrevMatchScore_);
        }
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(20, team1PrevMatchOpponentScore_);
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(21, team2PrevMatchScore_);
        }
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(22, team2PrevMatchOpponentScore_);
        }
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(23, phaseType_);
        }
        if (((bitField0_ & 0x00800000) == 0x00800000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(24, team1Score_);
        }
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(25, team2Score_);
        }
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(26, phaseId_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch other = (MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch) obj;

        boolean result = true;
        result = result && (hasSeriesId() == other.hasSeriesId());
        if (hasSeriesId()) {
          result = result && (getSeriesId()
              == other.getSeriesId());
        }
        result = result && (hasTeam1Id() == other.hasTeam1Id());
        if (hasTeam1Id()) {
          result = result && (getTeam1Id()
              == other.getTeam1Id());
        }
        result = result && (hasTeam2Id() == other.hasTeam2Id());
        if (hasTeam2Id()) {
          result = result && (getTeam2Id()
              == other.getTeam2Id());
        }
        result = result && (hasBo() == other.hasBo());
        if (hasBo()) {
          result = result && (getBo()
              == other.getBo());
        }
        result = result && (hasStageName() == other.hasStageName());
        if (hasStageName()) {
          result = result && getStageName()
              .equals(other.getStageName());
        }
        result = result && (hasStartTime() == other.hasStartTime());
        if (hasStartTime()) {
          result = result && (getStartTime()
              == other.getStartTime());
        }
        result = result && (hasWinnerStage() == other.hasWinnerStage());
        if (hasWinnerStage()) {
          result = result && getWinnerStage()
              .equals(other.getWinnerStage());
        }
        result = result && (hasLoserStage() == other.hasLoserStage());
        if (hasLoserStage()) {
          result = result && getLoserStage()
              .equals(other.getLoserStage());
        }
        result = result && (hasTeam1Tag() == other.hasTeam1Tag());
        if (hasTeam1Tag()) {
          result = result && getTeam1Tag()
              .equals(other.getTeam1Tag());
        }
        result = result && (hasTeam2Tag() == other.hasTeam2Tag());
        if (hasTeam2Tag()) {
          result = result && getTeam2Tag()
              .equals(other.getTeam2Tag());
        }
        result = result && (hasTeam1PrevOpponentTag() == other.hasTeam1PrevOpponentTag());
        if (hasTeam1PrevOpponentTag()) {
          result = result && getTeam1PrevOpponentTag()
              .equals(other.getTeam1PrevOpponentTag());
        }
        result = result && (hasTeam2PrevOpponentTag() == other.hasTeam2PrevOpponentTag());
        if (hasTeam2PrevOpponentTag()) {
          result = result && getTeam2PrevOpponentTag()
              .equals(other.getTeam2PrevOpponentTag());
        }
        result = result && (hasTeam1Logo() == other.hasTeam1Logo());
        if (hasTeam1Logo()) {
          result = result && (getTeam1Logo()
              == other.getTeam1Logo());
        }
        result = result && (hasTeam2Logo() == other.hasTeam2Logo());
        if (hasTeam2Logo()) {
          result = result && (getTeam2Logo()
              == other.getTeam2Logo());
        }
        result = result && (hasTeam1PrevOpponentLogo() == other.hasTeam1PrevOpponentLogo());
        if (hasTeam1PrevOpponentLogo()) {
          result = result && (getTeam1PrevOpponentLogo()
              == other.getTeam1PrevOpponentLogo());
        }
        result = result && (hasTeam2PrevOpponentLogo() == other.hasTeam2PrevOpponentLogo());
        if (hasTeam2PrevOpponentLogo()) {
          result = result && (getTeam2PrevOpponentLogo()
              == other.getTeam2PrevOpponentLogo());
        }
        result = result && (hasTeam1PrevOpponentId() == other.hasTeam1PrevOpponentId());
        if (hasTeam1PrevOpponentId()) {
          result = result && (getTeam1PrevOpponentId()
              == other.getTeam1PrevOpponentId());
        }
        result = result && (hasTeam2PrevOpponentId() == other.hasTeam2PrevOpponentId());
        if (hasTeam2PrevOpponentId()) {
          result = result && (getTeam2PrevOpponentId()
              == other.getTeam2PrevOpponentId());
        }
        result = result && (hasTeam1PrevMatchScore() == other.hasTeam1PrevMatchScore());
        if (hasTeam1PrevMatchScore()) {
          result = result && (getTeam1PrevMatchScore()
              == other.getTeam1PrevMatchScore());
        }
        result = result && (hasTeam1PrevMatchOpponentScore() == other.hasTeam1PrevMatchOpponentScore());
        if (hasTeam1PrevMatchOpponentScore()) {
          result = result && (getTeam1PrevMatchOpponentScore()
              == other.getTeam1PrevMatchOpponentScore());
        }
        result = result && (hasTeam2PrevMatchScore() == other.hasTeam2PrevMatchScore());
        if (hasTeam2PrevMatchScore()) {
          result = result && (getTeam2PrevMatchScore()
              == other.getTeam2PrevMatchScore());
        }
        result = result && (hasTeam2PrevMatchOpponentScore() == other.hasTeam2PrevMatchOpponentScore());
        if (hasTeam2PrevMatchOpponentScore()) {
          result = result && (getTeam2PrevMatchOpponentScore()
              == other.getTeam2PrevMatchOpponentScore());
        }
        result = result && (hasPhaseType() == other.hasPhaseType());
        if (hasPhaseType()) {
          result = result && (getPhaseType()
              == other.getPhaseType());
        }
        result = result && (hasTeam1Score() == other.hasTeam1Score());
        if (hasTeam1Score()) {
          result = result && (getTeam1Score()
              == other.getTeam1Score());
        }
        result = result && (hasTeam2Score() == other.hasTeam2Score());
        if (hasTeam2Score()) {
          result = result && (getTeam2Score()
              == other.getTeam2Score());
        }
        result = result && (hasPhaseId() == other.hasPhaseId());
        if (hasPhaseId()) {
          result = result && (getPhaseId()
              == other.getPhaseId());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSeriesId()) {
          hash = (37 * hash) + SERIES_ID_FIELD_NUMBER;
          hash = (53 * hash) + getSeriesId();
        }
        if (hasTeam1Id()) {
          hash = (37 * hash) + TEAM1_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeam1Id();
        }
        if (hasTeam2Id()) {
          hash = (37 * hash) + TEAM2_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeam2Id();
        }
        if (hasBo()) {
          hash = (37 * hash) + BO_FIELD_NUMBER;
          hash = (53 * hash) + getBo();
        }
        if (hasStageName()) {
          hash = (37 * hash) + STAGE_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getStageName().hashCode();
        }
        if (hasStartTime()) {
          hash = (37 * hash) + START_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getStartTime();
        }
        if (hasWinnerStage()) {
          hash = (37 * hash) + WINNER_STAGE_FIELD_NUMBER;
          hash = (53 * hash) + getWinnerStage().hashCode();
        }
        if (hasLoserStage()) {
          hash = (37 * hash) + LOSER_STAGE_FIELD_NUMBER;
          hash = (53 * hash) + getLoserStage().hashCode();
        }
        if (hasTeam1Tag()) {
          hash = (37 * hash) + TEAM1_TAG_FIELD_NUMBER;
          hash = (53 * hash) + getTeam1Tag().hashCode();
        }
        if (hasTeam2Tag()) {
          hash = (37 * hash) + TEAM2_TAG_FIELD_NUMBER;
          hash = (53 * hash) + getTeam2Tag().hashCode();
        }
        if (hasTeam1PrevOpponentTag()) {
          hash = (37 * hash) + TEAM1_PREV_OPPONENT_TAG_FIELD_NUMBER;
          hash = (53 * hash) + getTeam1PrevOpponentTag().hashCode();
        }
        if (hasTeam2PrevOpponentTag()) {
          hash = (37 * hash) + TEAM2_PREV_OPPONENT_TAG_FIELD_NUMBER;
          hash = (53 * hash) + getTeam2PrevOpponentTag().hashCode();
        }
        if (hasTeam1Logo()) {
          hash = (37 * hash) + TEAM1_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeam1Logo());
        }
        if (hasTeam2Logo()) {
          hash = (37 * hash) + TEAM2_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeam2Logo());
        }
        if (hasTeam1PrevOpponentLogo()) {
          hash = (37 * hash) + TEAM1_PREV_OPPONENT_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeam1PrevOpponentLogo());
        }
        if (hasTeam2PrevOpponentLogo()) {
          hash = (37 * hash) + TEAM2_PREV_OPPONENT_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeam2PrevOpponentLogo());
        }
        if (hasTeam1PrevOpponentId()) {
          hash = (37 * hash) + TEAM1_PREV_OPPONENT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeam1PrevOpponentId();
        }
        if (hasTeam2PrevOpponentId()) {
          hash = (37 * hash) + TEAM2_PREV_OPPONENT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeam2PrevOpponentId();
        }
        if (hasTeam1PrevMatchScore()) {
          hash = (37 * hash) + TEAM1_PREV_MATCH_SCORE_FIELD_NUMBER;
          hash = (53 * hash) + getTeam1PrevMatchScore();
        }
        if (hasTeam1PrevMatchOpponentScore()) {
          hash = (37 * hash) + TEAM1_PREV_MATCH_OPPONENT_SCORE_FIELD_NUMBER;
          hash = (53 * hash) + getTeam1PrevMatchOpponentScore();
        }
        if (hasTeam2PrevMatchScore()) {
          hash = (37 * hash) + TEAM2_PREV_MATCH_SCORE_FIELD_NUMBER;
          hash = (53 * hash) + getTeam2PrevMatchScore();
        }
        if (hasTeam2PrevMatchOpponentScore()) {
          hash = (37 * hash) + TEAM2_PREV_MATCH_OPPONENT_SCORE_FIELD_NUMBER;
          hash = (53 * hash) + getTeam2PrevMatchOpponentScore();
        }
        if (hasPhaseType()) {
          hash = (37 * hash) + PHASE_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getPhaseType();
        }
        if (hasTeam1Score()) {
          hash = (37 * hash) + TEAM1_SCORE_FIELD_NUMBER;
          hash = (53 * hash) + getTeam1Score();
        }
        if (hasTeam2Score()) {
          hash = (37 * hash) + TEAM2_SCORE_FIELD_NUMBER;
          hash = (53 * hash) + getTeam2Score();
        }
        if (hasPhaseId()) {
          hash = (37 * hash) + PHASE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getPhaseId();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournamentInfo.UpcomingMatch}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentInfo.UpcomingMatch)
          MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatchOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_UpcomingMatch_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_UpcomingMatch_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.class, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          seriesId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          team1Id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          team2Id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          bo_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          stageName_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          startTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          winnerStage_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          loserStage_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          team1Tag_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          team2Tag_ = "";
          bitField0_ = (bitField0_ & ~0x00000200);
          team1PrevOpponentTag_ = "";
          bitField0_ = (bitField0_ & ~0x00000400);
          team2PrevOpponentTag_ = "";
          bitField0_ = (bitField0_ & ~0x00000800);
          team1Logo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00001000);
          team2Logo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00002000);
          team1PrevOpponentLogo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00004000);
          team2PrevOpponentLogo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00008000);
          team1PrevOpponentId_ = 0;
          bitField0_ = (bitField0_ & ~0x00010000);
          team2PrevOpponentId_ = 0;
          bitField0_ = (bitField0_ & ~0x00020000);
          team1PrevMatchScore_ = 0;
          bitField0_ = (bitField0_ & ~0x00040000);
          team1PrevMatchOpponentScore_ = 0;
          bitField0_ = (bitField0_ & ~0x00080000);
          team2PrevMatchScore_ = 0;
          bitField0_ = (bitField0_ & ~0x00100000);
          team2PrevMatchOpponentScore_ = 0;
          bitField0_ = (bitField0_ & ~0x00200000);
          phaseType_ = 0;
          bitField0_ = (bitField0_ & ~0x00400000);
          team1Score_ = 0;
          bitField0_ = (bitField0_ & ~0x00800000);
          team2Score_ = 0;
          bitField0_ = (bitField0_ & ~0x01000000);
          phaseId_ = 0;
          bitField0_ = (bitField0_ & ~0x02000000);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_UpcomingMatch_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch build() {
          MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch buildPartial() {
          MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch result = new MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.seriesId_ = seriesId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.team1Id_ = team1Id_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.team2Id_ = team2Id_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.bo_ = bo_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.stageName_ = stageName_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.startTime_ = startTime_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.winnerStage_ = winnerStage_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.loserStage_ = loserStage_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.team1Tag_ = team1Tag_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.team2Tag_ = team2Tag_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.team1PrevOpponentTag_ = team1PrevOpponentTag_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.team2PrevOpponentTag_ = team2PrevOpponentTag_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.team1Logo_ = team1Logo_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.team2Logo_ = team2Logo_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00004000;
          }
          result.team1PrevOpponentLogo_ = team1PrevOpponentLogo_;
          if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
            to_bitField0_ |= 0x00008000;
          }
          result.team2PrevOpponentLogo_ = team2PrevOpponentLogo_;
          if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
            to_bitField0_ |= 0x00010000;
          }
          result.team1PrevOpponentId_ = team1PrevOpponentId_;
          if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
            to_bitField0_ |= 0x00020000;
          }
          result.team2PrevOpponentId_ = team2PrevOpponentId_;
          if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
            to_bitField0_ |= 0x00040000;
          }
          result.team1PrevMatchScore_ = team1PrevMatchScore_;
          if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
            to_bitField0_ |= 0x00080000;
          }
          result.team1PrevMatchOpponentScore_ = team1PrevMatchOpponentScore_;
          if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
            to_bitField0_ |= 0x00100000;
          }
          result.team2PrevMatchScore_ = team2PrevMatchScore_;
          if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
            to_bitField0_ |= 0x00200000;
          }
          result.team2PrevMatchOpponentScore_ = team2PrevMatchOpponentScore_;
          if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
            to_bitField0_ |= 0x00400000;
          }
          result.phaseType_ = phaseType_;
          if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
            to_bitField0_ |= 0x00800000;
          }
          result.team1Score_ = team1Score_;
          if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
            to_bitField0_ |= 0x01000000;
          }
          result.team2Score_ = team2Score_;
          if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
            to_bitField0_ |= 0x02000000;
          }
          result.phaseId_ = phaseId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch other) {
          if (other == MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.getDefaultInstance()) return this;
          if (other.hasSeriesId()) {
            setSeriesId(other.getSeriesId());
          }
          if (other.hasTeam1Id()) {
            setTeam1Id(other.getTeam1Id());
          }
          if (other.hasTeam2Id()) {
            setTeam2Id(other.getTeam2Id());
          }
          if (other.hasBo()) {
            setBo(other.getBo());
          }
          if (other.hasStageName()) {
            bitField0_ |= 0x00000010;
            stageName_ = other.stageName_;
            onChanged();
          }
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          if (other.hasWinnerStage()) {
            bitField0_ |= 0x00000040;
            winnerStage_ = other.winnerStage_;
            onChanged();
          }
          if (other.hasLoserStage()) {
            bitField0_ |= 0x00000080;
            loserStage_ = other.loserStage_;
            onChanged();
          }
          if (other.hasTeam1Tag()) {
            bitField0_ |= 0x00000100;
            team1Tag_ = other.team1Tag_;
            onChanged();
          }
          if (other.hasTeam2Tag()) {
            bitField0_ |= 0x00000200;
            team2Tag_ = other.team2Tag_;
            onChanged();
          }
          if (other.hasTeam1PrevOpponentTag()) {
            bitField0_ |= 0x00000400;
            team1PrevOpponentTag_ = other.team1PrevOpponentTag_;
            onChanged();
          }
          if (other.hasTeam2PrevOpponentTag()) {
            bitField0_ |= 0x00000800;
            team2PrevOpponentTag_ = other.team2PrevOpponentTag_;
            onChanged();
          }
          if (other.hasTeam1Logo()) {
            setTeam1Logo(other.getTeam1Logo());
          }
          if (other.hasTeam2Logo()) {
            setTeam2Logo(other.getTeam2Logo());
          }
          if (other.hasTeam1PrevOpponentLogo()) {
            setTeam1PrevOpponentLogo(other.getTeam1PrevOpponentLogo());
          }
          if (other.hasTeam2PrevOpponentLogo()) {
            setTeam2PrevOpponentLogo(other.getTeam2PrevOpponentLogo());
          }
          if (other.hasTeam1PrevOpponentId()) {
            setTeam1PrevOpponentId(other.getTeam1PrevOpponentId());
          }
          if (other.hasTeam2PrevOpponentId()) {
            setTeam2PrevOpponentId(other.getTeam2PrevOpponentId());
          }
          if (other.hasTeam1PrevMatchScore()) {
            setTeam1PrevMatchScore(other.getTeam1PrevMatchScore());
          }
          if (other.hasTeam1PrevMatchOpponentScore()) {
            setTeam1PrevMatchOpponentScore(other.getTeam1PrevMatchOpponentScore());
          }
          if (other.hasTeam2PrevMatchScore()) {
            setTeam2PrevMatchScore(other.getTeam2PrevMatchScore());
          }
          if (other.hasTeam2PrevMatchOpponentScore()) {
            setTeam2PrevMatchOpponentScore(other.getTeam2PrevMatchOpponentScore());
          }
          if (other.hasPhaseType()) {
            setPhaseType(other.getPhaseType());
          }
          if (other.hasTeam1Score()) {
            setTeam1Score(other.getTeam1Score());
          }
          if (other.hasTeam2Score()) {
            setTeam2Score(other.getTeam2Score());
          }
          if (other.hasPhaseId()) {
            setPhaseId(other.getPhaseId());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int seriesId_ ;
        /**
         * <code>optional uint32 series_id = 1;</code>
         */
        public boolean hasSeriesId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 series_id = 1;</code>
         */
        public int getSeriesId() {
          return seriesId_;
        }
        /**
         * <code>optional uint32 series_id = 1;</code>
         */
        public Builder setSeriesId(int value) {
          bitField0_ |= 0x00000001;
          seriesId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 series_id = 1;</code>
         */
        public Builder clearSeriesId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          seriesId_ = 0;
          onChanged();
          return this;
        }

        private int team1Id_ ;
        /**
         * <code>optional uint32 team1_id = 2;</code>
         */
        public boolean hasTeam1Id() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 team1_id = 2;</code>
         */
        public int getTeam1Id() {
          return team1Id_;
        }
        /**
         * <code>optional uint32 team1_id = 2;</code>
         */
        public Builder setTeam1Id(int value) {
          bitField0_ |= 0x00000002;
          team1Id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team1_id = 2;</code>
         */
        public Builder clearTeam1Id() {
          bitField0_ = (bitField0_ & ~0x00000002);
          team1Id_ = 0;
          onChanged();
          return this;
        }

        private int team2Id_ ;
        /**
         * <code>optional uint32 team2_id = 3;</code>
         */
        public boolean hasTeam2Id() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 team2_id = 3;</code>
         */
        public int getTeam2Id() {
          return team2Id_;
        }
        /**
         * <code>optional uint32 team2_id = 3;</code>
         */
        public Builder setTeam2Id(int value) {
          bitField0_ |= 0x00000004;
          team2Id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team2_id = 3;</code>
         */
        public Builder clearTeam2Id() {
          bitField0_ = (bitField0_ & ~0x00000004);
          team2Id_ = 0;
          onChanged();
          return this;
        }

        private int bo_ ;
        /**
         * <code>optional uint32 bo = 4;</code>
         */
        public boolean hasBo() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 bo = 4;</code>
         */
        public int getBo() {
          return bo_;
        }
        /**
         * <code>optional uint32 bo = 4;</code>
         */
        public Builder setBo(int value) {
          bitField0_ |= 0x00000008;
          bo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 bo = 4;</code>
         */
        public Builder clearBo() {
          bitField0_ = (bitField0_ & ~0x00000008);
          bo_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object stageName_ = "";
        /**
         * <code>optional string stage_name = 5;</code>
         */
        public boolean hasStageName() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string stage_name = 5;</code>
         */
        public java.lang.String getStageName() {
          java.lang.Object ref = stageName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              stageName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string stage_name = 5;</code>
         */
        public com.google.protobuf.ByteString
            getStageNameBytes() {
          java.lang.Object ref = stageName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stageName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string stage_name = 5;</code>
         */
        public Builder setStageName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          stageName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string stage_name = 5;</code>
         */
        public Builder clearStageName() {
          bitField0_ = (bitField0_ & ~0x00000010);
          stageName_ = getDefaultInstance().getStageName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string stage_name = 5;</code>
         */
        public Builder setStageNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          stageName_ = value;
          onChanged();
          return this;
        }

        private int startTime_ ;
        /**
         * <code>optional uint32 start_time = 6;</code>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 start_time = 6;</code>
         */
        public int getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional uint32 start_time = 6;</code>
         */
        public Builder setStartTime(int value) {
          bitField0_ |= 0x00000020;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_time = 6;</code>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000020);
          startTime_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object winnerStage_ = "";
        /**
         * <code>optional string winner_stage = 7;</code>
         */
        public boolean hasWinnerStage() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string winner_stage = 7;</code>
         */
        public java.lang.String getWinnerStage() {
          java.lang.Object ref = winnerStage_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              winnerStage_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string winner_stage = 7;</code>
         */
        public com.google.protobuf.ByteString
            getWinnerStageBytes() {
          java.lang.Object ref = winnerStage_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            winnerStage_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string winner_stage = 7;</code>
         */
        public Builder setWinnerStage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          winnerStage_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string winner_stage = 7;</code>
         */
        public Builder clearWinnerStage() {
          bitField0_ = (bitField0_ & ~0x00000040);
          winnerStage_ = getDefaultInstance().getWinnerStage();
          onChanged();
          return this;
        }
        /**
         * <code>optional string winner_stage = 7;</code>
         */
        public Builder setWinnerStageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          winnerStage_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object loserStage_ = "";
        /**
         * <code>optional string loser_stage = 8;</code>
         */
        public boolean hasLoserStage() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string loser_stage = 8;</code>
         */
        public java.lang.String getLoserStage() {
          java.lang.Object ref = loserStage_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              loserStage_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string loser_stage = 8;</code>
         */
        public com.google.protobuf.ByteString
            getLoserStageBytes() {
          java.lang.Object ref = loserStage_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            loserStage_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string loser_stage = 8;</code>
         */
        public Builder setLoserStage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          loserStage_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string loser_stage = 8;</code>
         */
        public Builder clearLoserStage() {
          bitField0_ = (bitField0_ & ~0x00000080);
          loserStage_ = getDefaultInstance().getLoserStage();
          onChanged();
          return this;
        }
        /**
         * <code>optional string loser_stage = 8;</code>
         */
        public Builder setLoserStageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          loserStage_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object team1Tag_ = "";
        /**
         * <code>optional string team1_tag = 9;</code>
         */
        public boolean hasTeam1Tag() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional string team1_tag = 9;</code>
         */
        public java.lang.String getTeam1Tag() {
          java.lang.Object ref = team1Tag_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              team1Tag_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team1_tag = 9;</code>
         */
        public com.google.protobuf.ByteString
            getTeam1TagBytes() {
          java.lang.Object ref = team1Tag_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            team1Tag_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team1_tag = 9;</code>
         */
        public Builder setTeam1Tag(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          team1Tag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team1_tag = 9;</code>
         */
        public Builder clearTeam1Tag() {
          bitField0_ = (bitField0_ & ~0x00000100);
          team1Tag_ = getDefaultInstance().getTeam1Tag();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team1_tag = 9;</code>
         */
        public Builder setTeam1TagBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          team1Tag_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object team2Tag_ = "";
        /**
         * <code>optional string team2_tag = 10;</code>
         */
        public boolean hasTeam2Tag() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional string team2_tag = 10;</code>
         */
        public java.lang.String getTeam2Tag() {
          java.lang.Object ref = team2Tag_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              team2Tag_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team2_tag = 10;</code>
         */
        public com.google.protobuf.ByteString
            getTeam2TagBytes() {
          java.lang.Object ref = team2Tag_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            team2Tag_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team2_tag = 10;</code>
         */
        public Builder setTeam2Tag(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
          team2Tag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team2_tag = 10;</code>
         */
        public Builder clearTeam2Tag() {
          bitField0_ = (bitField0_ & ~0x00000200);
          team2Tag_ = getDefaultInstance().getTeam2Tag();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team2_tag = 10;</code>
         */
        public Builder setTeam2TagBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
          team2Tag_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object team1PrevOpponentTag_ = "";
        /**
         * <code>optional string team1_prev_opponent_tag = 11;</code>
         */
        public boolean hasTeam1PrevOpponentTag() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional string team1_prev_opponent_tag = 11;</code>
         */
        public java.lang.String getTeam1PrevOpponentTag() {
          java.lang.Object ref = team1PrevOpponentTag_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              team1PrevOpponentTag_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team1_prev_opponent_tag = 11;</code>
         */
        public com.google.protobuf.ByteString
            getTeam1PrevOpponentTagBytes() {
          java.lang.Object ref = team1PrevOpponentTag_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            team1PrevOpponentTag_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team1_prev_opponent_tag = 11;</code>
         */
        public Builder setTeam1PrevOpponentTag(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
          team1PrevOpponentTag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team1_prev_opponent_tag = 11;</code>
         */
        public Builder clearTeam1PrevOpponentTag() {
          bitField0_ = (bitField0_ & ~0x00000400);
          team1PrevOpponentTag_ = getDefaultInstance().getTeam1PrevOpponentTag();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team1_prev_opponent_tag = 11;</code>
         */
        public Builder setTeam1PrevOpponentTagBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
          team1PrevOpponentTag_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object team2PrevOpponentTag_ = "";
        /**
         * <code>optional string team2_prev_opponent_tag = 12;</code>
         */
        public boolean hasTeam2PrevOpponentTag() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional string team2_prev_opponent_tag = 12;</code>
         */
        public java.lang.String getTeam2PrevOpponentTag() {
          java.lang.Object ref = team2PrevOpponentTag_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              team2PrevOpponentTag_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team2_prev_opponent_tag = 12;</code>
         */
        public com.google.protobuf.ByteString
            getTeam2PrevOpponentTagBytes() {
          java.lang.Object ref = team2PrevOpponentTag_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            team2PrevOpponentTag_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team2_prev_opponent_tag = 12;</code>
         */
        public Builder setTeam2PrevOpponentTag(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
          team2PrevOpponentTag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team2_prev_opponent_tag = 12;</code>
         */
        public Builder clearTeam2PrevOpponentTag() {
          bitField0_ = (bitField0_ & ~0x00000800);
          team2PrevOpponentTag_ = getDefaultInstance().getTeam2PrevOpponentTag();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team2_prev_opponent_tag = 12;</code>
         */
        public Builder setTeam2PrevOpponentTagBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
          team2PrevOpponentTag_ = value;
          onChanged();
          return this;
        }

        private long team1Logo_ ;
        /**
         * <code>optional uint64 team1_logo = 13;</code>
         */
        public boolean hasTeam1Logo() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional uint64 team1_logo = 13;</code>
         */
        public long getTeam1Logo() {
          return team1Logo_;
        }
        /**
         * <code>optional uint64 team1_logo = 13;</code>
         */
        public Builder setTeam1Logo(long value) {
          bitField0_ |= 0x00001000;
          team1Logo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team1_logo = 13;</code>
         */
        public Builder clearTeam1Logo() {
          bitField0_ = (bitField0_ & ~0x00001000);
          team1Logo_ = 0L;
          onChanged();
          return this;
        }

        private long team2Logo_ ;
        /**
         * <code>optional uint64 team2_logo = 14;</code>
         */
        public boolean hasTeam2Logo() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional uint64 team2_logo = 14;</code>
         */
        public long getTeam2Logo() {
          return team2Logo_;
        }
        /**
         * <code>optional uint64 team2_logo = 14;</code>
         */
        public Builder setTeam2Logo(long value) {
          bitField0_ |= 0x00002000;
          team2Logo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team2_logo = 14;</code>
         */
        public Builder clearTeam2Logo() {
          bitField0_ = (bitField0_ & ~0x00002000);
          team2Logo_ = 0L;
          onChanged();
          return this;
        }

        private long team1PrevOpponentLogo_ ;
        /**
         * <code>optional uint64 team1_prev_opponent_logo = 15;</code>
         */
        public boolean hasTeam1PrevOpponentLogo() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional uint64 team1_prev_opponent_logo = 15;</code>
         */
        public long getTeam1PrevOpponentLogo() {
          return team1PrevOpponentLogo_;
        }
        /**
         * <code>optional uint64 team1_prev_opponent_logo = 15;</code>
         */
        public Builder setTeam1PrevOpponentLogo(long value) {
          bitField0_ |= 0x00004000;
          team1PrevOpponentLogo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team1_prev_opponent_logo = 15;</code>
         */
        public Builder clearTeam1PrevOpponentLogo() {
          bitField0_ = (bitField0_ & ~0x00004000);
          team1PrevOpponentLogo_ = 0L;
          onChanged();
          return this;
        }

        private long team2PrevOpponentLogo_ ;
        /**
         * <code>optional uint64 team2_prev_opponent_logo = 16;</code>
         */
        public boolean hasTeam2PrevOpponentLogo() {
          return ((bitField0_ & 0x00008000) == 0x00008000);
        }
        /**
         * <code>optional uint64 team2_prev_opponent_logo = 16;</code>
         */
        public long getTeam2PrevOpponentLogo() {
          return team2PrevOpponentLogo_;
        }
        /**
         * <code>optional uint64 team2_prev_opponent_logo = 16;</code>
         */
        public Builder setTeam2PrevOpponentLogo(long value) {
          bitField0_ |= 0x00008000;
          team2PrevOpponentLogo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team2_prev_opponent_logo = 16;</code>
         */
        public Builder clearTeam2PrevOpponentLogo() {
          bitField0_ = (bitField0_ & ~0x00008000);
          team2PrevOpponentLogo_ = 0L;
          onChanged();
          return this;
        }

        private int team1PrevOpponentId_ ;
        /**
         * <code>optional uint32 team1_prev_opponent_id = 17;</code>
         */
        public boolean hasTeam1PrevOpponentId() {
          return ((bitField0_ & 0x00010000) == 0x00010000);
        }
        /**
         * <code>optional uint32 team1_prev_opponent_id = 17;</code>
         */
        public int getTeam1PrevOpponentId() {
          return team1PrevOpponentId_;
        }
        /**
         * <code>optional uint32 team1_prev_opponent_id = 17;</code>
         */
        public Builder setTeam1PrevOpponentId(int value) {
          bitField0_ |= 0x00010000;
          team1PrevOpponentId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team1_prev_opponent_id = 17;</code>
         */
        public Builder clearTeam1PrevOpponentId() {
          bitField0_ = (bitField0_ & ~0x00010000);
          team1PrevOpponentId_ = 0;
          onChanged();
          return this;
        }

        private int team2PrevOpponentId_ ;
        /**
         * <code>optional uint32 team2_prev_opponent_id = 18;</code>
         */
        public boolean hasTeam2PrevOpponentId() {
          return ((bitField0_ & 0x00020000) == 0x00020000);
        }
        /**
         * <code>optional uint32 team2_prev_opponent_id = 18;</code>
         */
        public int getTeam2PrevOpponentId() {
          return team2PrevOpponentId_;
        }
        /**
         * <code>optional uint32 team2_prev_opponent_id = 18;</code>
         */
        public Builder setTeam2PrevOpponentId(int value) {
          bitField0_ |= 0x00020000;
          team2PrevOpponentId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team2_prev_opponent_id = 18;</code>
         */
        public Builder clearTeam2PrevOpponentId() {
          bitField0_ = (bitField0_ & ~0x00020000);
          team2PrevOpponentId_ = 0;
          onChanged();
          return this;
        }

        private int team1PrevMatchScore_ ;
        /**
         * <code>optional uint32 team1_prev_match_score = 19;</code>
         */
        public boolean hasTeam1PrevMatchScore() {
          return ((bitField0_ & 0x00040000) == 0x00040000);
        }
        /**
         * <code>optional uint32 team1_prev_match_score = 19;</code>
         */
        public int getTeam1PrevMatchScore() {
          return team1PrevMatchScore_;
        }
        /**
         * <code>optional uint32 team1_prev_match_score = 19;</code>
         */
        public Builder setTeam1PrevMatchScore(int value) {
          bitField0_ |= 0x00040000;
          team1PrevMatchScore_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team1_prev_match_score = 19;</code>
         */
        public Builder clearTeam1PrevMatchScore() {
          bitField0_ = (bitField0_ & ~0x00040000);
          team1PrevMatchScore_ = 0;
          onChanged();
          return this;
        }

        private int team1PrevMatchOpponentScore_ ;
        /**
         * <code>optional uint32 team1_prev_match_opponent_score = 20;</code>
         */
        public boolean hasTeam1PrevMatchOpponentScore() {
          return ((bitField0_ & 0x00080000) == 0x00080000);
        }
        /**
         * <code>optional uint32 team1_prev_match_opponent_score = 20;</code>
         */
        public int getTeam1PrevMatchOpponentScore() {
          return team1PrevMatchOpponentScore_;
        }
        /**
         * <code>optional uint32 team1_prev_match_opponent_score = 20;</code>
         */
        public Builder setTeam1PrevMatchOpponentScore(int value) {
          bitField0_ |= 0x00080000;
          team1PrevMatchOpponentScore_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team1_prev_match_opponent_score = 20;</code>
         */
        public Builder clearTeam1PrevMatchOpponentScore() {
          bitField0_ = (bitField0_ & ~0x00080000);
          team1PrevMatchOpponentScore_ = 0;
          onChanged();
          return this;
        }

        private int team2PrevMatchScore_ ;
        /**
         * <code>optional uint32 team2_prev_match_score = 21;</code>
         */
        public boolean hasTeam2PrevMatchScore() {
          return ((bitField0_ & 0x00100000) == 0x00100000);
        }
        /**
         * <code>optional uint32 team2_prev_match_score = 21;</code>
         */
        public int getTeam2PrevMatchScore() {
          return team2PrevMatchScore_;
        }
        /**
         * <code>optional uint32 team2_prev_match_score = 21;</code>
         */
        public Builder setTeam2PrevMatchScore(int value) {
          bitField0_ |= 0x00100000;
          team2PrevMatchScore_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team2_prev_match_score = 21;</code>
         */
        public Builder clearTeam2PrevMatchScore() {
          bitField0_ = (bitField0_ & ~0x00100000);
          team2PrevMatchScore_ = 0;
          onChanged();
          return this;
        }

        private int team2PrevMatchOpponentScore_ ;
        /**
         * <code>optional uint32 team2_prev_match_opponent_score = 22;</code>
         */
        public boolean hasTeam2PrevMatchOpponentScore() {
          return ((bitField0_ & 0x00200000) == 0x00200000);
        }
        /**
         * <code>optional uint32 team2_prev_match_opponent_score = 22;</code>
         */
        public int getTeam2PrevMatchOpponentScore() {
          return team2PrevMatchOpponentScore_;
        }
        /**
         * <code>optional uint32 team2_prev_match_opponent_score = 22;</code>
         */
        public Builder setTeam2PrevMatchOpponentScore(int value) {
          bitField0_ |= 0x00200000;
          team2PrevMatchOpponentScore_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team2_prev_match_opponent_score = 22;</code>
         */
        public Builder clearTeam2PrevMatchOpponentScore() {
          bitField0_ = (bitField0_ & ~0x00200000);
          team2PrevMatchOpponentScore_ = 0;
          onChanged();
          return this;
        }

        private int phaseType_ ;
        /**
         * <code>optional uint32 phase_type = 23;</code>
         */
        public boolean hasPhaseType() {
          return ((bitField0_ & 0x00400000) == 0x00400000);
        }
        /**
         * <code>optional uint32 phase_type = 23;</code>
         */
        public int getPhaseType() {
          return phaseType_;
        }
        /**
         * <code>optional uint32 phase_type = 23;</code>
         */
        public Builder setPhaseType(int value) {
          bitField0_ |= 0x00400000;
          phaseType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 phase_type = 23;</code>
         */
        public Builder clearPhaseType() {
          bitField0_ = (bitField0_ & ~0x00400000);
          phaseType_ = 0;
          onChanged();
          return this;
        }

        private int team1Score_ ;
        /**
         * <code>optional uint32 team1_score = 24;</code>
         */
        public boolean hasTeam1Score() {
          return ((bitField0_ & 0x00800000) == 0x00800000);
        }
        /**
         * <code>optional uint32 team1_score = 24;</code>
         */
        public int getTeam1Score() {
          return team1Score_;
        }
        /**
         * <code>optional uint32 team1_score = 24;</code>
         */
        public Builder setTeam1Score(int value) {
          bitField0_ |= 0x00800000;
          team1Score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team1_score = 24;</code>
         */
        public Builder clearTeam1Score() {
          bitField0_ = (bitField0_ & ~0x00800000);
          team1Score_ = 0;
          onChanged();
          return this;
        }

        private int team2Score_ ;
        /**
         * <code>optional uint32 team2_score = 25;</code>
         */
        public boolean hasTeam2Score() {
          return ((bitField0_ & 0x01000000) == 0x01000000);
        }
        /**
         * <code>optional uint32 team2_score = 25;</code>
         */
        public int getTeam2Score() {
          return team2Score_;
        }
        /**
         * <code>optional uint32 team2_score = 25;</code>
         */
        public Builder setTeam2Score(int value) {
          bitField0_ |= 0x01000000;
          team2Score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team2_score = 25;</code>
         */
        public Builder clearTeam2Score() {
          bitField0_ = (bitField0_ & ~0x01000000);
          team2Score_ = 0;
          onChanged();
          return this;
        }

        private int phaseId_ ;
        /**
         * <code>optional uint32 phase_id = 26;</code>
         */
        public boolean hasPhaseId() {
          return ((bitField0_ & 0x02000000) == 0x02000000);
        }
        /**
         * <code>optional uint32 phase_id = 26;</code>
         */
        public int getPhaseId() {
          return phaseId_;
        }
        /**
         * <code>optional uint32 phase_id = 26;</code>
         */
        public Builder setPhaseId(int value) {
          bitField0_ |= 0x02000000;
          phaseId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 phase_id = 26;</code>
         */
        public Builder clearPhaseId() {
          bitField0_ = (bitField0_ & ~0x02000000);
          phaseId_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentInfo.UpcomingMatch)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournamentInfo.UpcomingMatch)
      private static final MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch();
      }

      public static MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<UpcomingMatch>
          PARSER = new com.google.protobuf.AbstractParser<UpcomingMatch>() {
        public UpcomingMatch parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new UpcomingMatch(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<UpcomingMatch> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<UpcomingMatch> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface NewsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentInfo.News)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string link = 1;</code>
       */
      boolean hasLink();
      /**
       * <code>optional string link = 1;</code>
       */
      java.lang.String getLink();
      /**
       * <code>optional string link = 1;</code>
       */
      com.google.protobuf.ByteString
          getLinkBytes();

      /**
       * <code>optional string title = 2;</code>
       */
      boolean hasTitle();
      /**
       * <code>optional string title = 2;</code>
       */
      java.lang.String getTitle();
      /**
       * <code>optional string title = 2;</code>
       */
      com.google.protobuf.ByteString
          getTitleBytes();

      /**
       * <code>optional string image = 3;</code>
       */
      boolean hasImage();
      /**
       * <code>optional string image = 3;</code>
       */
      java.lang.String getImage();
      /**
       * <code>optional string image = 3;</code>
       */
      com.google.protobuf.ByteString
          getImageBytes();

      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      boolean hasTimestamp();
      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      int getTimestamp();
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentInfo.News}
     */
    public  static final class News extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournamentInfo.News)
        NewsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use News.newBuilder() to construct.
      private News(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private News() {
        link_ = "";
        title_ = "";
        image_ = "";
        timestamp_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private News(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                link_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                title_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                image_ = bs;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                timestamp_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_News_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_News_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournamentInfo.News.class, MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder.class);
      }

      private int bitField0_;
      public static final int LINK_FIELD_NUMBER = 1;
      private volatile java.lang.Object link_;
      /**
       * <code>optional string link = 1;</code>
       */
      public boolean hasLink() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string link = 1;</code>
       */
      public java.lang.String getLink() {
        java.lang.Object ref = link_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            link_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string link = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLinkBytes() {
        java.lang.Object ref = link_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          link_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TITLE_FIELD_NUMBER = 2;
      private volatile java.lang.Object title_;
      /**
       * <code>optional string title = 2;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            title_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int IMAGE_FIELD_NUMBER = 3;
      private volatile java.lang.Object image_;
      /**
       * <code>optional string image = 3;</code>
       */
      public boolean hasImage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string image = 3;</code>
       */
      public java.lang.String getImage() {
        java.lang.Object ref = image_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            image_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string image = 3;</code>
       */
      public com.google.protobuf.ByteString
          getImageBytes() {
        java.lang.Object ref = image_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          image_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TIMESTAMP_FIELD_NUMBER = 4;
      private int timestamp_;
      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 timestamp = 4;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, link_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, title_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, image_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, timestamp_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, link_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, title_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, image_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, timestamp_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournamentInfo.News)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTATournamentInfo.News other = (MsgGCClientTournament.CMsgDOTATournamentInfo.News) obj;

        boolean result = true;
        result = result && (hasLink() == other.hasLink());
        if (hasLink()) {
          result = result && getLink()
              .equals(other.getLink());
        }
        result = result && (hasTitle() == other.hasTitle());
        if (hasTitle()) {
          result = result && getTitle()
              .equals(other.getTitle());
        }
        result = result && (hasImage() == other.hasImage());
        if (hasImage()) {
          result = result && getImage()
              .equals(other.getImage());
        }
        result = result && (hasTimestamp() == other.hasTimestamp());
        if (hasTimestamp()) {
          result = result && (getTimestamp()
              == other.getTimestamp());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasLink()) {
          hash = (37 * hash) + LINK_FIELD_NUMBER;
          hash = (53 * hash) + getLink().hashCode();
        }
        if (hasTitle()) {
          hash = (37 * hash) + TITLE_FIELD_NUMBER;
          hash = (53 * hash) + getTitle().hashCode();
        }
        if (hasImage()) {
          hash = (37 * hash) + IMAGE_FIELD_NUMBER;
          hash = (53 * hash) + getImage().hashCode();
        }
        if (hasTimestamp()) {
          hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + getTimestamp();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournamentInfo.News prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournamentInfo.News}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentInfo.News)
          MsgGCClientTournament.CMsgDOTATournamentInfo.NewsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_News_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_News_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTATournamentInfo.News.class, MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTATournamentInfo.News.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          link_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          title_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          image_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          timestamp_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_News_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.News getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTATournamentInfo.News.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.News build() {
          MsgGCClientTournament.CMsgDOTATournamentInfo.News result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTATournamentInfo.News buildPartial() {
          MsgGCClientTournament.CMsgDOTATournamentInfo.News result = new MsgGCClientTournament.CMsgDOTATournamentInfo.News(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.link_ = link_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.title_ = title_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.image_ = image_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.timestamp_ = timestamp_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTATournamentInfo.News) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTATournamentInfo.News)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournamentInfo.News other) {
          if (other == MsgGCClientTournament.CMsgDOTATournamentInfo.News.getDefaultInstance()) return this;
          if (other.hasLink()) {
            bitField0_ |= 0x00000001;
            link_ = other.link_;
            onChanged();
          }
          if (other.hasTitle()) {
            bitField0_ |= 0x00000002;
            title_ = other.title_;
            onChanged();
          }
          if (other.hasImage()) {
            bitField0_ |= 0x00000004;
            image_ = other.image_;
            onChanged();
          }
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTATournamentInfo.News parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTATournamentInfo.News) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object link_ = "";
        /**
         * <code>optional string link = 1;</code>
         */
        public boolean hasLink() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string link = 1;</code>
         */
        public java.lang.String getLink() {
          java.lang.Object ref = link_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              link_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string link = 1;</code>
         */
        public com.google.protobuf.ByteString
            getLinkBytes() {
          java.lang.Object ref = link_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            link_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string link = 1;</code>
         */
        public Builder setLink(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          link_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string link = 1;</code>
         */
        public Builder clearLink() {
          bitField0_ = (bitField0_ & ~0x00000001);
          link_ = getDefaultInstance().getLink();
          onChanged();
          return this;
        }
        /**
         * <code>optional string link = 1;</code>
         */
        public Builder setLinkBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          link_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object title_ = "";
        /**
         * <code>optional string title = 2;</code>
         */
        public boolean hasTitle() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string title = 2;</code>
         */
        public java.lang.String getTitle() {
          java.lang.Object ref = title_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              title_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string title = 2;</code>
         */
        public com.google.protobuf.ByteString
            getTitleBytes() {
          java.lang.Object ref = title_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            title_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string title = 2;</code>
         */
        public Builder setTitle(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          title_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string title = 2;</code>
         */
        public Builder clearTitle() {
          bitField0_ = (bitField0_ & ~0x00000002);
          title_ = getDefaultInstance().getTitle();
          onChanged();
          return this;
        }
        /**
         * <code>optional string title = 2;</code>
         */
        public Builder setTitleBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          title_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object image_ = "";
        /**
         * <code>optional string image = 3;</code>
         */
        public boolean hasImage() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string image = 3;</code>
         */
        public java.lang.String getImage() {
          java.lang.Object ref = image_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              image_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string image = 3;</code>
         */
        public com.google.protobuf.ByteString
            getImageBytes() {
          java.lang.Object ref = image_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            image_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string image = 3;</code>
         */
        public Builder setImage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          image_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string image = 3;</code>
         */
        public Builder clearImage() {
          bitField0_ = (bitField0_ & ~0x00000004);
          image_ = getDefaultInstance().getImage();
          onChanged();
          return this;
        }
        /**
         * <code>optional string image = 3;</code>
         */
        public Builder setImageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          image_ = value;
          onChanged();
          return this;
        }

        private int timestamp_ ;
        /**
         * <code>optional uint32 timestamp = 4;</code>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 timestamp = 4;</code>
         */
        public int getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional uint32 timestamp = 4;</code>
         */
        public Builder setTimestamp(int value) {
          bitField0_ |= 0x00000008;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 timestamp = 4;</code>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000008);
          timestamp_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentInfo.News)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournamentInfo.News)
      private static final MsgGCClientTournament.CMsgDOTATournamentInfo.News DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournamentInfo.News();
      }

      public static MsgGCClientTournament.CMsgDOTATournamentInfo.News getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<News>
          PARSER = new com.google.protobuf.AbstractParser<News>() {
        public News parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new News(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<News> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<News> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTATournamentInfo.News getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int LEAGUE_ID_FIELD_NUMBER = 1;
    private int leagueId_;
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    public boolean hasLeagueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 league_id = 1;</code>
     */
    public int getLeagueId() {
      return leagueId_;
    }

    public static final int PHASE_LIST_FIELD_NUMBER = 2;
    private java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Phase> phaseList_;
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Phase> getPhaseListList() {
      return phaseList_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseOrBuilder>
        getPhaseListOrBuilderList() {
      return phaseList_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
     */
    public int getPhaseListCount() {
      return phaseList_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentInfo.Phase getPhaseList(int index) {
      return phaseList_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseOrBuilder getPhaseListOrBuilder(
        int index) {
      return phaseList_.get(index);
    }

    public static final int TEAMS_LIST_FIELD_NUMBER = 3;
    private java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Team> teamsList_;
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Team> getTeamsListList() {
      return teamsList_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.TeamOrBuilder>
        getTeamsListOrBuilderList() {
      return teamsList_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
     */
    public int getTeamsListCount() {
      return teamsList_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentInfo.Team getTeamsList(int index) {
      return teamsList_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentInfo.TeamOrBuilder getTeamsListOrBuilder(
        int index) {
      return teamsList_.get(index);
    }

    public static final int UPCOMING_MATCHES_LIST_FIELD_NUMBER = 4;
    private java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch> upcomingMatchesList_;
    /**
     * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch> getUpcomingMatchesListList() {
      return upcomingMatchesList_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatchOrBuilder>
        getUpcomingMatchesListOrBuilderList() {
      return upcomingMatchesList_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
     */
    public int getUpcomingMatchesListCount() {
      return upcomingMatchesList_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch getUpcomingMatchesList(int index) {
      return upcomingMatchesList_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatchOrBuilder getUpcomingMatchesListOrBuilder(
        int index) {
      return upcomingMatchesList_.get(index);
    }

    public static final int NEWS_LIST_FIELD_NUMBER = 5;
    private java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.News> newsList_;
    /**
     * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.News> getNewsListList() {
      return newsList_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.NewsOrBuilder>
        getNewsListOrBuilderList() {
      return newsList_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
     */
    public int getNewsListCount() {
      return newsList_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentInfo.News getNewsList(int index) {
      return newsList_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentInfo.NewsOrBuilder getNewsListOrBuilder(
        int index) {
      return newsList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, leagueId_);
      }
      for (int i = 0; i < phaseList_.size(); i++) {
        output.writeMessage(2, phaseList_.get(i));
      }
      for (int i = 0; i < teamsList_.size(); i++) {
        output.writeMessage(3, teamsList_.get(i));
      }
      for (int i = 0; i < upcomingMatchesList_.size(); i++) {
        output.writeMessage(4, upcomingMatchesList_.get(i));
      }
      for (int i = 0; i < newsList_.size(); i++) {
        output.writeMessage(5, newsList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, leagueId_);
      }
      for (int i = 0; i < phaseList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, phaseList_.get(i));
      }
      for (int i = 0; i < teamsList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, teamsList_.get(i));
      }
      for (int i = 0; i < upcomingMatchesList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, upcomingMatchesList_.get(i));
      }
      for (int i = 0; i < newsList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, newsList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournamentInfo)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTATournamentInfo other = (MsgGCClientTournament.CMsgDOTATournamentInfo) obj;

      boolean result = true;
      result = result && (hasLeagueId() == other.hasLeagueId());
      if (hasLeagueId()) {
        result = result && (getLeagueId()
            == other.getLeagueId());
      }
      result = result && getPhaseListList()
          .equals(other.getPhaseListList());
      result = result && getTeamsListList()
          .equals(other.getTeamsListList());
      result = result && getUpcomingMatchesListList()
          .equals(other.getUpcomingMatchesListList());
      result = result && getNewsListList()
          .equals(other.getNewsListList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLeagueId()) {
        hash = (37 * hash) + LEAGUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLeagueId();
      }
      if (getPhaseListCount() > 0) {
        hash = (37 * hash) + PHASE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getPhaseListList().hashCode();
      }
      if (getTeamsListCount() > 0) {
        hash = (37 * hash) + TEAMS_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getTeamsListList().hashCode();
      }
      if (getUpcomingMatchesListCount() > 0) {
        hash = (37 * hash) + UPCOMING_MATCHES_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getUpcomingMatchesListList().hashCode();
      }
      if (getNewsListCount() > 0) {
        hash = (37 * hash) + NEWS_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getNewsListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournamentInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentInfo)
        MsgGCClientTournament.CMsgDOTATournamentInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournamentInfo.class, MsgGCClientTournament.CMsgDOTATournamentInfo.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTATournamentInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPhaseListFieldBuilder();
          getTeamsListFieldBuilder();
          getUpcomingMatchesListFieldBuilder();
          getNewsListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        leagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (phaseListBuilder_ == null) {
          phaseList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          phaseListBuilder_.clear();
        }
        if (teamsListBuilder_ == null) {
          teamsList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          teamsListBuilder_.clear();
        }
        if (upcomingMatchesListBuilder_ == null) {
          upcomingMatchesList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          upcomingMatchesListBuilder_.clear();
        }
        if (newsListBuilder_ == null) {
          newsList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          newsListBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentInfo_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTATournamentInfo getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTATournamentInfo.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTATournamentInfo build() {
        MsgGCClientTournament.CMsgDOTATournamentInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTATournamentInfo buildPartial() {
        MsgGCClientTournament.CMsgDOTATournamentInfo result = new MsgGCClientTournament.CMsgDOTATournamentInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.leagueId_ = leagueId_;
        if (phaseListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            phaseList_ = java.util.Collections.unmodifiableList(phaseList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.phaseList_ = phaseList_;
        } else {
          result.phaseList_ = phaseListBuilder_.build();
        }
        if (teamsListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            teamsList_ = java.util.Collections.unmodifiableList(teamsList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.teamsList_ = teamsList_;
        } else {
          result.teamsList_ = teamsListBuilder_.build();
        }
        if (upcomingMatchesListBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            upcomingMatchesList_ = java.util.Collections.unmodifiableList(upcomingMatchesList_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.upcomingMatchesList_ = upcomingMatchesList_;
        } else {
          result.upcomingMatchesList_ = upcomingMatchesListBuilder_.build();
        }
        if (newsListBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            newsList_ = java.util.Collections.unmodifiableList(newsList_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.newsList_ = newsList_;
        } else {
          result.newsList_ = newsListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTATournamentInfo) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTATournamentInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournamentInfo other) {
        if (other == MsgGCClientTournament.CMsgDOTATournamentInfo.getDefaultInstance()) return this;
        if (other.hasLeagueId()) {
          setLeagueId(other.getLeagueId());
        }
        if (phaseListBuilder_ == null) {
          if (!other.phaseList_.isEmpty()) {
            if (phaseList_.isEmpty()) {
              phaseList_ = other.phaseList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePhaseListIsMutable();
              phaseList_.addAll(other.phaseList_);
            }
            onChanged();
          }
        } else {
          if (!other.phaseList_.isEmpty()) {
            if (phaseListBuilder_.isEmpty()) {
              phaseListBuilder_.dispose();
              phaseListBuilder_ = null;
              phaseList_ = other.phaseList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              phaseListBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPhaseListFieldBuilder() : null;
            } else {
              phaseListBuilder_.addAllMessages(other.phaseList_);
            }
          }
        }
        if (teamsListBuilder_ == null) {
          if (!other.teamsList_.isEmpty()) {
            if (teamsList_.isEmpty()) {
              teamsList_ = other.teamsList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTeamsListIsMutable();
              teamsList_.addAll(other.teamsList_);
            }
            onChanged();
          }
        } else {
          if (!other.teamsList_.isEmpty()) {
            if (teamsListBuilder_.isEmpty()) {
              teamsListBuilder_.dispose();
              teamsListBuilder_ = null;
              teamsList_ = other.teamsList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              teamsListBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTeamsListFieldBuilder() : null;
            } else {
              teamsListBuilder_.addAllMessages(other.teamsList_);
            }
          }
        }
        if (upcomingMatchesListBuilder_ == null) {
          if (!other.upcomingMatchesList_.isEmpty()) {
            if (upcomingMatchesList_.isEmpty()) {
              upcomingMatchesList_ = other.upcomingMatchesList_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureUpcomingMatchesListIsMutable();
              upcomingMatchesList_.addAll(other.upcomingMatchesList_);
            }
            onChanged();
          }
        } else {
          if (!other.upcomingMatchesList_.isEmpty()) {
            if (upcomingMatchesListBuilder_.isEmpty()) {
              upcomingMatchesListBuilder_.dispose();
              upcomingMatchesListBuilder_ = null;
              upcomingMatchesList_ = other.upcomingMatchesList_;
              bitField0_ = (bitField0_ & ~0x00000008);
              upcomingMatchesListBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUpcomingMatchesListFieldBuilder() : null;
            } else {
              upcomingMatchesListBuilder_.addAllMessages(other.upcomingMatchesList_);
            }
          }
        }
        if (newsListBuilder_ == null) {
          if (!other.newsList_.isEmpty()) {
            if (newsList_.isEmpty()) {
              newsList_ = other.newsList_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureNewsListIsMutable();
              newsList_.addAll(other.newsList_);
            }
            onChanged();
          }
        } else {
          if (!other.newsList_.isEmpty()) {
            if (newsListBuilder_.isEmpty()) {
              newsListBuilder_.dispose();
              newsListBuilder_ = null;
              newsList_ = other.newsList_;
              bitField0_ = (bitField0_ & ~0x00000010);
              newsListBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNewsListFieldBuilder() : null;
            } else {
              newsListBuilder_.addAllMessages(other.newsList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTATournamentInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTATournamentInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int leagueId_ ;
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public int getLeagueId() {
        return leagueId_;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public Builder setLeagueId(int value) {
        bitField0_ |= 0x00000001;
        leagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 league_id = 1;</code>
       */
      public Builder clearLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Phase> phaseList_ =
        java.util.Collections.emptyList();
      private void ensurePhaseListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          phaseList_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentInfo.Phase>(phaseList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentInfo.Phase, MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseOrBuilder> phaseListBuilder_;

      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Phase> getPhaseListList() {
        if (phaseListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(phaseList_);
        } else {
          return phaseListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public int getPhaseListCount() {
        if (phaseListBuilder_ == null) {
          return phaseList_.size();
        } else {
          return phaseListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.Phase getPhaseList(int index) {
        if (phaseListBuilder_ == null) {
          return phaseList_.get(index);
        } else {
          return phaseListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public Builder setPhaseList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.Phase value) {
        if (phaseListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhaseListIsMutable();
          phaseList_.set(index, value);
          onChanged();
        } else {
          phaseListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public Builder setPhaseList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder builderForValue) {
        if (phaseListBuilder_ == null) {
          ensurePhaseListIsMutable();
          phaseList_.set(index, builderForValue.build());
          onChanged();
        } else {
          phaseListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public Builder addPhaseList(MsgGCClientTournament.CMsgDOTATournamentInfo.Phase value) {
        if (phaseListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhaseListIsMutable();
          phaseList_.add(value);
          onChanged();
        } else {
          phaseListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public Builder addPhaseList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.Phase value) {
        if (phaseListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhaseListIsMutable();
          phaseList_.add(index, value);
          onChanged();
        } else {
          phaseListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public Builder addPhaseList(
          MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder builderForValue) {
        if (phaseListBuilder_ == null) {
          ensurePhaseListIsMutable();
          phaseList_.add(builderForValue.build());
          onChanged();
        } else {
          phaseListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public Builder addPhaseList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder builderForValue) {
        if (phaseListBuilder_ == null) {
          ensurePhaseListIsMutable();
          phaseList_.add(index, builderForValue.build());
          onChanged();
        } else {
          phaseListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public Builder addAllPhaseList(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.Phase> values) {
        if (phaseListBuilder_ == null) {
          ensurePhaseListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, phaseList_);
          onChanged();
        } else {
          phaseListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public Builder clearPhaseList() {
        if (phaseListBuilder_ == null) {
          phaseList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          phaseListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public Builder removePhaseList(int index) {
        if (phaseListBuilder_ == null) {
          ensurePhaseListIsMutable();
          phaseList_.remove(index);
          onChanged();
        } else {
          phaseListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder getPhaseListBuilder(
          int index) {
        return getPhaseListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseOrBuilder getPhaseListOrBuilder(
          int index) {
        if (phaseListBuilder_ == null) {
          return phaseList_.get(index);  } else {
          return phaseListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseOrBuilder>
           getPhaseListOrBuilderList() {
        if (phaseListBuilder_ != null) {
          return phaseListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(phaseList_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder addPhaseListBuilder() {
        return getPhaseListFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder addPhaseListBuilder(
          int index) {
        return getPhaseListFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Phase phase_list = 2;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder>
           getPhaseListBuilderList() {
        return getPhaseListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentInfo.Phase, MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseOrBuilder>
          getPhaseListFieldBuilder() {
        if (phaseListBuilder_ == null) {
          phaseListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTATournamentInfo.Phase, MsgGCClientTournament.CMsgDOTATournamentInfo.Phase.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.PhaseOrBuilder>(
                  phaseList_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          phaseList_ = null;
        }
        return phaseListBuilder_;
      }

      private java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Team> teamsList_ =
        java.util.Collections.emptyList();
      private void ensureTeamsListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          teamsList_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentInfo.Team>(teamsList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentInfo.Team, MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.TeamOrBuilder> teamsListBuilder_;

      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Team> getTeamsListList() {
        if (teamsListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teamsList_);
        } else {
          return teamsListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public int getTeamsListCount() {
        if (teamsListBuilder_ == null) {
          return teamsList_.size();
        } else {
          return teamsListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.Team getTeamsList(int index) {
        if (teamsListBuilder_ == null) {
          return teamsList_.get(index);
        } else {
          return teamsListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public Builder setTeamsList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.Team value) {
        if (teamsListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsListIsMutable();
          teamsList_.set(index, value);
          onChanged();
        } else {
          teamsListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public Builder setTeamsList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder builderForValue) {
        if (teamsListBuilder_ == null) {
          ensureTeamsListIsMutable();
          teamsList_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamsListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public Builder addTeamsList(MsgGCClientTournament.CMsgDOTATournamentInfo.Team value) {
        if (teamsListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsListIsMutable();
          teamsList_.add(value);
          onChanged();
        } else {
          teamsListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public Builder addTeamsList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.Team value) {
        if (teamsListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsListIsMutable();
          teamsList_.add(index, value);
          onChanged();
        } else {
          teamsListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public Builder addTeamsList(
          MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder builderForValue) {
        if (teamsListBuilder_ == null) {
          ensureTeamsListIsMutable();
          teamsList_.add(builderForValue.build());
          onChanged();
        } else {
          teamsListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public Builder addTeamsList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder builderForValue) {
        if (teamsListBuilder_ == null) {
          ensureTeamsListIsMutable();
          teamsList_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamsListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public Builder addAllTeamsList(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.Team> values) {
        if (teamsListBuilder_ == null) {
          ensureTeamsListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teamsList_);
          onChanged();
        } else {
          teamsListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public Builder clearTeamsList() {
        if (teamsListBuilder_ == null) {
          teamsList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          teamsListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public Builder removeTeamsList(int index) {
        if (teamsListBuilder_ == null) {
          ensureTeamsListIsMutable();
          teamsList_.remove(index);
          onChanged();
        } else {
          teamsListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder getTeamsListBuilder(
          int index) {
        return getTeamsListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.TeamOrBuilder getTeamsListOrBuilder(
          int index) {
        if (teamsListBuilder_ == null) {
          return teamsList_.get(index);  } else {
          return teamsListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.TeamOrBuilder>
           getTeamsListOrBuilderList() {
        if (teamsListBuilder_ != null) {
          return teamsListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teamsList_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder addTeamsListBuilder() {
        return getTeamsListFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTATournamentInfo.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder addTeamsListBuilder(
          int index) {
        return getTeamsListFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTATournamentInfo.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.Team teams_list = 3;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder>
           getTeamsListBuilderList() {
        return getTeamsListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentInfo.Team, MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.TeamOrBuilder>
          getTeamsListFieldBuilder() {
        if (teamsListBuilder_ == null) {
          teamsListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTATournamentInfo.Team, MsgGCClientTournament.CMsgDOTATournamentInfo.Team.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.TeamOrBuilder>(
                  teamsList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          teamsList_ = null;
        }
        return teamsListBuilder_;
      }

      private java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch> upcomingMatchesList_ =
        java.util.Collections.emptyList();
      private void ensureUpcomingMatchesListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          upcomingMatchesList_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch>(upcomingMatchesList_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatchOrBuilder> upcomingMatchesListBuilder_;

      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch> getUpcomingMatchesListList() {
        if (upcomingMatchesListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(upcomingMatchesList_);
        } else {
          return upcomingMatchesListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public int getUpcomingMatchesListCount() {
        if (upcomingMatchesListBuilder_ == null) {
          return upcomingMatchesList_.size();
        } else {
          return upcomingMatchesListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch getUpcomingMatchesList(int index) {
        if (upcomingMatchesListBuilder_ == null) {
          return upcomingMatchesList_.get(index);
        } else {
          return upcomingMatchesListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public Builder setUpcomingMatchesList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch value) {
        if (upcomingMatchesListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpcomingMatchesListIsMutable();
          upcomingMatchesList_.set(index, value);
          onChanged();
        } else {
          upcomingMatchesListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public Builder setUpcomingMatchesList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder builderForValue) {
        if (upcomingMatchesListBuilder_ == null) {
          ensureUpcomingMatchesListIsMutable();
          upcomingMatchesList_.set(index, builderForValue.build());
          onChanged();
        } else {
          upcomingMatchesListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public Builder addUpcomingMatchesList(MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch value) {
        if (upcomingMatchesListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpcomingMatchesListIsMutable();
          upcomingMatchesList_.add(value);
          onChanged();
        } else {
          upcomingMatchesListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public Builder addUpcomingMatchesList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch value) {
        if (upcomingMatchesListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpcomingMatchesListIsMutable();
          upcomingMatchesList_.add(index, value);
          onChanged();
        } else {
          upcomingMatchesListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public Builder addUpcomingMatchesList(
          MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder builderForValue) {
        if (upcomingMatchesListBuilder_ == null) {
          ensureUpcomingMatchesListIsMutable();
          upcomingMatchesList_.add(builderForValue.build());
          onChanged();
        } else {
          upcomingMatchesListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public Builder addUpcomingMatchesList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder builderForValue) {
        if (upcomingMatchesListBuilder_ == null) {
          ensureUpcomingMatchesListIsMutable();
          upcomingMatchesList_.add(index, builderForValue.build());
          onChanged();
        } else {
          upcomingMatchesListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public Builder addAllUpcomingMatchesList(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch> values) {
        if (upcomingMatchesListBuilder_ == null) {
          ensureUpcomingMatchesListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, upcomingMatchesList_);
          onChanged();
        } else {
          upcomingMatchesListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public Builder clearUpcomingMatchesList() {
        if (upcomingMatchesListBuilder_ == null) {
          upcomingMatchesList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          upcomingMatchesListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public Builder removeUpcomingMatchesList(int index) {
        if (upcomingMatchesListBuilder_ == null) {
          ensureUpcomingMatchesListIsMutable();
          upcomingMatchesList_.remove(index);
          onChanged();
        } else {
          upcomingMatchesListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder getUpcomingMatchesListBuilder(
          int index) {
        return getUpcomingMatchesListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatchOrBuilder getUpcomingMatchesListOrBuilder(
          int index) {
        if (upcomingMatchesListBuilder_ == null) {
          return upcomingMatchesList_.get(index);  } else {
          return upcomingMatchesListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatchOrBuilder>
           getUpcomingMatchesListOrBuilderList() {
        if (upcomingMatchesListBuilder_ != null) {
          return upcomingMatchesListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(upcomingMatchesList_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder addUpcomingMatchesListBuilder() {
        return getUpcomingMatchesListFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder addUpcomingMatchesListBuilder(
          int index) {
        return getUpcomingMatchesListFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.UpcomingMatch upcoming_matches_list = 4;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder>
           getUpcomingMatchesListBuilderList() {
        return getUpcomingMatchesListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatchOrBuilder>
          getUpcomingMatchesListFieldBuilder() {
        if (upcomingMatchesListBuilder_ == null) {
          upcomingMatchesListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatch.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.UpcomingMatchOrBuilder>(
                  upcomingMatchesList_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          upcomingMatchesList_ = null;
        }
        return upcomingMatchesListBuilder_;
      }

      private java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.News> newsList_ =
        java.util.Collections.emptyList();
      private void ensureNewsListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          newsList_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentInfo.News>(newsList_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentInfo.News, MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.NewsOrBuilder> newsListBuilder_;

      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.News> getNewsListList() {
        if (newsListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(newsList_);
        } else {
          return newsListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public int getNewsListCount() {
        if (newsListBuilder_ == null) {
          return newsList_.size();
        } else {
          return newsListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.News getNewsList(int index) {
        if (newsListBuilder_ == null) {
          return newsList_.get(index);
        } else {
          return newsListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public Builder setNewsList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.News value) {
        if (newsListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewsListIsMutable();
          newsList_.set(index, value);
          onChanged();
        } else {
          newsListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public Builder setNewsList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder builderForValue) {
        if (newsListBuilder_ == null) {
          ensureNewsListIsMutable();
          newsList_.set(index, builderForValue.build());
          onChanged();
        } else {
          newsListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public Builder addNewsList(MsgGCClientTournament.CMsgDOTATournamentInfo.News value) {
        if (newsListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewsListIsMutable();
          newsList_.add(value);
          onChanged();
        } else {
          newsListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public Builder addNewsList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.News value) {
        if (newsListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewsListIsMutable();
          newsList_.add(index, value);
          onChanged();
        } else {
          newsListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public Builder addNewsList(
          MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder builderForValue) {
        if (newsListBuilder_ == null) {
          ensureNewsListIsMutable();
          newsList_.add(builderForValue.build());
          onChanged();
        } else {
          newsListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public Builder addNewsList(
          int index, MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder builderForValue) {
        if (newsListBuilder_ == null) {
          ensureNewsListIsMutable();
          newsList_.add(index, builderForValue.build());
          onChanged();
        } else {
          newsListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public Builder addAllNewsList(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.News> values) {
        if (newsListBuilder_ == null) {
          ensureNewsListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, newsList_);
          onChanged();
        } else {
          newsListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public Builder clearNewsList() {
        if (newsListBuilder_ == null) {
          newsList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          newsListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public Builder removeNewsList(int index) {
        if (newsListBuilder_ == null) {
          ensureNewsListIsMutable();
          newsList_.remove(index);
          onChanged();
        } else {
          newsListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder getNewsListBuilder(
          int index) {
        return getNewsListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.NewsOrBuilder getNewsListOrBuilder(
          int index) {
        if (newsListBuilder_ == null) {
          return newsList_.get(index);  } else {
          return newsListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentInfo.NewsOrBuilder>
           getNewsListOrBuilderList() {
        if (newsListBuilder_ != null) {
          return newsListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(newsList_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder addNewsListBuilder() {
        return getNewsListFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTATournamentInfo.News.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder addNewsListBuilder(
          int index) {
        return getNewsListFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTATournamentInfo.News.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentInfo.News news_list = 5;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder>
           getNewsListBuilderList() {
        return getNewsListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentInfo.News, MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.NewsOrBuilder>
          getNewsListFieldBuilder() {
        if (newsListBuilder_ == null) {
          newsListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTATournamentInfo.News, MsgGCClientTournament.CMsgDOTATournamentInfo.News.Builder, MsgGCClientTournament.CMsgDOTATournamentInfo.NewsOrBuilder>(
                  newsList_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          newsList_ = null;
        }
        return newsListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentInfo)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTATournamentInfo)
    private static final MsgGCClientTournament.CMsgDOTATournamentInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournamentInfo();
    }

    public static MsgGCClientTournament.CMsgDOTATournamentInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTATournamentInfo>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTATournamentInfo>() {
      public CMsgDOTATournamentInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTATournamentInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTATournamentInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTATournamentInfo> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTATournamentInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgRequestWeekendTourneyScheduleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgRequestWeekendTourneySchedule)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CMsgRequestWeekendTourneySchedule}
   */
  public  static final class CMsgRequestWeekendTourneySchedule extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgRequestWeekendTourneySchedule)
      CMsgRequestWeekendTourneyScheduleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgRequestWeekendTourneySchedule.newBuilder() to construct.
    private CMsgRequestWeekendTourneySchedule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgRequestWeekendTourneySchedule() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgRequestWeekendTourneySchedule(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgRequestWeekendTourneySchedule_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgRequestWeekendTourneySchedule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgRequestWeekendTourneySchedule.class, MsgGCClientTournament.CMsgRequestWeekendTourneySchedule.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgRequestWeekendTourneySchedule)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgRequestWeekendTourneySchedule other = (MsgGCClientTournament.CMsgRequestWeekendTourneySchedule) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgRequestWeekendTourneySchedule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgRequestWeekendTourneySchedule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgRequestWeekendTourneySchedule)
        MsgGCClientTournament.CMsgRequestWeekendTourneyScheduleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgRequestWeekendTourneySchedule_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgRequestWeekendTourneySchedule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgRequestWeekendTourneySchedule.class, MsgGCClientTournament.CMsgRequestWeekendTourneySchedule.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgRequestWeekendTourneySchedule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgRequestWeekendTourneySchedule_descriptor;
      }

      public MsgGCClientTournament.CMsgRequestWeekendTourneySchedule getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgRequestWeekendTourneySchedule.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgRequestWeekendTourneySchedule build() {
        MsgGCClientTournament.CMsgRequestWeekendTourneySchedule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgRequestWeekendTourneySchedule buildPartial() {
        MsgGCClientTournament.CMsgRequestWeekendTourneySchedule result = new MsgGCClientTournament.CMsgRequestWeekendTourneySchedule(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgRequestWeekendTourneySchedule) {
          return mergeFrom((MsgGCClientTournament.CMsgRequestWeekendTourneySchedule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgRequestWeekendTourneySchedule other) {
        if (other == MsgGCClientTournament.CMsgRequestWeekendTourneySchedule.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgRequestWeekendTourneySchedule parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgRequestWeekendTourneySchedule) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgRequestWeekendTourneySchedule)
    }

    // @@protoc_insertion_point(class_scope:CMsgRequestWeekendTourneySchedule)
    private static final MsgGCClientTournament.CMsgRequestWeekendTourneySchedule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgRequestWeekendTourneySchedule();
    }

    public static MsgGCClientTournament.CMsgRequestWeekendTourneySchedule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgRequestWeekendTourneySchedule>
        PARSER = new com.google.protobuf.AbstractParser<CMsgRequestWeekendTourneySchedule>() {
      public CMsgRequestWeekendTourneySchedule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgRequestWeekendTourneySchedule(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgRequestWeekendTourneySchedule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgRequestWeekendTourneySchedule> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgRequestWeekendTourneySchedule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgWeekendTourneyScheduleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgWeekendTourneySchedule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgWeekendTourneySchedule.Division>
        getDivisionsList();
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    MsgGCClientTournament.CMsgWeekendTourneySchedule.Division getDivisions(int index);
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    int getDivisionsCount();
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder>
        getDivisionsOrBuilderList();
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    MsgGCClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder getDivisionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgWeekendTourneySchedule}
   */
  public  static final class CMsgWeekendTourneySchedule extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgWeekendTourneySchedule)
      CMsgWeekendTourneyScheduleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgWeekendTourneySchedule.newBuilder() to construct.
    private CMsgWeekendTourneySchedule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgWeekendTourneySchedule() {
      divisions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgWeekendTourneySchedule(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                divisions_ = new java.util.ArrayList<MsgGCClientTournament.CMsgWeekendTourneySchedule.Division>();
                mutable_bitField0_ |= 0x00000001;
              }
              divisions_.add(
                  input.readMessage(MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          divisions_ = java.util.Collections.unmodifiableList(divisions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgWeekendTourneySchedule_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgWeekendTourneySchedule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgWeekendTourneySchedule.class, MsgGCClientTournament.CMsgWeekendTourneySchedule.Builder.class);
    }

    public interface DivisionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgWeekendTourneySchedule.Division)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 division_code = 1;</code>
       */
      boolean hasDivisionCode();
      /**
       * <code>optional uint32 division_code = 1;</code>
       */
      int getDivisionCode();

      /**
       * <code>optional uint32 time_window_open = 2;</code>
       */
      boolean hasTimeWindowOpen();
      /**
       * <code>optional uint32 time_window_open = 2;</code>
       */
      int getTimeWindowOpen();

      /**
       * <code>optional uint32 time_window_close = 3;</code>
       */
      boolean hasTimeWindowClose();
      /**
       * <code>optional uint32 time_window_close = 3;</code>
       */
      int getTimeWindowClose();

      /**
       * <code>optional uint32 time_window_open_next = 4;</code>
       */
      boolean hasTimeWindowOpenNext();
      /**
       * <code>optional uint32 time_window_open_next = 4;</code>
       */
      int getTimeWindowOpenNext();

      /**
       * <code>optional uint32 trophy_id = 5;</code>
       */
      boolean hasTrophyId();
      /**
       * <code>optional uint32 trophy_id = 5;</code>
       */
      int getTrophyId();

      /**
       * <code>optional bool free_weekend = 6;</code>
       */
      boolean hasFreeWeekend();
      /**
       * <code>optional bool free_weekend = 6;</code>
       */
      boolean getFreeWeekend();
    }
    /**
     * Protobuf type {@code CMsgWeekendTourneySchedule.Division}
     */
    public  static final class Division extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgWeekendTourneySchedule.Division)
        DivisionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Division.newBuilder() to construct.
      private Division(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Division() {
        divisionCode_ = 0;
        timeWindowOpen_ = 0;
        timeWindowClose_ = 0;
        timeWindowOpenNext_ = 0;
        trophyId_ = 0;
        freeWeekend_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Division(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                divisionCode_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                timeWindowOpen_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                timeWindowClose_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                timeWindowOpenNext_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                trophyId_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                freeWeekend_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgWeekendTourneySchedule_Division_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgWeekendTourneySchedule_Division_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.class, MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder.class);
      }

      private int bitField0_;
      public static final int DIVISION_CODE_FIELD_NUMBER = 1;
      private int divisionCode_;
      /**
       * <code>optional uint32 division_code = 1;</code>
       */
      public boolean hasDivisionCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 division_code = 1;</code>
       */
      public int getDivisionCode() {
        return divisionCode_;
      }

      public static final int TIME_WINDOW_OPEN_FIELD_NUMBER = 2;
      private int timeWindowOpen_;
      /**
       * <code>optional uint32 time_window_open = 2;</code>
       */
      public boolean hasTimeWindowOpen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 time_window_open = 2;</code>
       */
      public int getTimeWindowOpen() {
        return timeWindowOpen_;
      }

      public static final int TIME_WINDOW_CLOSE_FIELD_NUMBER = 3;
      private int timeWindowClose_;
      /**
       * <code>optional uint32 time_window_close = 3;</code>
       */
      public boolean hasTimeWindowClose() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 time_window_close = 3;</code>
       */
      public int getTimeWindowClose() {
        return timeWindowClose_;
      }

      public static final int TIME_WINDOW_OPEN_NEXT_FIELD_NUMBER = 4;
      private int timeWindowOpenNext_;
      /**
       * <code>optional uint32 time_window_open_next = 4;</code>
       */
      public boolean hasTimeWindowOpenNext() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 time_window_open_next = 4;</code>
       */
      public int getTimeWindowOpenNext() {
        return timeWindowOpenNext_;
      }

      public static final int TROPHY_ID_FIELD_NUMBER = 5;
      private int trophyId_;
      /**
       * <code>optional uint32 trophy_id = 5;</code>
       */
      public boolean hasTrophyId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 trophy_id = 5;</code>
       */
      public int getTrophyId() {
        return trophyId_;
      }

      public static final int FREE_WEEKEND_FIELD_NUMBER = 6;
      private boolean freeWeekend_;
      /**
       * <code>optional bool free_weekend = 6;</code>
       */
      public boolean hasFreeWeekend() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool free_weekend = 6;</code>
       */
      public boolean getFreeWeekend() {
        return freeWeekend_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, divisionCode_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, timeWindowOpen_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, timeWindowClose_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, timeWindowOpenNext_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, trophyId_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, freeWeekend_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, divisionCode_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, timeWindowOpen_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, timeWindowClose_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, timeWindowOpenNext_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, trophyId_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, freeWeekend_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgWeekendTourneySchedule.Division)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgWeekendTourneySchedule.Division other = (MsgGCClientTournament.CMsgWeekendTourneySchedule.Division) obj;

        boolean result = true;
        result = result && (hasDivisionCode() == other.hasDivisionCode());
        if (hasDivisionCode()) {
          result = result && (getDivisionCode()
              == other.getDivisionCode());
        }
        result = result && (hasTimeWindowOpen() == other.hasTimeWindowOpen());
        if (hasTimeWindowOpen()) {
          result = result && (getTimeWindowOpen()
              == other.getTimeWindowOpen());
        }
        result = result && (hasTimeWindowClose() == other.hasTimeWindowClose());
        if (hasTimeWindowClose()) {
          result = result && (getTimeWindowClose()
              == other.getTimeWindowClose());
        }
        result = result && (hasTimeWindowOpenNext() == other.hasTimeWindowOpenNext());
        if (hasTimeWindowOpenNext()) {
          result = result && (getTimeWindowOpenNext()
              == other.getTimeWindowOpenNext());
        }
        result = result && (hasTrophyId() == other.hasTrophyId());
        if (hasTrophyId()) {
          result = result && (getTrophyId()
              == other.getTrophyId());
        }
        result = result && (hasFreeWeekend() == other.hasFreeWeekend());
        if (hasFreeWeekend()) {
          result = result && (getFreeWeekend()
              == other.getFreeWeekend());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDivisionCode()) {
          hash = (37 * hash) + DIVISION_CODE_FIELD_NUMBER;
          hash = (53 * hash) + getDivisionCode();
        }
        if (hasTimeWindowOpen()) {
          hash = (37 * hash) + TIME_WINDOW_OPEN_FIELD_NUMBER;
          hash = (53 * hash) + getTimeWindowOpen();
        }
        if (hasTimeWindowClose()) {
          hash = (37 * hash) + TIME_WINDOW_CLOSE_FIELD_NUMBER;
          hash = (53 * hash) + getTimeWindowClose();
        }
        if (hasTimeWindowOpenNext()) {
          hash = (37 * hash) + TIME_WINDOW_OPEN_NEXT_FIELD_NUMBER;
          hash = (53 * hash) + getTimeWindowOpenNext();
        }
        if (hasTrophyId()) {
          hash = (37 * hash) + TROPHY_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTrophyId();
        }
        if (hasFreeWeekend()) {
          hash = (37 * hash) + FREE_WEEKEND_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getFreeWeekend());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgWeekendTourneySchedule.Division prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgWeekendTourneySchedule.Division}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgWeekendTourneySchedule.Division)
          MsgGCClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgWeekendTourneySchedule_Division_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgWeekendTourneySchedule_Division_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.class, MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          divisionCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          timeWindowOpen_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          timeWindowClose_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          timeWindowOpenNext_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          trophyId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          freeWeekend_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgWeekendTourneySchedule_Division_descriptor;
        }

        public MsgGCClientTournament.CMsgWeekendTourneySchedule.Division getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgWeekendTourneySchedule.Division build() {
          MsgGCClientTournament.CMsgWeekendTourneySchedule.Division result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgWeekendTourneySchedule.Division buildPartial() {
          MsgGCClientTournament.CMsgWeekendTourneySchedule.Division result = new MsgGCClientTournament.CMsgWeekendTourneySchedule.Division(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.divisionCode_ = divisionCode_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.timeWindowOpen_ = timeWindowOpen_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.timeWindowClose_ = timeWindowClose_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.timeWindowOpenNext_ = timeWindowOpenNext_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.trophyId_ = trophyId_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.freeWeekend_ = freeWeekend_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgWeekendTourneySchedule.Division) {
            return mergeFrom((MsgGCClientTournament.CMsgWeekendTourneySchedule.Division)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgWeekendTourneySchedule.Division other) {
          if (other == MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.getDefaultInstance()) return this;
          if (other.hasDivisionCode()) {
            setDivisionCode(other.getDivisionCode());
          }
          if (other.hasTimeWindowOpen()) {
            setTimeWindowOpen(other.getTimeWindowOpen());
          }
          if (other.hasTimeWindowClose()) {
            setTimeWindowClose(other.getTimeWindowClose());
          }
          if (other.hasTimeWindowOpenNext()) {
            setTimeWindowOpenNext(other.getTimeWindowOpenNext());
          }
          if (other.hasTrophyId()) {
            setTrophyId(other.getTrophyId());
          }
          if (other.hasFreeWeekend()) {
            setFreeWeekend(other.getFreeWeekend());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgWeekendTourneySchedule.Division parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgWeekendTourneySchedule.Division) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int divisionCode_ ;
        /**
         * <code>optional uint32 division_code = 1;</code>
         */
        public boolean hasDivisionCode() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 division_code = 1;</code>
         */
        public int getDivisionCode() {
          return divisionCode_;
        }
        /**
         * <code>optional uint32 division_code = 1;</code>
         */
        public Builder setDivisionCode(int value) {
          bitField0_ |= 0x00000001;
          divisionCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 division_code = 1;</code>
         */
        public Builder clearDivisionCode() {
          bitField0_ = (bitField0_ & ~0x00000001);
          divisionCode_ = 0;
          onChanged();
          return this;
        }

        private int timeWindowOpen_ ;
        /**
         * <code>optional uint32 time_window_open = 2;</code>
         */
        public boolean hasTimeWindowOpen() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 time_window_open = 2;</code>
         */
        public int getTimeWindowOpen() {
          return timeWindowOpen_;
        }
        /**
         * <code>optional uint32 time_window_open = 2;</code>
         */
        public Builder setTimeWindowOpen(int value) {
          bitField0_ |= 0x00000002;
          timeWindowOpen_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 time_window_open = 2;</code>
         */
        public Builder clearTimeWindowOpen() {
          bitField0_ = (bitField0_ & ~0x00000002);
          timeWindowOpen_ = 0;
          onChanged();
          return this;
        }

        private int timeWindowClose_ ;
        /**
         * <code>optional uint32 time_window_close = 3;</code>
         */
        public boolean hasTimeWindowClose() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 time_window_close = 3;</code>
         */
        public int getTimeWindowClose() {
          return timeWindowClose_;
        }
        /**
         * <code>optional uint32 time_window_close = 3;</code>
         */
        public Builder setTimeWindowClose(int value) {
          bitField0_ |= 0x00000004;
          timeWindowClose_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 time_window_close = 3;</code>
         */
        public Builder clearTimeWindowClose() {
          bitField0_ = (bitField0_ & ~0x00000004);
          timeWindowClose_ = 0;
          onChanged();
          return this;
        }

        private int timeWindowOpenNext_ ;
        /**
         * <code>optional uint32 time_window_open_next = 4;</code>
         */
        public boolean hasTimeWindowOpenNext() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 time_window_open_next = 4;</code>
         */
        public int getTimeWindowOpenNext() {
          return timeWindowOpenNext_;
        }
        /**
         * <code>optional uint32 time_window_open_next = 4;</code>
         */
        public Builder setTimeWindowOpenNext(int value) {
          bitField0_ |= 0x00000008;
          timeWindowOpenNext_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 time_window_open_next = 4;</code>
         */
        public Builder clearTimeWindowOpenNext() {
          bitField0_ = (bitField0_ & ~0x00000008);
          timeWindowOpenNext_ = 0;
          onChanged();
          return this;
        }

        private int trophyId_ ;
        /**
         * <code>optional uint32 trophy_id = 5;</code>
         */
        public boolean hasTrophyId() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 trophy_id = 5;</code>
         */
        public int getTrophyId() {
          return trophyId_;
        }
        /**
         * <code>optional uint32 trophy_id = 5;</code>
         */
        public Builder setTrophyId(int value) {
          bitField0_ |= 0x00000010;
          trophyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 trophy_id = 5;</code>
         */
        public Builder clearTrophyId() {
          bitField0_ = (bitField0_ & ~0x00000010);
          trophyId_ = 0;
          onChanged();
          return this;
        }

        private boolean freeWeekend_ ;
        /**
         * <code>optional bool free_weekend = 6;</code>
         */
        public boolean hasFreeWeekend() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional bool free_weekend = 6;</code>
         */
        public boolean getFreeWeekend() {
          return freeWeekend_;
        }
        /**
         * <code>optional bool free_weekend = 6;</code>
         */
        public Builder setFreeWeekend(boolean value) {
          bitField0_ |= 0x00000020;
          freeWeekend_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool free_weekend = 6;</code>
         */
        public Builder clearFreeWeekend() {
          bitField0_ = (bitField0_ & ~0x00000020);
          freeWeekend_ = false;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgWeekendTourneySchedule.Division)
      }

      // @@protoc_insertion_point(class_scope:CMsgWeekendTourneySchedule.Division)
      private static final MsgGCClientTournament.CMsgWeekendTourneySchedule.Division DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgWeekendTourneySchedule.Division();
      }

      public static MsgGCClientTournament.CMsgWeekendTourneySchedule.Division getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Division>
          PARSER = new com.google.protobuf.AbstractParser<Division>() {
        public Division parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Division(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Division> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Division> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgWeekendTourneySchedule.Division getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DIVISIONS_FIELD_NUMBER = 1;
    private java.util.List<MsgGCClientTournament.CMsgWeekendTourneySchedule.Division> divisions_;
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgWeekendTourneySchedule.Division> getDivisionsList() {
      return divisions_;
    }
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder>
        getDivisionsOrBuilderList() {
      return divisions_;
    }
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    public int getDivisionsCount() {
      return divisions_.size();
    }
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    public MsgGCClientTournament.CMsgWeekendTourneySchedule.Division getDivisions(int index) {
      return divisions_.get(index);
    }
    /**
     * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
     */
    public MsgGCClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder getDivisionsOrBuilder(
        int index) {
      return divisions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < divisions_.size(); i++) {
        output.writeMessage(1, divisions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < divisions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, divisions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgWeekendTourneySchedule)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgWeekendTourneySchedule other = (MsgGCClientTournament.CMsgWeekendTourneySchedule) obj;

      boolean result = true;
      result = result && getDivisionsList()
          .equals(other.getDivisionsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDivisionsCount() > 0) {
        hash = (37 * hash) + DIVISIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDivisionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneySchedule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgWeekendTourneySchedule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgWeekendTourneySchedule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgWeekendTourneySchedule)
        MsgGCClientTournament.CMsgWeekendTourneyScheduleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgWeekendTourneySchedule_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgWeekendTourneySchedule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgWeekendTourneySchedule.class, MsgGCClientTournament.CMsgWeekendTourneySchedule.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgWeekendTourneySchedule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDivisionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (divisionsBuilder_ == null) {
          divisions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          divisionsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgWeekendTourneySchedule_descriptor;
      }

      public MsgGCClientTournament.CMsgWeekendTourneySchedule getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgWeekendTourneySchedule.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgWeekendTourneySchedule build() {
        MsgGCClientTournament.CMsgWeekendTourneySchedule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgWeekendTourneySchedule buildPartial() {
        MsgGCClientTournament.CMsgWeekendTourneySchedule result = new MsgGCClientTournament.CMsgWeekendTourneySchedule(this);
        int from_bitField0_ = bitField0_;
        if (divisionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            divisions_ = java.util.Collections.unmodifiableList(divisions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.divisions_ = divisions_;
        } else {
          result.divisions_ = divisionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgWeekendTourneySchedule) {
          return mergeFrom((MsgGCClientTournament.CMsgWeekendTourneySchedule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgWeekendTourneySchedule other) {
        if (other == MsgGCClientTournament.CMsgWeekendTourneySchedule.getDefaultInstance()) return this;
        if (divisionsBuilder_ == null) {
          if (!other.divisions_.isEmpty()) {
            if (divisions_.isEmpty()) {
              divisions_ = other.divisions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDivisionsIsMutable();
              divisions_.addAll(other.divisions_);
            }
            onChanged();
          }
        } else {
          if (!other.divisions_.isEmpty()) {
            if (divisionsBuilder_.isEmpty()) {
              divisionsBuilder_.dispose();
              divisionsBuilder_ = null;
              divisions_ = other.divisions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              divisionsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDivisionsFieldBuilder() : null;
            } else {
              divisionsBuilder_.addAllMessages(other.divisions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgWeekendTourneySchedule parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgWeekendTourneySchedule) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<MsgGCClientTournament.CMsgWeekendTourneySchedule.Division> divisions_ =
        java.util.Collections.emptyList();
      private void ensureDivisionsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          divisions_ = new java.util.ArrayList<MsgGCClientTournament.CMsgWeekendTourneySchedule.Division>(divisions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgWeekendTourneySchedule.Division, MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder, MsgGCClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder> divisionsBuilder_;

      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgWeekendTourneySchedule.Division> getDivisionsList() {
        if (divisionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(divisions_);
        } else {
          return divisionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public int getDivisionsCount() {
        if (divisionsBuilder_ == null) {
          return divisions_.size();
        } else {
          return divisionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public MsgGCClientTournament.CMsgWeekendTourneySchedule.Division getDivisions(int index) {
        if (divisionsBuilder_ == null) {
          return divisions_.get(index);
        } else {
          return divisionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder setDivisions(
          int index, MsgGCClientTournament.CMsgWeekendTourneySchedule.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.set(index, value);
          onChanged();
        } else {
          divisionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder setDivisions(
          int index, MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.set(index, builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder addDivisions(MsgGCClientTournament.CMsgWeekendTourneySchedule.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.add(value);
          onChanged();
        } else {
          divisionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          int index, MsgGCClientTournament.CMsgWeekendTourneySchedule.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.add(index, value);
          onChanged();
        } else {
          divisionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.add(builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          int index, MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.add(index, builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder addAllDivisions(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgWeekendTourneySchedule.Division> values) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, divisions_);
          onChanged();
        } else {
          divisionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder clearDivisions() {
        if (divisionsBuilder_ == null) {
          divisions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          divisionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public Builder removeDivisions(int index) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.remove(index);
          onChanged();
        } else {
          divisionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder getDivisionsBuilder(
          int index) {
        return getDivisionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public MsgGCClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder getDivisionsOrBuilder(
          int index) {
        if (divisionsBuilder_ == null) {
          return divisions_.get(index);  } else {
          return divisionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder>
           getDivisionsOrBuilderList() {
        if (divisionsBuilder_ != null) {
          return divisionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(divisions_);
        }
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder addDivisionsBuilder() {
        return getDivisionsFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder addDivisionsBuilder(
          int index) {
        return getDivisionsFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgWeekendTourneySchedule.Division divisions = 1;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder>
           getDivisionsBuilderList() {
        return getDivisionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgWeekendTourneySchedule.Division, MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder, MsgGCClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder>
          getDivisionsFieldBuilder() {
        if (divisionsBuilder_ == null) {
          divisionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgWeekendTourneySchedule.Division, MsgGCClientTournament.CMsgWeekendTourneySchedule.Division.Builder, MsgGCClientTournament.CMsgWeekendTourneySchedule.DivisionOrBuilder>(
                  divisions_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          divisions_ = null;
        }
        return divisionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgWeekendTourneySchedule)
    }

    // @@protoc_insertion_point(class_scope:CMsgWeekendTourneySchedule)
    private static final MsgGCClientTournament.CMsgWeekendTourneySchedule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgWeekendTourneySchedule();
    }

    public static MsgGCClientTournament.CMsgWeekendTourneySchedule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgWeekendTourneySchedule>
        PARSER = new com.google.protobuf.AbstractParser<CMsgWeekendTourneySchedule>() {
      public CMsgWeekendTourneySchedule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgWeekendTourneySchedule(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgWeekendTourneySchedule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgWeekendTourneySchedule> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgWeekendTourneySchedule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgWeekendTourneyOptsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgWeekendTourneyOpts)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool participating = 1;</code>
     */
    boolean hasParticipating();
    /**
     * <code>optional bool participating = 1;</code>
     */
    boolean getParticipating();

    /**
     * <code>optional uint32 division_id = 2;</code>
     */
    boolean hasDivisionId();
    /**
     * <code>optional uint32 division_id = 2;</code>
     */
    int getDivisionId();

    /**
     * <code>optional uint32 buyin = 3;</code>
     */
    boolean hasBuyin();
    /**
     * <code>optional uint32 buyin = 3;</code>
     */
    int getBuyin();

    /**
     * <code>optional uint32 skill_level = 4;</code>
     */
    boolean hasSkillLevel();
    /**
     * <code>optional uint32 skill_level = 4;</code>
     */
    int getSkillLevel();

    /**
     * <code>optional uint32 match_groups = 5;</code>
     */
    boolean hasMatchGroups();
    /**
     * <code>optional uint32 match_groups = 5;</code>
     */
    int getMatchGroups();

    /**
     * <code>optional uint32 team_id = 6;</code>
     */
    boolean hasTeamId();
    /**
     * <code>optional uint32 team_id = 6;</code>
     */
    int getTeamId();

    /**
     * <code>optional string pickup_team_name = 7;</code>
     */
    boolean hasPickupTeamName();
    /**
     * <code>optional string pickup_team_name = 7;</code>
     */
    java.lang.String getPickupTeamName();
    /**
     * <code>optional string pickup_team_name = 7;</code>
     */
    com.google.protobuf.ByteString
        getPickupTeamNameBytes();

    /**
     * <code>optional uint64 pickup_team_logo = 8;</code>
     */
    boolean hasPickupTeamLogo();
    /**
     * <code>optional uint64 pickup_team_logo = 8;</code>
     */
    long getPickupTeamLogo();
  }
  /**
   * Protobuf type {@code CMsgWeekendTourneyOpts}
   */
  public  static final class CMsgWeekendTourneyOpts extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgWeekendTourneyOpts)
      CMsgWeekendTourneyOptsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgWeekendTourneyOpts.newBuilder() to construct.
    private CMsgWeekendTourneyOpts(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgWeekendTourneyOpts() {
      participating_ = false;
      divisionId_ = 0;
      buyin_ = 0;
      skillLevel_ = 0;
      matchGroups_ = 0;
      teamId_ = 0;
      pickupTeamName_ = "";
      pickupTeamLogo_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgWeekendTourneyOpts(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              participating_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              divisionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              buyin_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              skillLevel_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              matchGroups_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              teamId_ = input.readUInt32();
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              pickupTeamName_ = bs;
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              pickupTeamLogo_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgWeekendTourneyOpts_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgWeekendTourneyOpts_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgWeekendTourneyOpts.class, MsgGCClientTournament.CMsgWeekendTourneyOpts.Builder.class);
    }

    private int bitField0_;
    public static final int PARTICIPATING_FIELD_NUMBER = 1;
    private boolean participating_;
    /**
     * <code>optional bool participating = 1;</code>
     */
    public boolean hasParticipating() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool participating = 1;</code>
     */
    public boolean getParticipating() {
      return participating_;
    }

    public static final int DIVISION_ID_FIELD_NUMBER = 2;
    private int divisionId_;
    /**
     * <code>optional uint32 division_id = 2;</code>
     */
    public boolean hasDivisionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 division_id = 2;</code>
     */
    public int getDivisionId() {
      return divisionId_;
    }

    public static final int BUYIN_FIELD_NUMBER = 3;
    private int buyin_;
    /**
     * <code>optional uint32 buyin = 3;</code>
     */
    public boolean hasBuyin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 buyin = 3;</code>
     */
    public int getBuyin() {
      return buyin_;
    }

    public static final int SKILL_LEVEL_FIELD_NUMBER = 4;
    private int skillLevel_;
    /**
     * <code>optional uint32 skill_level = 4;</code>
     */
    public boolean hasSkillLevel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 skill_level = 4;</code>
     */
    public int getSkillLevel() {
      return skillLevel_;
    }

    public static final int MATCH_GROUPS_FIELD_NUMBER = 5;
    private int matchGroups_;
    /**
     * <code>optional uint32 match_groups = 5;</code>
     */
    public boolean hasMatchGroups() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 match_groups = 5;</code>
     */
    public int getMatchGroups() {
      return matchGroups_;
    }

    public static final int TEAM_ID_FIELD_NUMBER = 6;
    private int teamId_;
    /**
     * <code>optional uint32 team_id = 6;</code>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 team_id = 6;</code>
     */
    public int getTeamId() {
      return teamId_;
    }

    public static final int PICKUP_TEAM_NAME_FIELD_NUMBER = 7;
    private volatile java.lang.Object pickupTeamName_;
    /**
     * <code>optional string pickup_team_name = 7;</code>
     */
    public boolean hasPickupTeamName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string pickup_team_name = 7;</code>
     */
    public java.lang.String getPickupTeamName() {
      java.lang.Object ref = pickupTeamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pickupTeamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pickup_team_name = 7;</code>
     */
    public com.google.protobuf.ByteString
        getPickupTeamNameBytes() {
      java.lang.Object ref = pickupTeamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pickupTeamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PICKUP_TEAM_LOGO_FIELD_NUMBER = 8;
    private long pickupTeamLogo_;
    /**
     * <code>optional uint64 pickup_team_logo = 8;</code>
     */
    public boolean hasPickupTeamLogo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 pickup_team_logo = 8;</code>
     */
    public long getPickupTeamLogo() {
      return pickupTeamLogo_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, participating_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, divisionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, buyin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, skillLevel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, matchGroups_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, teamId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, pickupTeamName_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(8, pickupTeamLogo_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, participating_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, divisionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, buyin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, skillLevel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, matchGroups_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, teamId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, pickupTeamName_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, pickupTeamLogo_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgWeekendTourneyOpts)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgWeekendTourneyOpts other = (MsgGCClientTournament.CMsgWeekendTourneyOpts) obj;

      boolean result = true;
      result = result && (hasParticipating() == other.hasParticipating());
      if (hasParticipating()) {
        result = result && (getParticipating()
            == other.getParticipating());
      }
      result = result && (hasDivisionId() == other.hasDivisionId());
      if (hasDivisionId()) {
        result = result && (getDivisionId()
            == other.getDivisionId());
      }
      result = result && (hasBuyin() == other.hasBuyin());
      if (hasBuyin()) {
        result = result && (getBuyin()
            == other.getBuyin());
      }
      result = result && (hasSkillLevel() == other.hasSkillLevel());
      if (hasSkillLevel()) {
        result = result && (getSkillLevel()
            == other.getSkillLevel());
      }
      result = result && (hasMatchGroups() == other.hasMatchGroups());
      if (hasMatchGroups()) {
        result = result && (getMatchGroups()
            == other.getMatchGroups());
      }
      result = result && (hasTeamId() == other.hasTeamId());
      if (hasTeamId()) {
        result = result && (getTeamId()
            == other.getTeamId());
      }
      result = result && (hasPickupTeamName() == other.hasPickupTeamName());
      if (hasPickupTeamName()) {
        result = result && getPickupTeamName()
            .equals(other.getPickupTeamName());
      }
      result = result && (hasPickupTeamLogo() == other.hasPickupTeamLogo());
      if (hasPickupTeamLogo()) {
        result = result && (getPickupTeamLogo()
            == other.getPickupTeamLogo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasParticipating()) {
        hash = (37 * hash) + PARTICIPATING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getParticipating());
      }
      if (hasDivisionId()) {
        hash = (37 * hash) + DIVISION_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDivisionId();
      }
      if (hasBuyin()) {
        hash = (37 * hash) + BUYIN_FIELD_NUMBER;
        hash = (53 * hash) + getBuyin();
      }
      if (hasSkillLevel()) {
        hash = (37 * hash) + SKILL_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getSkillLevel();
      }
      if (hasMatchGroups()) {
        hash = (37 * hash) + MATCH_GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getMatchGroups();
      }
      if (hasTeamId()) {
        hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTeamId();
      }
      if (hasPickupTeamName()) {
        hash = (37 * hash) + PICKUP_TEAM_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPickupTeamName().hashCode();
      }
      if (hasPickupTeamLogo()) {
        hash = (37 * hash) + PICKUP_TEAM_LOGO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPickupTeamLogo());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyOpts parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgWeekendTourneyOpts prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgWeekendTourneyOpts}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgWeekendTourneyOpts)
        MsgGCClientTournament.CMsgWeekendTourneyOptsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgWeekendTourneyOpts_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgWeekendTourneyOpts_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgWeekendTourneyOpts.class, MsgGCClientTournament.CMsgWeekendTourneyOpts.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgWeekendTourneyOpts.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        participating_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        divisionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        buyin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        skillLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        matchGroups_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        teamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        pickupTeamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        pickupTeamLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgWeekendTourneyOpts_descriptor;
      }

      public MsgGCClientTournament.CMsgWeekendTourneyOpts getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgWeekendTourneyOpts.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgWeekendTourneyOpts build() {
        MsgGCClientTournament.CMsgWeekendTourneyOpts result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgWeekendTourneyOpts buildPartial() {
        MsgGCClientTournament.CMsgWeekendTourneyOpts result = new MsgGCClientTournament.CMsgWeekendTourneyOpts(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.participating_ = participating_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.divisionId_ = divisionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.buyin_ = buyin_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.skillLevel_ = skillLevel_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.matchGroups_ = matchGroups_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.teamId_ = teamId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.pickupTeamName_ = pickupTeamName_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.pickupTeamLogo_ = pickupTeamLogo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgWeekendTourneyOpts) {
          return mergeFrom((MsgGCClientTournament.CMsgWeekendTourneyOpts)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgWeekendTourneyOpts other) {
        if (other == MsgGCClientTournament.CMsgWeekendTourneyOpts.getDefaultInstance()) return this;
        if (other.hasParticipating()) {
          setParticipating(other.getParticipating());
        }
        if (other.hasDivisionId()) {
          setDivisionId(other.getDivisionId());
        }
        if (other.hasBuyin()) {
          setBuyin(other.getBuyin());
        }
        if (other.hasSkillLevel()) {
          setSkillLevel(other.getSkillLevel());
        }
        if (other.hasMatchGroups()) {
          setMatchGroups(other.getMatchGroups());
        }
        if (other.hasTeamId()) {
          setTeamId(other.getTeamId());
        }
        if (other.hasPickupTeamName()) {
          bitField0_ |= 0x00000040;
          pickupTeamName_ = other.pickupTeamName_;
          onChanged();
        }
        if (other.hasPickupTeamLogo()) {
          setPickupTeamLogo(other.getPickupTeamLogo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgWeekendTourneyOpts parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgWeekendTourneyOpts) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean participating_ ;
      /**
       * <code>optional bool participating = 1;</code>
       */
      public boolean hasParticipating() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool participating = 1;</code>
       */
      public boolean getParticipating() {
        return participating_;
      }
      /**
       * <code>optional bool participating = 1;</code>
       */
      public Builder setParticipating(boolean value) {
        bitField0_ |= 0x00000001;
        participating_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool participating = 1;</code>
       */
      public Builder clearParticipating() {
        bitField0_ = (bitField0_ & ~0x00000001);
        participating_ = false;
        onChanged();
        return this;
      }

      private int divisionId_ ;
      /**
       * <code>optional uint32 division_id = 2;</code>
       */
      public boolean hasDivisionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       */
      public int getDivisionId() {
        return divisionId_;
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       */
      public Builder setDivisionId(int value) {
        bitField0_ |= 0x00000002;
        divisionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       */
      public Builder clearDivisionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        divisionId_ = 0;
        onChanged();
        return this;
      }

      private int buyin_ ;
      /**
       * <code>optional uint32 buyin = 3;</code>
       */
      public boolean hasBuyin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 buyin = 3;</code>
       */
      public int getBuyin() {
        return buyin_;
      }
      /**
       * <code>optional uint32 buyin = 3;</code>
       */
      public Builder setBuyin(int value) {
        bitField0_ |= 0x00000004;
        buyin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 buyin = 3;</code>
       */
      public Builder clearBuyin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        buyin_ = 0;
        onChanged();
        return this;
      }

      private int skillLevel_ ;
      /**
       * <code>optional uint32 skill_level = 4;</code>
       */
      public boolean hasSkillLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       */
      public int getSkillLevel() {
        return skillLevel_;
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       */
      public Builder setSkillLevel(int value) {
        bitField0_ |= 0x00000008;
        skillLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       */
      public Builder clearSkillLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        skillLevel_ = 0;
        onChanged();
        return this;
      }

      private int matchGroups_ ;
      /**
       * <code>optional uint32 match_groups = 5;</code>
       */
      public boolean hasMatchGroups() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 match_groups = 5;</code>
       */
      public int getMatchGroups() {
        return matchGroups_;
      }
      /**
       * <code>optional uint32 match_groups = 5;</code>
       */
      public Builder setMatchGroups(int value) {
        bitField0_ |= 0x00000010;
        matchGroups_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 match_groups = 5;</code>
       */
      public Builder clearMatchGroups() {
        bitField0_ = (bitField0_ & ~0x00000010);
        matchGroups_ = 0;
        onChanged();
        return this;
      }

      private int teamId_ ;
      /**
       * <code>optional uint32 team_id = 6;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 team_id = 6;</code>
       */
      public int getTeamId() {
        return teamId_;
      }
      /**
       * <code>optional uint32 team_id = 6;</code>
       */
      public Builder setTeamId(int value) {
        bitField0_ |= 0x00000020;
        teamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_id = 6;</code>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        teamId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object pickupTeamName_ = "";
      /**
       * <code>optional string pickup_team_name = 7;</code>
       */
      public boolean hasPickupTeamName() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string pickup_team_name = 7;</code>
       */
      public java.lang.String getPickupTeamName() {
        java.lang.Object ref = pickupTeamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pickupTeamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pickup_team_name = 7;</code>
       */
      public com.google.protobuf.ByteString
          getPickupTeamNameBytes() {
        java.lang.Object ref = pickupTeamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pickupTeamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pickup_team_name = 7;</code>
       */
      public Builder setPickupTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        pickupTeamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pickup_team_name = 7;</code>
       */
      public Builder clearPickupTeamName() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pickupTeamName_ = getDefaultInstance().getPickupTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pickup_team_name = 7;</code>
       */
      public Builder setPickupTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        pickupTeamName_ = value;
        onChanged();
        return this;
      }

      private long pickupTeamLogo_ ;
      /**
       * <code>optional uint64 pickup_team_logo = 8;</code>
       */
      public boolean hasPickupTeamLogo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 pickup_team_logo = 8;</code>
       */
      public long getPickupTeamLogo() {
        return pickupTeamLogo_;
      }
      /**
       * <code>optional uint64 pickup_team_logo = 8;</code>
       */
      public Builder setPickupTeamLogo(long value) {
        bitField0_ |= 0x00000080;
        pickupTeamLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 pickup_team_logo = 8;</code>
       */
      public Builder clearPickupTeamLogo() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pickupTeamLogo_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgWeekendTourneyOpts)
    }

    // @@protoc_insertion_point(class_scope:CMsgWeekendTourneyOpts)
    private static final MsgGCClientTournament.CMsgWeekendTourneyOpts DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgWeekendTourneyOpts();
    }

    public static MsgGCClientTournament.CMsgWeekendTourneyOpts getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgWeekendTourneyOpts>
        PARSER = new com.google.protobuf.AbstractParser<CMsgWeekendTourneyOpts>() {
      public CMsgWeekendTourneyOpts parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgWeekendTourneyOpts(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgWeekendTourneyOpts> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgWeekendTourneyOpts> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgWeekendTourneyOpts getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgWeekendTourneyLeaveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgWeekendTourneyLeave)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CMsgWeekendTourneyLeave}
   */
  public  static final class CMsgWeekendTourneyLeave extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgWeekendTourneyLeave)
      CMsgWeekendTourneyLeaveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgWeekendTourneyLeave.newBuilder() to construct.
    private CMsgWeekendTourneyLeave(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgWeekendTourneyLeave() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgWeekendTourneyLeave(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgWeekendTourneyLeave_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgWeekendTourneyLeave_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgWeekendTourneyLeave.class, MsgGCClientTournament.CMsgWeekendTourneyLeave.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgWeekendTourneyLeave)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgWeekendTourneyLeave other = (MsgGCClientTournament.CMsgWeekendTourneyLeave) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgWeekendTourneyLeave parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgWeekendTourneyLeave prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgWeekendTourneyLeave}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgWeekendTourneyLeave)
        MsgGCClientTournament.CMsgWeekendTourneyLeaveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgWeekendTourneyLeave_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgWeekendTourneyLeave_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgWeekendTourneyLeave.class, MsgGCClientTournament.CMsgWeekendTourneyLeave.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgWeekendTourneyLeave.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgWeekendTourneyLeave_descriptor;
      }

      public MsgGCClientTournament.CMsgWeekendTourneyLeave getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgWeekendTourneyLeave.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgWeekendTourneyLeave build() {
        MsgGCClientTournament.CMsgWeekendTourneyLeave result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgWeekendTourneyLeave buildPartial() {
        MsgGCClientTournament.CMsgWeekendTourneyLeave result = new MsgGCClientTournament.CMsgWeekendTourneyLeave(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgWeekendTourneyLeave) {
          return mergeFrom((MsgGCClientTournament.CMsgWeekendTourneyLeave)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgWeekendTourneyLeave other) {
        if (other == MsgGCClientTournament.CMsgWeekendTourneyLeave.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgWeekendTourneyLeave parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgWeekendTourneyLeave) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgWeekendTourneyLeave)
    }

    // @@protoc_insertion_point(class_scope:CMsgWeekendTourneyLeave)
    private static final MsgGCClientTournament.CMsgWeekendTourneyLeave DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgWeekendTourneyLeave();
    }

    public static MsgGCClientTournament.CMsgWeekendTourneyLeave getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgWeekendTourneyLeave>
        PARSER = new com.google.protobuf.AbstractParser<CMsgWeekendTourneyLeave>() {
      public CMsgWeekendTourneyLeave parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgWeekendTourneyLeave(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgWeekendTourneyLeave> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgWeekendTourneyLeave> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgWeekendTourneyLeave getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTATournamentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTATournament)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    boolean hasTournamentId();
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    int getTournamentId();

    /**
     * <code>optional uint32 division_id = 2;</code>
     */
    boolean hasDivisionId();
    /**
     * <code>optional uint32 division_id = 2;</code>
     */
    int getDivisionId();

    /**
     * <code>optional uint32 schedule_time = 3;</code>
     */
    boolean hasScheduleTime();
    /**
     * <code>optional uint32 schedule_time = 3;</code>
     */
    int getScheduleTime();

    /**
     * <code>optional uint32 skill_level = 4;</code>
     */
    boolean hasSkillLevel();
    /**
     * <code>optional uint32 skill_level = 4;</code>
     */
    int getSkillLevel();

    /**
     * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
     */
    boolean hasTournamentTemplate();
    /**
     * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
     */
    MsgClientEnums.ETournamentTemplate getTournamentTemplate();

    /**
     * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
     */
    boolean hasState();
    /**
     * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
     */
    MsgClientEnums.ETournamentState getState();

    /**
     * <code>optional uint32 state_seq_num = 10;</code>
     */
    boolean hasStateSeqNum();
    /**
     * <code>optional uint32 state_seq_num = 10;</code>
     */
    int getStateSeqNum();

    /**
     * <code>optional uint32 season_trophy_id = 11;</code>
     */
    boolean hasSeasonTrophyId();
    /**
     * <code>optional uint32 season_trophy_id = 11;</code>
     */
    int getSeasonTrophyId();

    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTATournament.Team>
        getTeamsList();
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    MsgGCClientTournament.CMsgDOTATournament.Team getTeams(int index);
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    int getTeamsCount();
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTATournament.TeamOrBuilder>
        getTeamsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    MsgGCClientTournament.CMsgDOTATournament.TeamOrBuilder getTeamsOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTATournament.Game>
        getGamesList();
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    MsgGCClientTournament.CMsgDOTATournament.Game getGames(int index);
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    int getGamesCount();
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTATournament.GameOrBuilder>
        getGamesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    MsgGCClientTournament.CMsgDOTATournament.GameOrBuilder getGamesOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTATournament.Node>
        getNodesList();
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    MsgGCClientTournament.CMsgDOTATournament.Node getNodes(int index);
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    int getNodesCount();
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTATournament.NodeOrBuilder>
        getNodesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    MsgGCClientTournament.CMsgDOTATournament.NodeOrBuilder getNodesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTATournament}
   */
  public  static final class CMsgDOTATournament extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTATournament)
      CMsgDOTATournamentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTATournament.newBuilder() to construct.
    private CMsgDOTATournament(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTATournament() {
      tournamentId_ = 0;
      divisionId_ = 0;
      scheduleTime_ = 0;
      skillLevel_ = 0;
      tournamentTemplate_ = 0;
      state_ = 0;
      stateSeqNum_ = 0;
      seasonTrophyId_ = 0;
      teams_ = java.util.Collections.emptyList();
      games_ = java.util.Collections.emptyList();
      nodes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTATournament(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tournamentId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              divisionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              scheduleTime_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              skillLevel_ = input.readUInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              MsgClientEnums.ETournamentTemplate value = MsgClientEnums.ETournamentTemplate.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                tournamentTemplate_ = rawValue;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              MsgClientEnums.ETournamentState value = MsgClientEnums.ETournamentState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                state_ = rawValue;
              }
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                teams_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournament.Team>();
                mutable_bitField0_ |= 0x00000100;
              }
              teams_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTATournament.Team.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                games_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournament.Game>();
                mutable_bitField0_ |= 0x00000200;
              }
              games_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTATournament.Game.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                nodes_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournament.Node>();
                mutable_bitField0_ |= 0x00000400;
              }
              nodes_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTATournament.Node.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              stateSeqNum_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              seasonTrophyId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          teams_ = java.util.Collections.unmodifiableList(teams_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          games_ = java.util.Collections.unmodifiableList(games_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTATournament_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTATournament_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTATournament.class, MsgGCClientTournament.CMsgDOTATournament.Builder.class);
    }

    public interface TeamOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournament.Team)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional fixed64 team_gid = 1;</code>
       */
      boolean hasTeamGid();
      /**
       * <code>optional fixed64 team_gid = 1;</code>
       */
      long getTeamGid();

      /**
       * <code>optional uint32 node_or_state = 2;</code>
       */
      boolean hasNodeOrState();
      /**
       * <code>optional uint32 node_or_state = 2;</code>
       */
      int getNodeOrState();

      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getPlayersList();
      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       */
      int getPlayersCount();
      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       */
      int getPlayers(int index);

      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getPlayerBuyinList();
      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       */
      int getPlayerBuyinCount();
      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       */
      int getPlayerBuyin(int index);

      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getPlayerSkillLevelList();
      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       */
      int getPlayerSkillLevelCount();
      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       */
      int getPlayerSkillLevel(int index);

      /**
       * <code>optional uint32 match_group_mask = 12;</code>
       */
      boolean hasMatchGroupMask();
      /**
       * <code>optional uint32 match_group_mask = 12;</code>
       */
      int getMatchGroupMask();

      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      boolean hasTeamId();
      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      int getTeamId();

      /**
       * <code>optional string team_name = 5;</code>
       */
      boolean hasTeamName();
      /**
       * <code>optional string team_name = 5;</code>
       */
      java.lang.String getTeamName();
      /**
       * <code>optional string team_name = 5;</code>
       */
      com.google.protobuf.ByteString
          getTeamNameBytes();

      /**
       * <code>optional uint64 team_base_logo = 7;</code>
       */
      boolean hasTeamBaseLogo();
      /**
       * <code>optional uint64 team_base_logo = 7;</code>
       */
      long getTeamBaseLogo();

      /**
       * <code>optional uint64 team_ui_logo = 8;</code>
       */
      boolean hasTeamUiLogo();
      /**
       * <code>optional uint64 team_ui_logo = 8;</code>
       */
      long getTeamUiLogo();

      /**
       * <code>optional uint32 team_date = 11;</code>
       */
      boolean hasTeamDate();
      /**
       * <code>optional uint32 team_date = 11;</code>
       */
      int getTeamDate();
    }
    /**
     * Protobuf type {@code CMsgDOTATournament.Team}
     */
    public  static final class Team extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournament.Team)
        TeamOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Team.newBuilder() to construct.
      private Team(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Team() {
        teamGid_ = 0L;
        nodeOrState_ = 0;
        players_ = java.util.Collections.emptyList();
        playerBuyin_ = java.util.Collections.emptyList();
        playerSkillLevel_ = java.util.Collections.emptyList();
        matchGroupMask_ = 0;
        teamId_ = 0;
        teamName_ = "";
        teamBaseLogo_ = 0L;
        teamUiLogo_ = 0L;
        teamDate_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Team(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                bitField0_ |= 0x00000001;
                teamGid_ = input.readFixed64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                nodeOrState_ = input.readUInt32();
                break;
              }
              case 24: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  players_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                players_.add(input.readUInt32());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  players_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  players_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                teamId_ = input.readUInt32();
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                teamName_ = bs;
                break;
              }
              case 56: {
                bitField0_ |= 0x00000020;
                teamBaseLogo_ = input.readUInt64();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000040;
                teamUiLogo_ = input.readUInt64();
                break;
              }
              case 72: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  playerBuyin_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                playerBuyin_.add(input.readUInt32());
                break;
              }
              case 74: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  playerBuyin_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  playerBuyin_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 80: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  playerSkillLevel_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000010;
                }
                playerSkillLevel_.add(input.readUInt32());
                break;
              }
              case 82: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                  playerSkillLevel_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  playerSkillLevel_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 88: {
                bitField0_ |= 0x00000080;
                teamDate_ = input.readUInt32();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000004;
                matchGroupMask_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            playerBuyin_ = java.util.Collections.unmodifiableList(playerBuyin_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            playerSkillLevel_ = java.util.Collections.unmodifiableList(playerSkillLevel_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournament_Team_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournament_Team_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournament.Team.class, MsgGCClientTournament.CMsgDOTATournament.Team.Builder.class);
      }

      private int bitField0_;
      public static final int TEAM_GID_FIELD_NUMBER = 1;
      private long teamGid_;
      /**
       * <code>optional fixed64 team_gid = 1;</code>
       */
      public boolean hasTeamGid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 team_gid = 1;</code>
       */
      public long getTeamGid() {
        return teamGid_;
      }

      public static final int NODE_OR_STATE_FIELD_NUMBER = 2;
      private int nodeOrState_;
      /**
       * <code>optional uint32 node_or_state = 2;</code>
       */
      public boolean hasNodeOrState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 node_or_state = 2;</code>
       */
      public int getNodeOrState() {
        return nodeOrState_;
      }

      public static final int PLAYERS_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Integer> players_;
      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayersList() {
        return players_;
      }
      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <code>repeated uint32 players = 3 [packed = true];</code>
       */
      public int getPlayers(int index) {
        return players_.get(index);
      }
      private int playersMemoizedSerializedSize = -1;

      public static final int PLAYER_BUYIN_FIELD_NUMBER = 9;
      private java.util.List<java.lang.Integer> playerBuyin_;
      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayerBuyinList() {
        return playerBuyin_;
      }
      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       */
      public int getPlayerBuyinCount() {
        return playerBuyin_.size();
      }
      /**
       * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
       */
      public int getPlayerBuyin(int index) {
        return playerBuyin_.get(index);
      }
      private int playerBuyinMemoizedSerializedSize = -1;

      public static final int PLAYER_SKILL_LEVEL_FIELD_NUMBER = 10;
      private java.util.List<java.lang.Integer> playerSkillLevel_;
      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayerSkillLevelList() {
        return playerSkillLevel_;
      }
      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       */
      public int getPlayerSkillLevelCount() {
        return playerSkillLevel_.size();
      }
      /**
       * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
       */
      public int getPlayerSkillLevel(int index) {
        return playerSkillLevel_.get(index);
      }
      private int playerSkillLevelMemoizedSerializedSize = -1;

      public static final int MATCH_GROUP_MASK_FIELD_NUMBER = 12;
      private int matchGroupMask_;
      /**
       * <code>optional uint32 match_group_mask = 12;</code>
       */
      public boolean hasMatchGroupMask() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 match_group_mask = 12;</code>
       */
      public int getMatchGroupMask() {
        return matchGroupMask_;
      }

      public static final int TEAM_ID_FIELD_NUMBER = 4;
      private int teamId_;
      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      public int getTeamId() {
        return teamId_;
      }

      public static final int TEAM_NAME_FIELD_NUMBER = 5;
      private volatile java.lang.Object teamName_;
      /**
       * <code>optional string team_name = 5;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string team_name = 5;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEAM_BASE_LOGO_FIELD_NUMBER = 7;
      private long teamBaseLogo_;
      /**
       * <code>optional uint64 team_base_logo = 7;</code>
       */
      public boolean hasTeamBaseLogo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 team_base_logo = 7;</code>
       */
      public long getTeamBaseLogo() {
        return teamBaseLogo_;
      }

      public static final int TEAM_UI_LOGO_FIELD_NUMBER = 8;
      private long teamUiLogo_;
      /**
       * <code>optional uint64 team_ui_logo = 8;</code>
       */
      public boolean hasTeamUiLogo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 team_ui_logo = 8;</code>
       */
      public long getTeamUiLogo() {
        return teamUiLogo_;
      }

      public static final int TEAM_DATE_FIELD_NUMBER = 11;
      private int teamDate_;
      /**
       * <code>optional uint32 team_date = 11;</code>
       */
      public boolean hasTeamDate() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 team_date = 11;</code>
       */
      public int getTeamDate() {
        return teamDate_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFixed64(1, teamGid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, nodeOrState_);
        }
        if (getPlayersList().size() > 0) {
          output.writeUInt32NoTag(26);
          output.writeUInt32NoTag(playersMemoizedSerializedSize);
        }
        for (int i = 0; i < players_.size(); i++) {
          output.writeUInt32NoTag(players_.get(i));
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, teamId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, teamName_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt64(7, teamBaseLogo_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt64(8, teamUiLogo_);
        }
        if (getPlayerBuyinList().size() > 0) {
          output.writeUInt32NoTag(74);
          output.writeUInt32NoTag(playerBuyinMemoizedSerializedSize);
        }
        for (int i = 0; i < playerBuyin_.size(); i++) {
          output.writeUInt32NoTag(playerBuyin_.get(i));
        }
        if (getPlayerSkillLevelList().size() > 0) {
          output.writeUInt32NoTag(82);
          output.writeUInt32NoTag(playerSkillLevelMemoizedSerializedSize);
        }
        for (int i = 0; i < playerSkillLevel_.size(); i++) {
          output.writeUInt32NoTag(playerSkillLevel_.get(i));
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt32(11, teamDate_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(12, matchGroupMask_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(1, teamGid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, nodeOrState_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < players_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(players_.get(i));
          }
          size += dataSize;
          if (!getPlayersList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          playersMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, teamId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, teamName_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(7, teamBaseLogo_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(8, teamUiLogo_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < playerBuyin_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(playerBuyin_.get(i));
          }
          size += dataSize;
          if (!getPlayerBuyinList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          playerBuyinMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < playerSkillLevel_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(playerSkillLevel_.get(i));
          }
          size += dataSize;
          if (!getPlayerSkillLevelList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          playerSkillLevelMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(11, teamDate_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(12, matchGroupMask_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournament.Team)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTATournament.Team other = (MsgGCClientTournament.CMsgDOTATournament.Team) obj;

        boolean result = true;
        result = result && (hasTeamGid() == other.hasTeamGid());
        if (hasTeamGid()) {
          result = result && (getTeamGid()
              == other.getTeamGid());
        }
        result = result && (hasNodeOrState() == other.hasNodeOrState());
        if (hasNodeOrState()) {
          result = result && (getNodeOrState()
              == other.getNodeOrState());
        }
        result = result && getPlayersList()
            .equals(other.getPlayersList());
        result = result && getPlayerBuyinList()
            .equals(other.getPlayerBuyinList());
        result = result && getPlayerSkillLevelList()
            .equals(other.getPlayerSkillLevelList());
        result = result && (hasMatchGroupMask() == other.hasMatchGroupMask());
        if (hasMatchGroupMask()) {
          result = result && (getMatchGroupMask()
              == other.getMatchGroupMask());
        }
        result = result && (hasTeamId() == other.hasTeamId());
        if (hasTeamId()) {
          result = result && (getTeamId()
              == other.getTeamId());
        }
        result = result && (hasTeamName() == other.hasTeamName());
        if (hasTeamName()) {
          result = result && getTeamName()
              .equals(other.getTeamName());
        }
        result = result && (hasTeamBaseLogo() == other.hasTeamBaseLogo());
        if (hasTeamBaseLogo()) {
          result = result && (getTeamBaseLogo()
              == other.getTeamBaseLogo());
        }
        result = result && (hasTeamUiLogo() == other.hasTeamUiLogo());
        if (hasTeamUiLogo()) {
          result = result && (getTeamUiLogo()
              == other.getTeamUiLogo());
        }
        result = result && (hasTeamDate() == other.hasTeamDate());
        if (hasTeamDate()) {
          result = result && (getTeamDate()
              == other.getTeamDate());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTeamGid()) {
          hash = (37 * hash) + TEAM_GID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeamGid());
        }
        if (hasNodeOrState()) {
          hash = (37 * hash) + NODE_OR_STATE_FIELD_NUMBER;
          hash = (53 * hash) + getNodeOrState();
        }
        if (getPlayersCount() > 0) {
          hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
          hash = (53 * hash) + getPlayersList().hashCode();
        }
        if (getPlayerBuyinCount() > 0) {
          hash = (37 * hash) + PLAYER_BUYIN_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerBuyinList().hashCode();
        }
        if (getPlayerSkillLevelCount() > 0) {
          hash = (37 * hash) + PLAYER_SKILL_LEVEL_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerSkillLevelList().hashCode();
        }
        if (hasMatchGroupMask()) {
          hash = (37 * hash) + MATCH_GROUP_MASK_FIELD_NUMBER;
          hash = (53 * hash) + getMatchGroupMask();
        }
        if (hasTeamId()) {
          hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeamId();
        }
        if (hasTeamName()) {
          hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getTeamName().hashCode();
        }
        if (hasTeamBaseLogo()) {
          hash = (37 * hash) + TEAM_BASE_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeamBaseLogo());
        }
        if (hasTeamUiLogo()) {
          hash = (37 * hash) + TEAM_UI_LOGO_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeamUiLogo());
        }
        if (hasTeamDate()) {
          hash = (37 * hash) + TEAM_DATE_FIELD_NUMBER;
          hash = (53 * hash) + getTeamDate();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTATournament.Team parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Team parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Team parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Team parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Team parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Team parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Team parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Team parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Team parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournament.Team prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournament.Team}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournament.Team)
          MsgGCClientTournament.CMsgDOTATournament.TeamOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournament_Team_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournament_Team_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTATournament.Team.class, MsgGCClientTournament.CMsgDOTATournament.Team.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTATournament.Team.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          teamGid_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          nodeOrState_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          playerBuyin_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          playerSkillLevel_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          matchGroupMask_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          teamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          teamName_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          teamBaseLogo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000100);
          teamUiLogo_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000200);
          teamDate_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournament_Team_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTATournament.Team getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTATournament.Team.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTATournament.Team build() {
          MsgGCClientTournament.CMsgDOTATournament.Team result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTATournament.Team buildPartial() {
          MsgGCClientTournament.CMsgDOTATournament.Team result = new MsgGCClientTournament.CMsgDOTATournament.Team(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.teamGid_ = teamGid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.nodeOrState_ = nodeOrState_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            playerBuyin_ = java.util.Collections.unmodifiableList(playerBuyin_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.playerBuyin_ = playerBuyin_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            playerSkillLevel_ = java.util.Collections.unmodifiableList(playerSkillLevel_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.playerSkillLevel_ = playerSkillLevel_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000004;
          }
          result.matchGroupMask_ = matchGroupMask_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000008;
          }
          result.teamId_ = teamId_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000010;
          }
          result.teamName_ = teamName_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000020;
          }
          result.teamBaseLogo_ = teamBaseLogo_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000040;
          }
          result.teamUiLogo_ = teamUiLogo_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000080;
          }
          result.teamDate_ = teamDate_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTATournament.Team) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTATournament.Team)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournament.Team other) {
          if (other == MsgGCClientTournament.CMsgDOTATournament.Team.getDefaultInstance()) return this;
          if (other.hasTeamGid()) {
            setTeamGid(other.getTeamGid());
          }
          if (other.hasNodeOrState()) {
            setNodeOrState(other.getNodeOrState());
          }
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
          if (!other.playerBuyin_.isEmpty()) {
            if (playerBuyin_.isEmpty()) {
              playerBuyin_ = other.playerBuyin_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayerBuyinIsMutable();
              playerBuyin_.addAll(other.playerBuyin_);
            }
            onChanged();
          }
          if (!other.playerSkillLevel_.isEmpty()) {
            if (playerSkillLevel_.isEmpty()) {
              playerSkillLevel_ = other.playerSkillLevel_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePlayerSkillLevelIsMutable();
              playerSkillLevel_.addAll(other.playerSkillLevel_);
            }
            onChanged();
          }
          if (other.hasMatchGroupMask()) {
            setMatchGroupMask(other.getMatchGroupMask());
          }
          if (other.hasTeamId()) {
            setTeamId(other.getTeamId());
          }
          if (other.hasTeamName()) {
            bitField0_ |= 0x00000080;
            teamName_ = other.teamName_;
            onChanged();
          }
          if (other.hasTeamBaseLogo()) {
            setTeamBaseLogo(other.getTeamBaseLogo());
          }
          if (other.hasTeamUiLogo()) {
            setTeamUiLogo(other.getTeamUiLogo());
          }
          if (other.hasTeamDate()) {
            setTeamDate(other.getTeamDate());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTATournament.Team parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTATournament.Team) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long teamGid_ ;
        /**
         * <code>optional fixed64 team_gid = 1;</code>
         */
        public boolean hasTeamGid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional fixed64 team_gid = 1;</code>
         */
        public long getTeamGid() {
          return teamGid_;
        }
        /**
         * <code>optional fixed64 team_gid = 1;</code>
         */
        public Builder setTeamGid(long value) {
          bitField0_ |= 0x00000001;
          teamGid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 team_gid = 1;</code>
         */
        public Builder clearTeamGid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          teamGid_ = 0L;
          onChanged();
          return this;
        }

        private int nodeOrState_ ;
        /**
         * <code>optional uint32 node_or_state = 2;</code>
         */
        public boolean hasNodeOrState() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 node_or_state = 2;</code>
         */
        public int getNodeOrState() {
          return nodeOrState_;
        }
        /**
         * <code>optional uint32 node_or_state = 2;</code>
         */
        public Builder setNodeOrState(int value) {
          bitField0_ |= 0x00000002;
          nodeOrState_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 node_or_state = 2;</code>
         */
        public Builder clearNodeOrState() {
          bitField0_ = (bitField0_ & ~0x00000002);
          nodeOrState_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> players_ = java.util.Collections.emptyList();
        private void ensurePlayersIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = new java.util.ArrayList<java.lang.Integer>(players_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getPlayersList() {
          return java.util.Collections.unmodifiableList(players_);
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         */
        public int getPlayersCount() {
          return players_.size();
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         */
        public int getPlayers(int index) {
          return players_.get(index);
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         */
        public Builder setPlayers(
            int index, int value) {
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         */
        public Builder addPlayers(int value) {
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         */
        public Builder addAllPlayers(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensurePlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, players_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 players = 3 [packed = true];</code>
         */
        public Builder clearPlayers() {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> playerBuyin_ = java.util.Collections.emptyList();
        private void ensurePlayerBuyinIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            playerBuyin_ = new java.util.ArrayList<java.lang.Integer>(playerBuyin_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getPlayerBuyinList() {
          return java.util.Collections.unmodifiableList(playerBuyin_);
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         */
        public int getPlayerBuyinCount() {
          return playerBuyin_.size();
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         */
        public int getPlayerBuyin(int index) {
          return playerBuyin_.get(index);
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         */
        public Builder setPlayerBuyin(
            int index, int value) {
          ensurePlayerBuyinIsMutable();
          playerBuyin_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         */
        public Builder addPlayerBuyin(int value) {
          ensurePlayerBuyinIsMutable();
          playerBuyin_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         */
        public Builder addAllPlayerBuyin(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensurePlayerBuyinIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerBuyin_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_buyin = 9 [packed = true];</code>
         */
        public Builder clearPlayerBuyin() {
          playerBuyin_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> playerSkillLevel_ = java.util.Collections.emptyList();
        private void ensurePlayerSkillLevelIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            playerSkillLevel_ = new java.util.ArrayList<java.lang.Integer>(playerSkillLevel_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getPlayerSkillLevelList() {
          return java.util.Collections.unmodifiableList(playerSkillLevel_);
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         */
        public int getPlayerSkillLevelCount() {
          return playerSkillLevel_.size();
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         */
        public int getPlayerSkillLevel(int index) {
          return playerSkillLevel_.get(index);
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         */
        public Builder setPlayerSkillLevel(
            int index, int value) {
          ensurePlayerSkillLevelIsMutable();
          playerSkillLevel_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         */
        public Builder addPlayerSkillLevel(int value) {
          ensurePlayerSkillLevelIsMutable();
          playerSkillLevel_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         */
        public Builder addAllPlayerSkillLevel(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensurePlayerSkillLevelIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerSkillLevel_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 player_skill_level = 10 [packed = true];</code>
         */
        public Builder clearPlayerSkillLevel() {
          playerSkillLevel_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private int matchGroupMask_ ;
        /**
         * <code>optional uint32 match_group_mask = 12;</code>
         */
        public boolean hasMatchGroupMask() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 match_group_mask = 12;</code>
         */
        public int getMatchGroupMask() {
          return matchGroupMask_;
        }
        /**
         * <code>optional uint32 match_group_mask = 12;</code>
         */
        public Builder setMatchGroupMask(int value) {
          bitField0_ |= 0x00000020;
          matchGroupMask_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 match_group_mask = 12;</code>
         */
        public Builder clearMatchGroupMask() {
          bitField0_ = (bitField0_ & ~0x00000020);
          matchGroupMask_ = 0;
          onChanged();
          return this;
        }

        private int teamId_ ;
        /**
         * <code>optional uint32 team_id = 4;</code>
         */
        public boolean hasTeamId() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         */
        public int getTeamId() {
          return teamId_;
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         */
        public Builder setTeamId(int value) {
          bitField0_ |= 0x00000040;
          teamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         */
        public Builder clearTeamId() {
          bitField0_ = (bitField0_ & ~0x00000040);
          teamId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object teamName_ = "";
        /**
         * <code>optional string team_name = 5;</code>
         */
        public boolean hasTeamName() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string team_name = 5;</code>
         */
        public java.lang.String getTeamName() {
          java.lang.Object ref = teamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_name = 5;</code>
         */
        public com.google.protobuf.ByteString
            getTeamNameBytes() {
          java.lang.Object ref = teamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_name = 5;</code>
         */
        public Builder setTeamName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          teamName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 5;</code>
         */
        public Builder clearTeamName() {
          bitField0_ = (bitField0_ & ~0x00000080);
          teamName_ = getDefaultInstance().getTeamName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 5;</code>
         */
        public Builder setTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          teamName_ = value;
          onChanged();
          return this;
        }

        private long teamBaseLogo_ ;
        /**
         * <code>optional uint64 team_base_logo = 7;</code>
         */
        public boolean hasTeamBaseLogo() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional uint64 team_base_logo = 7;</code>
         */
        public long getTeamBaseLogo() {
          return teamBaseLogo_;
        }
        /**
         * <code>optional uint64 team_base_logo = 7;</code>
         */
        public Builder setTeamBaseLogo(long value) {
          bitField0_ |= 0x00000100;
          teamBaseLogo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team_base_logo = 7;</code>
         */
        public Builder clearTeamBaseLogo() {
          bitField0_ = (bitField0_ & ~0x00000100);
          teamBaseLogo_ = 0L;
          onChanged();
          return this;
        }

        private long teamUiLogo_ ;
        /**
         * <code>optional uint64 team_ui_logo = 8;</code>
         */
        public boolean hasTeamUiLogo() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional uint64 team_ui_logo = 8;</code>
         */
        public long getTeamUiLogo() {
          return teamUiLogo_;
        }
        /**
         * <code>optional uint64 team_ui_logo = 8;</code>
         */
        public Builder setTeamUiLogo(long value) {
          bitField0_ |= 0x00000200;
          teamUiLogo_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team_ui_logo = 8;</code>
         */
        public Builder clearTeamUiLogo() {
          bitField0_ = (bitField0_ & ~0x00000200);
          teamUiLogo_ = 0L;
          onChanged();
          return this;
        }

        private int teamDate_ ;
        /**
         * <code>optional uint32 team_date = 11;</code>
         */
        public boolean hasTeamDate() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional uint32 team_date = 11;</code>
         */
        public int getTeamDate() {
          return teamDate_;
        }
        /**
         * <code>optional uint32 team_date = 11;</code>
         */
        public Builder setTeamDate(int value) {
          bitField0_ |= 0x00000400;
          teamDate_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_date = 11;</code>
         */
        public Builder clearTeamDate() {
          bitField0_ = (bitField0_ & ~0x00000400);
          teamDate_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTATournament.Team)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournament.Team)
      private static final MsgGCClientTournament.CMsgDOTATournament.Team DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournament.Team();
      }

      public static MsgGCClientTournament.CMsgDOTATournament.Team getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Team>
          PARSER = new com.google.protobuf.AbstractParser<Team>() {
        public Team parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Team(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Team> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Team> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTATournament.Team getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface GameOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournament.Game)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 node_idx = 1;</code>
       */
      boolean hasNodeIdx();
      /**
       * <code>optional uint32 node_idx = 1;</code>
       */
      int getNodeIdx();

      /**
       * <code>optional fixed64 lobby_id = 2;</code>
       */
      boolean hasLobbyId();
      /**
       * <code>optional fixed64 lobby_id = 2;</code>
       */
      long getLobbyId();

      /**
       * <code>optional uint64 match_id = 3;</code>
       */
      boolean hasMatchId();
      /**
       * <code>optional uint64 match_id = 3;</code>
       */
      long getMatchId();

      /**
       * <code>optional bool team_a_good = 4;</code>
       */
      boolean hasTeamAGood();
      /**
       * <code>optional bool team_a_good = 4;</code>
       */
      boolean getTeamAGood();

      /**
       * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
       */
      boolean hasState();
      /**
       * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
       */
      MsgClientEnums.ETournamentGameState getState();

      /**
       * <code>optional uint32 start_time = 6;</code>
       */
      boolean hasStartTime();
      /**
       * <code>optional uint32 start_time = 6;</code>
       */
      int getStartTime();
    }
    /**
     * Protobuf type {@code CMsgDOTATournament.Game}
     */
    public  static final class Game extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournament.Game)
        GameOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Game.newBuilder() to construct.
      private Game(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Game() {
        nodeIdx_ = 0;
        lobbyId_ = 0L;
        matchId_ = 0L;
        teamAGood_ = false;
        state_ = 0;
        startTime_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Game(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                nodeIdx_ = input.readUInt32();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                lobbyId_ = input.readFixed64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                matchId_ = input.readUInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                teamAGood_ = input.readBool();
                break;
              }
              case 40: {
                int rawValue = input.readEnum();
                MsgClientEnums.ETournamentGameState value = MsgClientEnums.ETournamentGameState.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(5, rawValue);
                } else {
                  bitField0_ |= 0x00000010;
                  state_ = rawValue;
                }
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                startTime_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournament_Game_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournament_Game_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournament.Game.class, MsgGCClientTournament.CMsgDOTATournament.Game.Builder.class);
      }

      private int bitField0_;
      public static final int NODE_IDX_FIELD_NUMBER = 1;
      private int nodeIdx_;
      /**
       * <code>optional uint32 node_idx = 1;</code>
       */
      public boolean hasNodeIdx() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 node_idx = 1;</code>
       */
      public int getNodeIdx() {
        return nodeIdx_;
      }

      public static final int LOBBY_ID_FIELD_NUMBER = 2;
      private long lobbyId_;
      /**
       * <code>optional fixed64 lobby_id = 2;</code>
       */
      public boolean hasLobbyId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 lobby_id = 2;</code>
       */
      public long getLobbyId() {
        return lobbyId_;
      }

      public static final int MATCH_ID_FIELD_NUMBER = 3;
      private long matchId_;
      /**
       * <code>optional uint64 match_id = 3;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 match_id = 3;</code>
       */
      public long getMatchId() {
        return matchId_;
      }

      public static final int TEAM_A_GOOD_FIELD_NUMBER = 4;
      private boolean teamAGood_;
      /**
       * <code>optional bool team_a_good = 4;</code>
       */
      public boolean hasTeamAGood() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool team_a_good = 4;</code>
       */
      public boolean getTeamAGood() {
        return teamAGood_;
      }

      public static final int STATE_FIELD_NUMBER = 5;
      private int state_;
      /**
       * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
       */
      public MsgClientEnums.ETournamentGameState getState() {
        MsgClientEnums.ETournamentGameState result = MsgClientEnums.ETournamentGameState.valueOf(state_);
        return result == null ? MsgClientEnums.ETournamentGameState.k_ETournamentGameState_Unknown : result;
      }

      public static final int START_TIME_FIELD_NUMBER = 6;
      private int startTime_;
      /**
       * <code>optional uint32 start_time = 6;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 start_time = 6;</code>
       */
      public int getStartTime() {
        return startTime_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, nodeIdx_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFixed64(2, lobbyId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(3, matchId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, teamAGood_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeEnum(5, state_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, startTime_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, nodeIdx_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(2, lobbyId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, matchId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, teamAGood_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, state_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, startTime_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournament.Game)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTATournament.Game other = (MsgGCClientTournament.CMsgDOTATournament.Game) obj;

        boolean result = true;
        result = result && (hasNodeIdx() == other.hasNodeIdx());
        if (hasNodeIdx()) {
          result = result && (getNodeIdx()
              == other.getNodeIdx());
        }
        result = result && (hasLobbyId() == other.hasLobbyId());
        if (hasLobbyId()) {
          result = result && (getLobbyId()
              == other.getLobbyId());
        }
        result = result && (hasMatchId() == other.hasMatchId());
        if (hasMatchId()) {
          result = result && (getMatchId()
              == other.getMatchId());
        }
        result = result && (hasTeamAGood() == other.hasTeamAGood());
        if (hasTeamAGood()) {
          result = result && (getTeamAGood()
              == other.getTeamAGood());
        }
        result = result && (hasState() == other.hasState());
        if (hasState()) {
          result = result && state_ == other.state_;
        }
        result = result && (hasStartTime() == other.hasStartTime());
        if (hasStartTime()) {
          result = result && (getStartTime()
              == other.getStartTime());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasNodeIdx()) {
          hash = (37 * hash) + NODE_IDX_FIELD_NUMBER;
          hash = (53 * hash) + getNodeIdx();
        }
        if (hasLobbyId()) {
          hash = (37 * hash) + LOBBY_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getLobbyId());
        }
        if (hasMatchId()) {
          hash = (37 * hash) + MATCH_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMatchId());
        }
        if (hasTeamAGood()) {
          hash = (37 * hash) + TEAM_A_GOOD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getTeamAGood());
        }
        if (hasState()) {
          hash = (37 * hash) + STATE_FIELD_NUMBER;
          hash = (53 * hash) + state_;
        }
        if (hasStartTime()) {
          hash = (37 * hash) + START_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getStartTime();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTATournament.Game parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Game parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Game parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Game parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Game parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Game parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Game parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Game parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Game parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournament.Game prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournament.Game}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournament.Game)
          MsgGCClientTournament.CMsgDOTATournament.GameOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournament_Game_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournament_Game_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTATournament.Game.class, MsgGCClientTournament.CMsgDOTATournament.Game.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTATournament.Game.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          nodeIdx_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          lobbyId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          matchId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          teamAGood_ = false;
          bitField0_ = (bitField0_ & ~0x00000008);
          state_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          startTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournament_Game_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTATournament.Game getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTATournament.Game.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTATournament.Game build() {
          MsgGCClientTournament.CMsgDOTATournament.Game result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTATournament.Game buildPartial() {
          MsgGCClientTournament.CMsgDOTATournament.Game result = new MsgGCClientTournament.CMsgDOTATournament.Game(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.nodeIdx_ = nodeIdx_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.lobbyId_ = lobbyId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.matchId_ = matchId_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.teamAGood_ = teamAGood_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.state_ = state_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.startTime_ = startTime_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTATournament.Game) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTATournament.Game)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournament.Game other) {
          if (other == MsgGCClientTournament.CMsgDOTATournament.Game.getDefaultInstance()) return this;
          if (other.hasNodeIdx()) {
            setNodeIdx(other.getNodeIdx());
          }
          if (other.hasLobbyId()) {
            setLobbyId(other.getLobbyId());
          }
          if (other.hasMatchId()) {
            setMatchId(other.getMatchId());
          }
          if (other.hasTeamAGood()) {
            setTeamAGood(other.getTeamAGood());
          }
          if (other.hasState()) {
            setState(other.getState());
          }
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTATournament.Game parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTATournament.Game) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int nodeIdx_ ;
        /**
         * <code>optional uint32 node_idx = 1;</code>
         */
        public boolean hasNodeIdx() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 node_idx = 1;</code>
         */
        public int getNodeIdx() {
          return nodeIdx_;
        }
        /**
         * <code>optional uint32 node_idx = 1;</code>
         */
        public Builder setNodeIdx(int value) {
          bitField0_ |= 0x00000001;
          nodeIdx_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 node_idx = 1;</code>
         */
        public Builder clearNodeIdx() {
          bitField0_ = (bitField0_ & ~0x00000001);
          nodeIdx_ = 0;
          onChanged();
          return this;
        }

        private long lobbyId_ ;
        /**
         * <code>optional fixed64 lobby_id = 2;</code>
         */
        public boolean hasLobbyId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional fixed64 lobby_id = 2;</code>
         */
        public long getLobbyId() {
          return lobbyId_;
        }
        /**
         * <code>optional fixed64 lobby_id = 2;</code>
         */
        public Builder setLobbyId(long value) {
          bitField0_ |= 0x00000002;
          lobbyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 lobby_id = 2;</code>
         */
        public Builder clearLobbyId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          lobbyId_ = 0L;
          onChanged();
          return this;
        }

        private long matchId_ ;
        /**
         * <code>optional uint64 match_id = 3;</code>
         */
        public boolean hasMatchId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 match_id = 3;</code>
         */
        public long getMatchId() {
          return matchId_;
        }
        /**
         * <code>optional uint64 match_id = 3;</code>
         */
        public Builder setMatchId(long value) {
          bitField0_ |= 0x00000004;
          matchId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 match_id = 3;</code>
         */
        public Builder clearMatchId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          matchId_ = 0L;
          onChanged();
          return this;
        }

        private boolean teamAGood_ ;
        /**
         * <code>optional bool team_a_good = 4;</code>
         */
        public boolean hasTeamAGood() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional bool team_a_good = 4;</code>
         */
        public boolean getTeamAGood() {
          return teamAGood_;
        }
        /**
         * <code>optional bool team_a_good = 4;</code>
         */
        public Builder setTeamAGood(boolean value) {
          bitField0_ |= 0x00000008;
          teamAGood_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool team_a_good = 4;</code>
         */
        public Builder clearTeamAGood() {
          bitField0_ = (bitField0_ & ~0x00000008);
          teamAGood_ = false;
          onChanged();
          return this;
        }

        private int state_ = 0;
        /**
         * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
         */
        public boolean hasState() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
         */
        public MsgClientEnums.ETournamentGameState getState() {
            MsgClientEnums.ETournamentGameState result = MsgClientEnums.ETournamentGameState.valueOf(state_);
          return result == null ? MsgClientEnums.ETournamentGameState.k_ETournamentGameState_Unknown : result;
        }
        /**
         * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
         */
        public Builder setState(MsgClientEnums.ETournamentGameState value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000010;
          state_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .ETournamentGameState state = 5 [default = k_ETournamentGameState_Unknown];</code>
         */
        public Builder clearState() {
          bitField0_ = (bitField0_ & ~0x00000010);
          state_ = 0;
          onChanged();
          return this;
        }

        private int startTime_ ;
        /**
         * <code>optional uint32 start_time = 6;</code>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 start_time = 6;</code>
         */
        public int getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional uint32 start_time = 6;</code>
         */
        public Builder setStartTime(int value) {
          bitField0_ |= 0x00000020;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_time = 6;</code>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000020);
          startTime_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTATournament.Game)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournament.Game)
      private static final MsgGCClientTournament.CMsgDOTATournament.Game DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournament.Game();
      }

      public static MsgGCClientTournament.CMsgDOTATournament.Game getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Game>
          PARSER = new com.google.protobuf.AbstractParser<Game>() {
        public Game parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Game(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Game> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Game> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTATournament.Game getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface NodeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournament.Node)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      boolean hasNodeId();
      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      int getNodeId();

      /**
       * <code>optional uint32 team_idx_a = 2;</code>
       */
      boolean hasTeamIdxA();
      /**
       * <code>optional uint32 team_idx_a = 2;</code>
       */
      int getTeamIdxA();

      /**
       * <code>optional uint32 team_idx_b = 3;</code>
       */
      boolean hasTeamIdxB();
      /**
       * <code>optional uint32 team_idx_b = 3;</code>
       */
      int getTeamIdxB();

      /**
       * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
       */
      boolean hasNodeState();
      /**
       * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
       */
      MsgClientEnums.ETournamentNodeState getNodeState();
    }
    /**
     * Protobuf type {@code CMsgDOTATournament.Node}
     */
    public  static final class Node extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournament.Node)
        NodeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Node.newBuilder() to construct.
      private Node(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Node() {
        nodeId_ = 0;
        teamIdxA_ = 0;
        teamIdxB_ = 0;
        nodeState_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Node(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                nodeId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                teamIdxA_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                teamIdxB_ = input.readUInt32();
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                MsgClientEnums.ETournamentNodeState value = MsgClientEnums.ETournamentNodeState.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  nodeState_ = rawValue;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournament_Node_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournament_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournament.Node.class, MsgGCClientTournament.CMsgDOTATournament.Node.Builder.class);
      }

      private int bitField0_;
      public static final int NODE_ID_FIELD_NUMBER = 1;
      private int nodeId_;
      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 node_id = 1;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }

      public static final int TEAM_IDX_A_FIELD_NUMBER = 2;
      private int teamIdxA_;
      /**
       * <code>optional uint32 team_idx_a = 2;</code>
       */
      public boolean hasTeamIdxA() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team_idx_a = 2;</code>
       */
      public int getTeamIdxA() {
        return teamIdxA_;
      }

      public static final int TEAM_IDX_B_FIELD_NUMBER = 3;
      private int teamIdxB_;
      /**
       * <code>optional uint32 team_idx_b = 3;</code>
       */
      public boolean hasTeamIdxB() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 team_idx_b = 3;</code>
       */
      public int getTeamIdxB() {
        return teamIdxB_;
      }

      public static final int NODE_STATE_FIELD_NUMBER = 4;
      private int nodeState_;
      /**
       * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
       */
      public boolean hasNodeState() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
       */
      public MsgClientEnums.ETournamentNodeState getNodeState() {
          MsgClientEnums.ETournamentNodeState result = MsgClientEnums.ETournamentNodeState.valueOf(nodeState_);
        return result == null ? MsgClientEnums.ETournamentNodeState.k_ETournamentNodeState_Unknown : result;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, nodeId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, teamIdxA_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, teamIdxB_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, nodeState_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, nodeId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, teamIdxA_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, teamIdxB_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, nodeState_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournament.Node)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTATournament.Node other = (MsgGCClientTournament.CMsgDOTATournament.Node) obj;

        boolean result = true;
        result = result && (hasNodeId() == other.hasNodeId());
        if (hasNodeId()) {
          result = result && (getNodeId()
              == other.getNodeId());
        }
        result = result && (hasTeamIdxA() == other.hasTeamIdxA());
        if (hasTeamIdxA()) {
          result = result && (getTeamIdxA()
              == other.getTeamIdxA());
        }
        result = result && (hasTeamIdxB() == other.hasTeamIdxB());
        if (hasTeamIdxB()) {
          result = result && (getTeamIdxB()
              == other.getTeamIdxB());
        }
        result = result && (hasNodeState() == other.hasNodeState());
        if (hasNodeState()) {
          result = result && nodeState_ == other.nodeState_;
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasNodeId()) {
          hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getNodeId();
        }
        if (hasTeamIdxA()) {
          hash = (37 * hash) + TEAM_IDX_A_FIELD_NUMBER;
          hash = (53 * hash) + getTeamIdxA();
        }
        if (hasTeamIdxB()) {
          hash = (37 * hash) + TEAM_IDX_B_FIELD_NUMBER;
          hash = (53 * hash) + getTeamIdxB();
        }
        if (hasNodeState()) {
          hash = (37 * hash) + NODE_STATE_FIELD_NUMBER;
          hash = (53 * hash) + nodeState_;
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTATournament.Node parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Node parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Node parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Node parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Node parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Node parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Node parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Node parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournament.Node parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournament.Node prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournament.Node}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournament.Node)
          MsgGCClientTournament.CMsgDOTATournament.NodeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournament_Node_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournament_Node_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTATournament.Node.class, MsgGCClientTournament.CMsgDOTATournament.Node.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTATournament.Node.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          nodeId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          teamIdxA_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          teamIdxB_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          nodeState_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournament_Node_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTATournament.Node getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTATournament.Node.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTATournament.Node build() {
          MsgGCClientTournament.CMsgDOTATournament.Node result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTATournament.Node buildPartial() {
          MsgGCClientTournament.CMsgDOTATournament.Node result = new MsgGCClientTournament.CMsgDOTATournament.Node(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.nodeId_ = nodeId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.teamIdxA_ = teamIdxA_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.teamIdxB_ = teamIdxB_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.nodeState_ = nodeState_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTATournament.Node) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTATournament.Node)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournament.Node other) {
          if (other == MsgGCClientTournament.CMsgDOTATournament.Node.getDefaultInstance()) return this;
          if (other.hasNodeId()) {
            setNodeId(other.getNodeId());
          }
          if (other.hasTeamIdxA()) {
            setTeamIdxA(other.getTeamIdxA());
          }
          if (other.hasTeamIdxB()) {
            setTeamIdxB(other.getTeamIdxB());
          }
          if (other.hasNodeState()) {
            setNodeState(other.getNodeState());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTATournament.Node parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTATournament.Node) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int nodeId_ ;
        /**
         * <code>optional uint32 node_id = 1;</code>
         */
        public boolean hasNodeId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 node_id = 1;</code>
         */
        public int getNodeId() {
          return nodeId_;
        }
        /**
         * <code>optional uint32 node_id = 1;</code>
         */
        public Builder setNodeId(int value) {
          bitField0_ |= 0x00000001;
          nodeId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 node_id = 1;</code>
         */
        public Builder clearNodeId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          nodeId_ = 0;
          onChanged();
          return this;
        }

        private int teamIdxA_ ;
        /**
         * <code>optional uint32 team_idx_a = 2;</code>
         */
        public boolean hasTeamIdxA() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 team_idx_a = 2;</code>
         */
        public int getTeamIdxA() {
          return teamIdxA_;
        }
        /**
         * <code>optional uint32 team_idx_a = 2;</code>
         */
        public Builder setTeamIdxA(int value) {
          bitField0_ |= 0x00000002;
          teamIdxA_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_idx_a = 2;</code>
         */
        public Builder clearTeamIdxA() {
          bitField0_ = (bitField0_ & ~0x00000002);
          teamIdxA_ = 0;
          onChanged();
          return this;
        }

        private int teamIdxB_ ;
        /**
         * <code>optional uint32 team_idx_b = 3;</code>
         */
        public boolean hasTeamIdxB() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 team_idx_b = 3;</code>
         */
        public int getTeamIdxB() {
          return teamIdxB_;
        }
        /**
         * <code>optional uint32 team_idx_b = 3;</code>
         */
        public Builder setTeamIdxB(int value) {
          bitField0_ |= 0x00000004;
          teamIdxB_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_idx_b = 3;</code>
         */
        public Builder clearTeamIdxB() {
          bitField0_ = (bitField0_ & ~0x00000004);
          teamIdxB_ = 0;
          onChanged();
          return this;
        }

        private int nodeState_ = 0;
        /**
         * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
         */
        public boolean hasNodeState() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
         */
        public MsgClientEnums.ETournamentNodeState getNodeState() {
          MsgClientEnums.ETournamentNodeState result = MsgClientEnums.ETournamentNodeState.valueOf(nodeState_);
          return result == null ? MsgClientEnums.ETournamentNodeState.k_ETournamentNodeState_Unknown : result;
        }
        /**
         * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
         */
        public Builder setNodeState(MsgClientEnums.ETournamentNodeState value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          nodeState_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .ETournamentNodeState node_state = 4 [default = k_ETournamentNodeState_Unknown];</code>
         */
        public Builder clearNodeState() {
          bitField0_ = (bitField0_ & ~0x00000008);
          nodeState_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTATournament.Node)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournament.Node)
      private static final MsgGCClientTournament.CMsgDOTATournament.Node DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournament.Node();
      }

      public static MsgGCClientTournament.CMsgDOTATournament.Node getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Node>
          PARSER = new com.google.protobuf.AbstractParser<Node>() {
        public Node parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Node(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Node> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Node> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTATournament.Node getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TOURNAMENT_ID_FIELD_NUMBER = 1;
    private int tournamentId_;
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    public boolean hasTournamentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    public int getTournamentId() {
      return tournamentId_;
    }

    public static final int DIVISION_ID_FIELD_NUMBER = 2;
    private int divisionId_;
    /**
     * <code>optional uint32 division_id = 2;</code>
     */
    public boolean hasDivisionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 division_id = 2;</code>
     */
    public int getDivisionId() {
      return divisionId_;
    }

    public static final int SCHEDULE_TIME_FIELD_NUMBER = 3;
    private int scheduleTime_;
    /**
     * <code>optional uint32 schedule_time = 3;</code>
     */
    public boolean hasScheduleTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 schedule_time = 3;</code>
     */
    public int getScheduleTime() {
      return scheduleTime_;
    }

    public static final int SKILL_LEVEL_FIELD_NUMBER = 4;
    private int skillLevel_;
    /**
     * <code>optional uint32 skill_level = 4;</code>
     */
    public boolean hasSkillLevel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 skill_level = 4;</code>
     */
    public int getSkillLevel() {
      return skillLevel_;
    }

    public static final int TOURNAMENT_TEMPLATE_FIELD_NUMBER = 5;
    private int tournamentTemplate_;
    /**
     * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
     */
    public boolean hasTournamentTemplate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
     */
    public MsgClientEnums.ETournamentTemplate getTournamentTemplate() {
      MsgClientEnums.ETournamentTemplate result = MsgClientEnums.ETournamentTemplate.valueOf(tournamentTemplate_);
      return result == null ? MsgClientEnums.ETournamentTemplate.k_ETournamentTemplate_None : result;
    }

    public static final int STATE_FIELD_NUMBER = 6;
    private int state_;
    /**
     * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
     */
    public MsgClientEnums.ETournamentState getState() {
      MsgClientEnums.ETournamentState result = MsgClientEnums.ETournamentState.valueOf(state_);
      return result == null ? MsgClientEnums.ETournamentState.k_ETournamentState_Unknown : result;
    }

    public static final int STATE_SEQ_NUM_FIELD_NUMBER = 10;
    private int stateSeqNum_;
    /**
     * <code>optional uint32 state_seq_num = 10;</code>
     */
    public boolean hasStateSeqNum() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 state_seq_num = 10;</code>
     */
    public int getStateSeqNum() {
      return stateSeqNum_;
    }

    public static final int SEASON_TROPHY_ID_FIELD_NUMBER = 11;
    private int seasonTrophyId_;
    /**
     * <code>optional uint32 season_trophy_id = 11;</code>
     */
    public boolean hasSeasonTrophyId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 season_trophy_id = 11;</code>
     */
    public int getSeasonTrophyId() {
      return seasonTrophyId_;
    }

    public static final int TEAMS_FIELD_NUMBER = 7;
    private java.util.List<MsgGCClientTournament.CMsgDOTATournament.Team> teams_;
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTATournament.Team> getTeamsList() {
      return teams_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournament.TeamOrBuilder>
        getTeamsOrBuilderList() {
      return teams_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    public int getTeamsCount() {
      return teams_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournament.Team getTeams(int index) {
      return teams_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournament.TeamOrBuilder getTeamsOrBuilder(
        int index) {
      return teams_.get(index);
    }

    public static final int GAMES_FIELD_NUMBER = 8;
    private java.util.List<MsgGCClientTournament.CMsgDOTATournament.Game> games_;
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTATournament.Game> getGamesList() {
      return games_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournament.GameOrBuilder>
        getGamesOrBuilderList() {
      return games_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    public int getGamesCount() {
      return games_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournament.Game getGames(int index) {
      return games_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournament.GameOrBuilder getGamesOrBuilder(
        int index) {
      return games_.get(index);
    }

    public static final int NODES_FIELD_NUMBER = 9;
    private java.util.List<MsgGCClientTournament.CMsgDOTATournament.Node> nodes_;
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTATournament.Node> getNodesList() {
      return nodes_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournament.NodeOrBuilder>
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournament.Node getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournament.NodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, divisionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, scheduleTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, skillLevel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, tournamentTemplate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, state_);
      }
      for (int i = 0; i < teams_.size(); i++) {
        output.writeMessage(7, teams_.get(i));
      }
      for (int i = 0; i < games_.size(); i++) {
        output.writeMessage(8, games_.get(i));
      }
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(9, nodes_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(10, stateSeqNum_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(11, seasonTrophyId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, divisionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, scheduleTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, skillLevel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, tournamentTemplate_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, state_);
      }
      for (int i = 0; i < teams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, teams_.get(i));
      }
      for (int i = 0; i < games_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, games_.get(i));
      }
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, nodes_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, stateSeqNum_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, seasonTrophyId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournament)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTATournament other = (MsgGCClientTournament.CMsgDOTATournament) obj;

      boolean result = true;
      result = result && (hasTournamentId() == other.hasTournamentId());
      if (hasTournamentId()) {
        result = result && (getTournamentId()
            == other.getTournamentId());
      }
      result = result && (hasDivisionId() == other.hasDivisionId());
      if (hasDivisionId()) {
        result = result && (getDivisionId()
            == other.getDivisionId());
      }
      result = result && (hasScheduleTime() == other.hasScheduleTime());
      if (hasScheduleTime()) {
        result = result && (getScheduleTime()
            == other.getScheduleTime());
      }
      result = result && (hasSkillLevel() == other.hasSkillLevel());
      if (hasSkillLevel()) {
        result = result && (getSkillLevel()
            == other.getSkillLevel());
      }
      result = result && (hasTournamentTemplate() == other.hasTournamentTemplate());
      if (hasTournamentTemplate()) {
        result = result && tournamentTemplate_ == other.tournamentTemplate_;
      }
      result = result && (hasState() == other.hasState());
      if (hasState()) {
        result = result && state_ == other.state_;
      }
      result = result && (hasStateSeqNum() == other.hasStateSeqNum());
      if (hasStateSeqNum()) {
        result = result && (getStateSeqNum()
            == other.getStateSeqNum());
      }
      result = result && (hasSeasonTrophyId() == other.hasSeasonTrophyId());
      if (hasSeasonTrophyId()) {
        result = result && (getSeasonTrophyId()
            == other.getSeasonTrophyId());
      }
      result = result && getTeamsList()
          .equals(other.getTeamsList());
      result = result && getGamesList()
          .equals(other.getGamesList());
      result = result && getNodesList()
          .equals(other.getNodesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTournamentId()) {
        hash = (37 * hash) + TOURNAMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTournamentId();
      }
      if (hasDivisionId()) {
        hash = (37 * hash) + DIVISION_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDivisionId();
      }
      if (hasScheduleTime()) {
        hash = (37 * hash) + SCHEDULE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getScheduleTime();
      }
      if (hasSkillLevel()) {
        hash = (37 * hash) + SKILL_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getSkillLevel();
      }
      if (hasTournamentTemplate()) {
        hash = (37 * hash) + TOURNAMENT_TEMPLATE_FIELD_NUMBER;
        hash = (53 * hash) + tournamentTemplate_;
      }
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + state_;
      }
      if (hasStateSeqNum()) {
        hash = (37 * hash) + STATE_SEQ_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getStateSeqNum();
      }
      if (hasSeasonTrophyId()) {
        hash = (37 * hash) + SEASON_TROPHY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonTrophyId();
      }
      if (getTeamsCount() > 0) {
        hash = (37 * hash) + TEAMS_FIELD_NUMBER;
        hash = (53 * hash) + getTeamsList().hashCode();
      }
      if (getGamesCount() > 0) {
        hash = (37 * hash) + GAMES_FIELD_NUMBER;
        hash = (53 * hash) + getGamesList().hashCode();
      }
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTATournament parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournament parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournament parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournament parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournament parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournament parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournament parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournament parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournament parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournament parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournament parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournament parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournament prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTATournament}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTATournament)
        MsgGCClientTournament.CMsgDOTATournamentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournament_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournament_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournament.class, MsgGCClientTournament.CMsgDOTATournament.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTATournament.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTeamsFieldBuilder();
          getGamesFieldBuilder();
          getNodesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        tournamentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        divisionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        scheduleTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        skillLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        tournamentTemplate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        stateSeqNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        seasonTrophyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          teamsBuilder_.clear();
        }
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          gamesBuilder_.clear();
        }
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournament_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTATournament getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTATournament.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTATournament build() {
        MsgGCClientTournament.CMsgDOTATournament result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTATournament buildPartial() {
        MsgGCClientTournament.CMsgDOTATournament result = new MsgGCClientTournament.CMsgDOTATournament(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tournamentId_ = tournamentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.divisionId_ = divisionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.scheduleTime_ = scheduleTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.skillLevel_ = skillLevel_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tournamentTemplate_ = tournamentTemplate_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.stateSeqNum_ = stateSeqNum_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.seasonTrophyId_ = seasonTrophyId_;
        if (teamsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            teams_ = java.util.Collections.unmodifiableList(teams_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.teams_ = teams_;
        } else {
          result.teams_ = teamsBuilder_.build();
        }
        if (gamesBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            games_ = java.util.Collections.unmodifiableList(games_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.games_ = games_;
        } else {
          result.games_ = gamesBuilder_.build();
        }
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTATournament) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTATournament)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournament other) {
        if (other == MsgGCClientTournament.CMsgDOTATournament.getDefaultInstance()) return this;
        if (other.hasTournamentId()) {
          setTournamentId(other.getTournamentId());
        }
        if (other.hasDivisionId()) {
          setDivisionId(other.getDivisionId());
        }
        if (other.hasScheduleTime()) {
          setScheduleTime(other.getScheduleTime());
        }
        if (other.hasSkillLevel()) {
          setSkillLevel(other.getSkillLevel());
        }
        if (other.hasTournamentTemplate()) {
          setTournamentTemplate(other.getTournamentTemplate());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasStateSeqNum()) {
          setStateSeqNum(other.getStateSeqNum());
        }
        if (other.hasSeasonTrophyId()) {
          setSeasonTrophyId(other.getSeasonTrophyId());
        }
        if (teamsBuilder_ == null) {
          if (!other.teams_.isEmpty()) {
            if (teams_.isEmpty()) {
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureTeamsIsMutable();
              teams_.addAll(other.teams_);
            }
            onChanged();
          }
        } else {
          if (!other.teams_.isEmpty()) {
            if (teamsBuilder_.isEmpty()) {
              teamsBuilder_.dispose();
              teamsBuilder_ = null;
              teams_ = other.teams_;
              bitField0_ = (bitField0_ & ~0x00000100);
              teamsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTeamsFieldBuilder() : null;
            } else {
              teamsBuilder_.addAllMessages(other.teams_);
            }
          }
        }
        if (gamesBuilder_ == null) {
          if (!other.games_.isEmpty()) {
            if (games_.isEmpty()) {
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureGamesIsMutable();
              games_.addAll(other.games_);
            }
            onChanged();
          }
        } else {
          if (!other.games_.isEmpty()) {
            if (gamesBuilder_.isEmpty()) {
              gamesBuilder_.dispose();
              gamesBuilder_ = null;
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000200);
              gamesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGamesFieldBuilder() : null;
            } else {
              gamesBuilder_.addAllMessages(other.games_);
            }
          }
        }
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000400);
              nodesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTATournament parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTATournament) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tournamentId_ ;
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public boolean hasTournamentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public int getTournamentId() {
        return tournamentId_;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public Builder setTournamentId(int value) {
        bitField0_ |= 0x00000001;
        tournamentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public Builder clearTournamentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tournamentId_ = 0;
        onChanged();
        return this;
      }

      private int divisionId_ ;
      /**
       * <code>optional uint32 division_id = 2;</code>
       */
      public boolean hasDivisionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       */
      public int getDivisionId() {
        return divisionId_;
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       */
      public Builder setDivisionId(int value) {
        bitField0_ |= 0x00000002;
        divisionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 division_id = 2;</code>
       */
      public Builder clearDivisionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        divisionId_ = 0;
        onChanged();
        return this;
      }

      private int scheduleTime_ ;
      /**
       * <code>optional uint32 schedule_time = 3;</code>
       */
      public boolean hasScheduleTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 schedule_time = 3;</code>
       */
      public int getScheduleTime() {
        return scheduleTime_;
      }
      /**
       * <code>optional uint32 schedule_time = 3;</code>
       */
      public Builder setScheduleTime(int value) {
        bitField0_ |= 0x00000004;
        scheduleTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 schedule_time = 3;</code>
       */
      public Builder clearScheduleTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        scheduleTime_ = 0;
        onChanged();
        return this;
      }

      private int skillLevel_ ;
      /**
       * <code>optional uint32 skill_level = 4;</code>
       */
      public boolean hasSkillLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       */
      public int getSkillLevel() {
        return skillLevel_;
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       */
      public Builder setSkillLevel(int value) {
        bitField0_ |= 0x00000008;
        skillLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 skill_level = 4;</code>
       */
      public Builder clearSkillLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        skillLevel_ = 0;
        onChanged();
        return this;
      }

      private int tournamentTemplate_ = 0;
      /**
       * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
       */
      public boolean hasTournamentTemplate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
       */
      public MsgClientEnums.ETournamentTemplate getTournamentTemplate() {
        MsgClientEnums.ETournamentTemplate result = MsgClientEnums.ETournamentTemplate.valueOf(tournamentTemplate_);
        return result == null ? MsgClientEnums.ETournamentTemplate.k_ETournamentTemplate_None : result;
      }
      /**
       * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
       */
      public Builder setTournamentTemplate(MsgClientEnums.ETournamentTemplate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        tournamentTemplate_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETournamentTemplate tournament_template = 5 [default = k_ETournamentTemplate_None];</code>
       */
      public Builder clearTournamentTemplate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tournamentTemplate_ = 0;
        onChanged();
        return this;
      }

      private int state_ = 0;
      /**
       * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
       */
      public MsgClientEnums.ETournamentState getState() {
        MsgClientEnums.ETournamentState result = MsgClientEnums.ETournamentState.valueOf(state_);
        return result == null ? MsgClientEnums.ETournamentState.k_ETournamentState_Unknown : result;
      }
      /**
       * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
       */
      public Builder setState(MsgClientEnums.ETournamentState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETournamentState state = 6 [default = k_ETournamentState_Unknown];</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000020);
        state_ = 0;
        onChanged();
        return this;
      }

      private int stateSeqNum_ ;
      /**
       * <code>optional uint32 state_seq_num = 10;</code>
       */
      public boolean hasStateSeqNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 state_seq_num = 10;</code>
       */
      public int getStateSeqNum() {
        return stateSeqNum_;
      }
      /**
       * <code>optional uint32 state_seq_num = 10;</code>
       */
      public Builder setStateSeqNum(int value) {
        bitField0_ |= 0x00000040;
        stateSeqNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 state_seq_num = 10;</code>
       */
      public Builder clearStateSeqNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        stateSeqNum_ = 0;
        onChanged();
        return this;
      }

      private int seasonTrophyId_ ;
      /**
       * <code>optional uint32 season_trophy_id = 11;</code>
       */
      public boolean hasSeasonTrophyId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 season_trophy_id = 11;</code>
       */
      public int getSeasonTrophyId() {
        return seasonTrophyId_;
      }
      /**
       * <code>optional uint32 season_trophy_id = 11;</code>
       */
      public Builder setSeasonTrophyId(int value) {
        bitField0_ |= 0x00000080;
        seasonTrophyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_trophy_id = 11;</code>
       */
      public Builder clearSeasonTrophyId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        seasonTrophyId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientTournament.CMsgDOTATournament.Team> teams_ =
        java.util.Collections.emptyList();
      private void ensureTeamsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          teams_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournament.Team>(teams_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournament.Team, MsgGCClientTournament.CMsgDOTATournament.Team.Builder, MsgGCClientTournament.CMsgDOTATournament.TeamOrBuilder> teamsBuilder_;

      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournament.Team> getTeamsList() {
        if (teamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teams_);
        } else {
          return teamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public int getTeamsCount() {
        if (teamsBuilder_ == null) {
          return teams_.size();
        } else {
          return teamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Team getTeams(int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);
        } else {
          return teamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder setTeams(
          int index, MsgGCClientTournament.CMsgDOTATournament.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.set(index, value);
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder setTeams(
          int index, MsgGCClientTournament.CMsgDOTATournament.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder addTeams(MsgGCClientTournament.CMsgDOTATournament.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder addTeams(
          int index, MsgGCClientTournament.CMsgDOTATournament.Team value) {
        if (teamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamsIsMutable();
          teams_.add(index, value);
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder addTeams(
          MsgGCClientTournament.CMsgDOTATournament.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder addTeams(
          int index, MsgGCClientTournament.CMsgDOTATournament.Team.Builder builderForValue) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder addAllTeams(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTATournament.Team> values) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teams_);
          onChanged();
        } else {
          teamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder clearTeams() {
        if (teamsBuilder_ == null) {
          teams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          teamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public Builder removeTeams(int index) {
        if (teamsBuilder_ == null) {
          ensureTeamsIsMutable();
          teams_.remove(index);
          onChanged();
        } else {
          teamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Team.Builder getTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.TeamOrBuilder getTeamsOrBuilder(
          int index) {
        if (teamsBuilder_ == null) {
          return teams_.get(index);  } else {
          return teamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournament.TeamOrBuilder>
           getTeamsOrBuilderList() {
        if (teamsBuilder_ != null) {
          return teamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teams_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Team.Builder addTeamsBuilder() {
        return getTeamsFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTATournament.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Team.Builder addTeamsBuilder(
          int index) {
        return getTeamsFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTATournament.Team.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Team teams = 7;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournament.Team.Builder>
           getTeamsBuilderList() {
        return getTeamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournament.Team, MsgGCClientTournament.CMsgDOTATournament.Team.Builder, MsgGCClientTournament.CMsgDOTATournament.TeamOrBuilder>
          getTeamsFieldBuilder() {
        if (teamsBuilder_ == null) {
          teamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTATournament.Team, MsgGCClientTournament.CMsgDOTATournament.Team.Builder, MsgGCClientTournament.CMsgDOTATournament.TeamOrBuilder>(
                  teams_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          teams_ = null;
        }
        return teamsBuilder_;
      }

      private java.util.List<MsgGCClientTournament.CMsgDOTATournament.Game> games_ =
        java.util.Collections.emptyList();
      private void ensureGamesIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          games_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournament.Game>(games_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournament.Game, MsgGCClientTournament.CMsgDOTATournament.Game.Builder, MsgGCClientTournament.CMsgDOTATournament.GameOrBuilder> gamesBuilder_;

      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournament.Game> getGamesList() {
        if (gamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(games_);
        } else {
          return gamesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public int getGamesCount() {
        if (gamesBuilder_ == null) {
          return games_.size();
        } else {
          return gamesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Game getGames(int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);
        } else {
          return gamesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder setGames(
          int index, MsgGCClientTournament.CMsgDOTATournament.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.set(index, value);
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder setGames(
          int index, MsgGCClientTournament.CMsgDOTATournament.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.set(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder addGames(MsgGCClientTournament.CMsgDOTATournament.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder addGames(
          int index, MsgGCClientTournament.CMsgDOTATournament.Game value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(index, value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder addGames(
          MsgGCClientTournament.CMsgDOTATournament.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder addGames(
          int index, MsgGCClientTournament.CMsgDOTATournament.Game.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder addAllGames(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTATournament.Game> values) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, games_);
          onChanged();
        } else {
          gamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder clearGames() {
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          gamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public Builder removeGames(int index) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.remove(index);
          onChanged();
        } else {
          gamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Game.Builder getGamesBuilder(
          int index) {
        return getGamesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.GameOrBuilder getGamesOrBuilder(
          int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);  } else {
          return gamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournament.GameOrBuilder>
           getGamesOrBuilderList() {
        if (gamesBuilder_ != null) {
          return gamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(games_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Game.Builder addGamesBuilder() {
        return getGamesFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTATournament.Game.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Game.Builder addGamesBuilder(
          int index) {
        return getGamesFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTATournament.Game.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Game games = 8;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournament.Game.Builder>
           getGamesBuilderList() {
        return getGamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournament.Game, MsgGCClientTournament.CMsgDOTATournament.Game.Builder, MsgGCClientTournament.CMsgDOTATournament.GameOrBuilder>
          getGamesFieldBuilder() {
        if (gamesBuilder_ == null) {
          gamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTATournament.Game, MsgGCClientTournament.CMsgDOTATournament.Game.Builder, MsgGCClientTournament.CMsgDOTATournament.GameOrBuilder>(
                  games_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          games_ = null;
        }
        return gamesBuilder_;
      }

      private java.util.List<MsgGCClientTournament.CMsgDOTATournament.Node> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          nodes_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournament.Node>(nodes_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournament.Node, MsgGCClientTournament.CMsgDOTATournament.Node.Builder, MsgGCClientTournament.CMsgDOTATournament.NodeOrBuilder> nodesBuilder_;

      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournament.Node> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Node getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder setNodes(
          int index, MsgGCClientTournament.CMsgDOTATournament.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder setNodes(
          int index, MsgGCClientTournament.CMsgDOTATournament.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder addNodes(MsgGCClientTournament.CMsgDOTATournament.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder addNodes(
          int index, MsgGCClientTournament.CMsgDOTATournament.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder addNodes(
          MsgGCClientTournament.CMsgDOTATournament.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder addNodes(
          int index, MsgGCClientTournament.CMsgDOTATournament.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTATournament.Node> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Node.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.NodeOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournament.NodeOrBuilder>
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Node.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTATournament.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Node.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTATournament.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournament.Node nodes = 9;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournament.Node.Builder>
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournament.Node, MsgGCClientTournament.CMsgDOTATournament.Node.Builder, MsgGCClientTournament.CMsgDOTATournament.NodeOrBuilder>
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTATournament.Node, MsgGCClientTournament.CMsgDOTATournament.Node.Builder, MsgGCClientTournament.CMsgDOTATournament.NodeOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTATournament)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTATournament)
    private static final MsgGCClientTournament.CMsgDOTATournament DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournament();
    }

    public static MsgGCClientTournament.CMsgDOTATournament getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTATournament>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTATournament>() {
      public CMsgDOTATournament parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTATournament(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTATournament> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTATournament> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTATournament getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTATournamentStateChangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentStateChange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 new_tournament_id = 1;</code>
     */
    boolean hasNewTournamentId();
    /**
     * <code>optional uint32 new_tournament_id = 1;</code>
     */
    int getNewTournamentId();

    /**
     * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
     */
    boolean hasEvent();
    /**
     * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
     */
    MsgGCClientTournament.ETournamentEvent getEvent();

    /**
     * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
     */
    boolean hasNewTournamentState();
    /**
     * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
     */
    MsgClientEnums.ETournamentState getNewTournamentState();

    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange>
        getGameChangesList();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange getGameChanges(int index);
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    int getGameChangesCount();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder>
        getGameChangesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder getGameChangesOrBuilder(
        int index);

    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange>
        getTeamChangesList();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange getTeamChanges(int index);
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    int getTeamChangesCount();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder>
        getTeamChangesOrBuilderList();
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder getTeamChangesOrBuilder(
        int index);

    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getMergedTournamentIdsList();
    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     */
    int getMergedTournamentIdsCount();
    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     */
    int getMergedTournamentIds(int index);

    /**
     * <code>optional uint32 state_seq_num = 7;</code>
     */
    boolean hasStateSeqNum();
    /**
     * <code>optional uint32 state_seq_num = 7;</code>
     */
    int getStateSeqNum();
  }
  /**
   * Protobuf type {@code CMsgDOTATournamentStateChange}
   */
  public  static final class CMsgDOTATournamentStateChange extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTATournamentStateChange)
      CMsgDOTATournamentStateChangeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTATournamentStateChange.newBuilder() to construct.
    private CMsgDOTATournamentStateChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTATournamentStateChange() {
      newTournamentId_ = 0;
      event_ = 0;
      newTournamentState_ = 0;
      gameChanges_ = java.util.Collections.emptyList();
      teamChanges_ = java.util.Collections.emptyList();
      mergedTournamentIds_ = java.util.Collections.emptyList();
      stateSeqNum_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTATournamentStateChange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              newTournamentId_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              MsgGCClientTournament.ETournamentEvent value = MsgGCClientTournament.ETournamentEvent.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                event_ = rawValue;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              MsgClientEnums.ETournamentState value = MsgClientEnums.ETournamentState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                newTournamentState_ = rawValue;
              }
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                gameChanges_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange>();
                mutable_bitField0_ |= 0x00000008;
              }
              gameChanges_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                teamChanges_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange>();
                mutable_bitField0_ |= 0x00000010;
              }
              teamChanges_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                mergedTournamentIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              mergedTournamentIds_.add(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                mergedTournamentIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                mergedTournamentIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              stateSeqNum_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          gameChanges_ = java.util.Collections.unmodifiableList(gameChanges_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          teamChanges_ = java.util.Collections.unmodifiableList(teamChanges_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          mergedTournamentIds_ = java.util.Collections.unmodifiableList(mergedTournamentIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTATournamentStateChange.class, MsgGCClientTournament.CMsgDOTATournamentStateChange.Builder.class);
    }

    public interface GameChangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentStateChange.GameChange)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      boolean hasMatchId();
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      long getMatchId();

      /**
       * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
       */
      boolean hasNewState();
      /**
       * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
       */
      MsgClientEnums.ETournamentGameState getNewState();
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentStateChange.GameChange}
     */
    public  static final class GameChange extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournamentStateChange.GameChange)
        GameChangeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use GameChange.newBuilder() to construct.
      private GameChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private GameChange() {
        matchId_ = 0L;
        newState_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private GameChange(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                matchId_ = input.readUInt64();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                MsgClientEnums.ETournamentGameState value = MsgClientEnums.ETournamentGameState.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  newState_ = rawValue;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_GameChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.class, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder.class);
      }

      private int bitField0_;
      public static final int MATCH_ID_FIELD_NUMBER = 1;
      private long matchId_;
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public long getMatchId() {
        return matchId_;
      }

      public static final int NEW_STATE_FIELD_NUMBER = 2;
      private int newState_;
      /**
       * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
       */
      public boolean hasNewState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
       */
      public MsgClientEnums.ETournamentGameState getNewState() {
        MsgClientEnums.ETournamentGameState result = MsgClientEnums.ETournamentGameState.valueOf(newState_);
        return result == null ? MsgClientEnums.ETournamentGameState.k_ETournamentGameState_Unknown : result;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, matchId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, newState_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, matchId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, newState_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange other = (MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange) obj;

        boolean result = true;
        result = result && (hasMatchId() == other.hasMatchId());
        if (hasMatchId()) {
          result = result && (getMatchId()
              == other.getMatchId());
        }
        result = result && (hasNewState() == other.hasNewState());
        if (hasNewState()) {
          result = result && newState_ == other.newState_;
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMatchId()) {
          hash = (37 * hash) + MATCH_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMatchId());
        }
        if (hasNewState()) {
          hash = (37 * hash) + NEW_STATE_FIELD_NUMBER;
          hash = (53 * hash) + newState_;
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournamentStateChange.GameChange}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentStateChange.GameChange)
          MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_GameChange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.class, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          matchId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          newState_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange build() {
          MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange buildPartial() {
          MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange result = new MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.matchId_ = matchId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.newState_ = newState_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange other) {
          if (other == MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.getDefaultInstance()) return this;
          if (other.hasMatchId()) {
            setMatchId(other.getMatchId());
          }
          if (other.hasNewState()) {
            setNewState(other.getNewState());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long matchId_ ;
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public boolean hasMatchId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public long getMatchId() {
          return matchId_;
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public Builder setMatchId(long value) {
          bitField0_ |= 0x00000001;
          matchId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 match_id = 1;</code>
         */
        public Builder clearMatchId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          matchId_ = 0L;
          onChanged();
          return this;
        }

        private int newState_ = 0;
        /**
         * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
         */
        public boolean hasNewState() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
         */
        public MsgClientEnums.ETournamentGameState getNewState() {
            MsgClientEnums.ETournamentGameState result = MsgClientEnums.ETournamentGameState.valueOf(newState_);
          return result == null ? MsgClientEnums.ETournamentGameState.k_ETournamentGameState_Unknown : result;
        }
        /**
         * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
         */
        public Builder setNewState(MsgClientEnums.ETournamentGameState value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          newState_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .ETournamentGameState new_state = 2 [default = k_ETournamentGameState_Unknown];</code>
         */
        public Builder clearNewState() {
          bitField0_ = (bitField0_ & ~0x00000002);
          newState_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentStateChange.GameChange)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournamentStateChange.GameChange)
      private static final MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange();
      }

      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<GameChange>
          PARSER = new com.google.protobuf.AbstractParser<GameChange>() {
        public GameChange parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new GameChange(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<GameChange> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GameChange> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TeamChangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentStateChange.TeamChange)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 team_gid = 1;</code>
       */
      boolean hasTeamGid();
      /**
       * <code>optional uint64 team_gid = 1;</code>
       */
      long getTeamGid();

      /**
       * <code>optional uint32 new_node_or_state = 2;</code>
       */
      boolean hasNewNodeOrState();
      /**
       * <code>optional uint32 new_node_or_state = 2;</code>
       */
      int getNewNodeOrState();

      /**
       * <code>optional uint32 old_node_or_state = 3;</code>
       */
      boolean hasOldNodeOrState();
      /**
       * <code>optional uint32 old_node_or_state = 3;</code>
       */
      int getOldNodeOrState();
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentStateChange.TeamChange}
     */
    public  static final class TeamChange extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTATournamentStateChange.TeamChange)
        TeamChangeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TeamChange.newBuilder() to construct.
      private TeamChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TeamChange() {
        teamGid_ = 0L;
        newNodeOrState_ = 0;
        oldNodeOrState_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TeamChange(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                teamGid_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                newNodeOrState_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                oldNodeOrState_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_TeamChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.class, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder.class);
      }

      private int bitField0_;
      public static final int TEAM_GID_FIELD_NUMBER = 1;
      private long teamGid_;
      /**
       * <code>optional uint64 team_gid = 1;</code>
       */
      public boolean hasTeamGid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 team_gid = 1;</code>
       */
      public long getTeamGid() {
        return teamGid_;
      }

      public static final int NEW_NODE_OR_STATE_FIELD_NUMBER = 2;
      private int newNodeOrState_;
      /**
       * <code>optional uint32 new_node_or_state = 2;</code>
       */
      public boolean hasNewNodeOrState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 new_node_or_state = 2;</code>
       */
      public int getNewNodeOrState() {
        return newNodeOrState_;
      }

      public static final int OLD_NODE_OR_STATE_FIELD_NUMBER = 3;
      private int oldNodeOrState_;
      /**
       * <code>optional uint32 old_node_or_state = 3;</code>
       */
      public boolean hasOldNodeOrState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 old_node_or_state = 3;</code>
       */
      public int getOldNodeOrState() {
        return oldNodeOrState_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, teamGid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, newNodeOrState_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, oldNodeOrState_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, teamGid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, newNodeOrState_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, oldNodeOrState_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange other = (MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange) obj;

        boolean result = true;
        result = result && (hasTeamGid() == other.hasTeamGid());
        if (hasTeamGid()) {
          result = result && (getTeamGid()
              == other.getTeamGid());
        }
        result = result && (hasNewNodeOrState() == other.hasNewNodeOrState());
        if (hasNewNodeOrState()) {
          result = result && (getNewNodeOrState()
              == other.getNewNodeOrState());
        }
        result = result && (hasOldNodeOrState() == other.hasOldNodeOrState());
        if (hasOldNodeOrState()) {
          result = result && (getOldNodeOrState()
              == other.getOldNodeOrState());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTeamGid()) {
          hash = (37 * hash) + TEAM_GID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTeamGid());
        }
        if (hasNewNodeOrState()) {
          hash = (37 * hash) + NEW_NODE_OR_STATE_FIELD_NUMBER;
          hash = (53 * hash) + getNewNodeOrState();
        }
        if (hasOldNodeOrState()) {
          hash = (37 * hash) + OLD_NODE_OR_STATE_FIELD_NUMBER;
          hash = (53 * hash) + getOldNodeOrState();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTATournamentStateChange.TeamChange}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentStateChange.TeamChange)
          MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_TeamChange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.class, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          teamGid_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          newNodeOrState_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          oldNodeOrState_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange build() {
          MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange buildPartial() {
          MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange result = new MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.teamGid_ = teamGid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.newNodeOrState_ = newNodeOrState_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.oldNodeOrState_ = oldNodeOrState_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange other) {
          if (other == MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.getDefaultInstance()) return this;
          if (other.hasTeamGid()) {
            setTeamGid(other.getTeamGid());
          }
          if (other.hasNewNodeOrState()) {
            setNewNodeOrState(other.getNewNodeOrState());
          }
          if (other.hasOldNodeOrState()) {
            setOldNodeOrState(other.getOldNodeOrState());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long teamGid_ ;
        /**
         * <code>optional uint64 team_gid = 1;</code>
         */
        public boolean hasTeamGid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 team_gid = 1;</code>
         */
        public long getTeamGid() {
          return teamGid_;
        }
        /**
         * <code>optional uint64 team_gid = 1;</code>
         */
        public Builder setTeamGid(long value) {
          bitField0_ |= 0x00000001;
          teamGid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 team_gid = 1;</code>
         */
        public Builder clearTeamGid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          teamGid_ = 0L;
          onChanged();
          return this;
        }

        private int newNodeOrState_ ;
        /**
         * <code>optional uint32 new_node_or_state = 2;</code>
         */
        public boolean hasNewNodeOrState() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 new_node_or_state = 2;</code>
         */
        public int getNewNodeOrState() {
          return newNodeOrState_;
        }
        /**
         * <code>optional uint32 new_node_or_state = 2;</code>
         */
        public Builder setNewNodeOrState(int value) {
          bitField0_ |= 0x00000002;
          newNodeOrState_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 new_node_or_state = 2;</code>
         */
        public Builder clearNewNodeOrState() {
          bitField0_ = (bitField0_ & ~0x00000002);
          newNodeOrState_ = 0;
          onChanged();
          return this;
        }

        private int oldNodeOrState_ ;
        /**
         * <code>optional uint32 old_node_or_state = 3;</code>
         */
        public boolean hasOldNodeOrState() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 old_node_or_state = 3;</code>
         */
        public int getOldNodeOrState() {
          return oldNodeOrState_;
        }
        /**
         * <code>optional uint32 old_node_or_state = 3;</code>
         */
        public Builder setOldNodeOrState(int value) {
          bitField0_ |= 0x00000004;
          oldNodeOrState_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 old_node_or_state = 3;</code>
         */
        public Builder clearOldNodeOrState() {
          bitField0_ = (bitField0_ & ~0x00000004);
          oldNodeOrState_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentStateChange.TeamChange)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTATournamentStateChange.TeamChange)
      private static final MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange();
      }

      public static MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<TeamChange>
          PARSER = new com.google.protobuf.AbstractParser<TeamChange>() {
        public TeamChange parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new TeamChange(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TeamChange> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TeamChange> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int NEW_TOURNAMENT_ID_FIELD_NUMBER = 1;
    private int newTournamentId_;
    /**
     * <code>optional uint32 new_tournament_id = 1;</code>
     */
    public boolean hasNewTournamentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 new_tournament_id = 1;</code>
     */
    public int getNewTournamentId() {
      return newTournamentId_;
    }

    public static final int EVENT_FIELD_NUMBER = 2;
    private int event_;
    /**
     * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
     */
    public boolean hasEvent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
     */
    public MsgGCClientTournament.ETournamentEvent getEvent() {
      MsgGCClientTournament.ETournamentEvent result = MsgGCClientTournament.ETournamentEvent.valueOf(event_);
      return result == null ? MsgGCClientTournament.ETournamentEvent.k_ETournamentEvent_None : result;
    }

    public static final int NEW_TOURNAMENT_STATE_FIELD_NUMBER = 3;
    private int newTournamentState_;
    /**
     * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
     */
    public boolean hasNewTournamentState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
     */
    public MsgClientEnums.ETournamentState getNewTournamentState() {
      MsgClientEnums.ETournamentState result = MsgClientEnums.ETournamentState.valueOf(newTournamentState_);
      return result == null ? MsgClientEnums.ETournamentState.k_ETournamentState_Unknown : result;
    }

    public static final int GAME_CHANGES_FIELD_NUMBER = 4;
    private java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange> gameChanges_;
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange> getGameChangesList() {
      return gameChanges_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder>
        getGameChangesOrBuilderList() {
      return gameChanges_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    public int getGameChangesCount() {
      return gameChanges_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange getGameChanges(int index) {
      return gameChanges_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder getGameChangesOrBuilder(
        int index) {
      return gameChanges_.get(index);
    }

    public static final int TEAM_CHANGES_FIELD_NUMBER = 5;
    private java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange> teamChanges_;
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange> getTeamChangesList() {
      return teamChanges_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder>
        getTeamChangesOrBuilderList() {
      return teamChanges_;
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    public int getTeamChangesCount() {
      return teamChanges_.size();
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange getTeamChanges(int index) {
      return teamChanges_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder getTeamChangesOrBuilder(
        int index) {
      return teamChanges_.get(index);
    }

    public static final int MERGED_TOURNAMENT_IDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> mergedTournamentIds_;
    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getMergedTournamentIdsList() {
      return mergedTournamentIds_;
    }
    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     */
    public int getMergedTournamentIdsCount() {
      return mergedTournamentIds_.size();
    }
    /**
     * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
     */
    public int getMergedTournamentIds(int index) {
      return mergedTournamentIds_.get(index);
    }
    private int mergedTournamentIdsMemoizedSerializedSize = -1;

    public static final int STATE_SEQ_NUM_FIELD_NUMBER = 7;
    private int stateSeqNum_;
    /**
     * <code>optional uint32 state_seq_num = 7;</code>
     */
    public boolean hasStateSeqNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 state_seq_num = 7;</code>
     */
    public int getStateSeqNum() {
      return stateSeqNum_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, newTournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, event_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, newTournamentState_);
      }
      for (int i = 0; i < gameChanges_.size(); i++) {
        output.writeMessage(4, gameChanges_.get(i));
      }
      for (int i = 0; i < teamChanges_.size(); i++) {
        output.writeMessage(5, teamChanges_.get(i));
      }
      if (getMergedTournamentIdsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(mergedTournamentIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < mergedTournamentIds_.size(); i++) {
        output.writeUInt32NoTag(mergedTournamentIds_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(7, stateSeqNum_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, newTournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, event_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, newTournamentState_);
      }
      for (int i = 0; i < gameChanges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, gameChanges_.get(i));
      }
      for (int i = 0; i < teamChanges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, teamChanges_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mergedTournamentIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(mergedTournamentIds_.get(i));
        }
        size += dataSize;
        if (!getMergedTournamentIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        mergedTournamentIdsMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, stateSeqNum_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournamentStateChange)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTATournamentStateChange other = (MsgGCClientTournament.CMsgDOTATournamentStateChange) obj;

      boolean result = true;
      result = result && (hasNewTournamentId() == other.hasNewTournamentId());
      if (hasNewTournamentId()) {
        result = result && (getNewTournamentId()
            == other.getNewTournamentId());
      }
      result = result && (hasEvent() == other.hasEvent());
      if (hasEvent()) {
        result = result && event_ == other.event_;
      }
      result = result && (hasNewTournamentState() == other.hasNewTournamentState());
      if (hasNewTournamentState()) {
        result = result && newTournamentState_ == other.newTournamentState_;
      }
      result = result && getGameChangesList()
          .equals(other.getGameChangesList());
      result = result && getTeamChangesList()
          .equals(other.getTeamChangesList());
      result = result && getMergedTournamentIdsList()
          .equals(other.getMergedTournamentIdsList());
      result = result && (hasStateSeqNum() == other.hasStateSeqNum());
      if (hasStateSeqNum()) {
        result = result && (getStateSeqNum()
            == other.getStateSeqNum());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNewTournamentId()) {
        hash = (37 * hash) + NEW_TOURNAMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getNewTournamentId();
      }
      if (hasEvent()) {
        hash = (37 * hash) + EVENT_FIELD_NUMBER;
        hash = (53 * hash) + event_;
      }
      if (hasNewTournamentState()) {
        hash = (37 * hash) + NEW_TOURNAMENT_STATE_FIELD_NUMBER;
        hash = (53 * hash) + newTournamentState_;
      }
      if (getGameChangesCount() > 0) {
        hash = (37 * hash) + GAME_CHANGES_FIELD_NUMBER;
        hash = (53 * hash) + getGameChangesList().hashCode();
      }
      if (getTeamChangesCount() > 0) {
        hash = (37 * hash) + TEAM_CHANGES_FIELD_NUMBER;
        hash = (53 * hash) + getTeamChangesList().hashCode();
      }
      if (getMergedTournamentIdsCount() > 0) {
        hash = (37 * hash) + MERGED_TOURNAMENT_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getMergedTournamentIdsList().hashCode();
      }
      if (hasStateSeqNum()) {
        hash = (37 * hash) + STATE_SEQ_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getStateSeqNum();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentStateChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournamentStateChange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentStateChange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentStateChange)
        MsgGCClientTournament.CMsgDOTATournamentStateChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournamentStateChange.class, MsgGCClientTournament.CMsgDOTATournamentStateChange.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTATournamentStateChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getGameChangesFieldBuilder();
          getTeamChangesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        newTournamentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        event_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        newTournamentState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (gameChangesBuilder_ == null) {
          gameChanges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          gameChangesBuilder_.clear();
        }
        if (teamChangesBuilder_ == null) {
          teamChanges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          teamChangesBuilder_.clear();
        }
        mergedTournamentIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        stateSeqNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentStateChange_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTATournamentStateChange getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTATournamentStateChange.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTATournamentStateChange build() {
        MsgGCClientTournament.CMsgDOTATournamentStateChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTATournamentStateChange buildPartial() {
        MsgGCClientTournament.CMsgDOTATournamentStateChange result = new MsgGCClientTournament.CMsgDOTATournamentStateChange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.newTournamentId_ = newTournamentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.event_ = event_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.newTournamentState_ = newTournamentState_;
        if (gameChangesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            gameChanges_ = java.util.Collections.unmodifiableList(gameChanges_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.gameChanges_ = gameChanges_;
        } else {
          result.gameChanges_ = gameChangesBuilder_.build();
        }
        if (teamChangesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            teamChanges_ = java.util.Collections.unmodifiableList(teamChanges_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.teamChanges_ = teamChanges_;
        } else {
          result.teamChanges_ = teamChangesBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          mergedTournamentIds_ = java.util.Collections.unmodifiableList(mergedTournamentIds_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.mergedTournamentIds_ = mergedTournamentIds_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.stateSeqNum_ = stateSeqNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTATournamentStateChange) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTATournamentStateChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournamentStateChange other) {
        if (other == MsgGCClientTournament.CMsgDOTATournamentStateChange.getDefaultInstance()) return this;
        if (other.hasNewTournamentId()) {
          setNewTournamentId(other.getNewTournamentId());
        }
        if (other.hasEvent()) {
          setEvent(other.getEvent());
        }
        if (other.hasNewTournamentState()) {
          setNewTournamentState(other.getNewTournamentState());
        }
        if (gameChangesBuilder_ == null) {
          if (!other.gameChanges_.isEmpty()) {
            if (gameChanges_.isEmpty()) {
              gameChanges_ = other.gameChanges_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureGameChangesIsMutable();
              gameChanges_.addAll(other.gameChanges_);
            }
            onChanged();
          }
        } else {
          if (!other.gameChanges_.isEmpty()) {
            if (gameChangesBuilder_.isEmpty()) {
              gameChangesBuilder_.dispose();
              gameChangesBuilder_ = null;
              gameChanges_ = other.gameChanges_;
              bitField0_ = (bitField0_ & ~0x00000008);
              gameChangesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGameChangesFieldBuilder() : null;
            } else {
              gameChangesBuilder_.addAllMessages(other.gameChanges_);
            }
          }
        }
        if (teamChangesBuilder_ == null) {
          if (!other.teamChanges_.isEmpty()) {
            if (teamChanges_.isEmpty()) {
              teamChanges_ = other.teamChanges_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureTeamChangesIsMutable();
              teamChanges_.addAll(other.teamChanges_);
            }
            onChanged();
          }
        } else {
          if (!other.teamChanges_.isEmpty()) {
            if (teamChangesBuilder_.isEmpty()) {
              teamChangesBuilder_.dispose();
              teamChangesBuilder_ = null;
              teamChanges_ = other.teamChanges_;
              bitField0_ = (bitField0_ & ~0x00000010);
              teamChangesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTeamChangesFieldBuilder() : null;
            } else {
              teamChangesBuilder_.addAllMessages(other.teamChanges_);
            }
          }
        }
        if (!other.mergedTournamentIds_.isEmpty()) {
          if (mergedTournamentIds_.isEmpty()) {
            mergedTournamentIds_ = other.mergedTournamentIds_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureMergedTournamentIdsIsMutable();
            mergedTournamentIds_.addAll(other.mergedTournamentIds_);
          }
          onChanged();
        }
        if (other.hasStateSeqNum()) {
          setStateSeqNum(other.getStateSeqNum());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTATournamentStateChange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTATournamentStateChange) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int newTournamentId_ ;
      /**
       * <code>optional uint32 new_tournament_id = 1;</code>
       */
      public boolean hasNewTournamentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 new_tournament_id = 1;</code>
       */
      public int getNewTournamentId() {
        return newTournamentId_;
      }
      /**
       * <code>optional uint32 new_tournament_id = 1;</code>
       */
      public Builder setNewTournamentId(int value) {
        bitField0_ |= 0x00000001;
        newTournamentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 new_tournament_id = 1;</code>
       */
      public Builder clearNewTournamentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        newTournamentId_ = 0;
        onChanged();
        return this;
      }

      private int event_ = 0;
      /**
       * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
       */
      public boolean hasEvent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
       */
      public MsgGCClientTournament.ETournamentEvent getEvent() {
        MsgGCClientTournament.ETournamentEvent result = MsgGCClientTournament.ETournamentEvent.valueOf(event_);
        return result == null ? MsgGCClientTournament.ETournamentEvent.k_ETournamentEvent_None : result;
      }
      /**
       * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
       */
      public Builder setEvent(MsgGCClientTournament.ETournamentEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        event_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETournamentEvent event = 2 [default = k_ETournamentEvent_None];</code>
       */
      public Builder clearEvent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        event_ = 0;
        onChanged();
        return this;
      }

      private int newTournamentState_ = 0;
      /**
       * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
       */
      public boolean hasNewTournamentState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
       */
      public MsgClientEnums.ETournamentState getNewTournamentState() {
        MsgClientEnums.ETournamentState result = MsgClientEnums.ETournamentState.valueOf(newTournamentState_);
        return result == null ? MsgClientEnums.ETournamentState.k_ETournamentState_Unknown : result;
      }
      /**
       * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
       */
      public Builder setNewTournamentState(MsgClientEnums.ETournamentState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        newTournamentState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ETournamentState new_tournament_state = 3 [default = k_ETournamentState_Unknown];</code>
       */
      public Builder clearNewTournamentState() {
        bitField0_ = (bitField0_ & ~0x00000004);
        newTournamentState_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange> gameChanges_ =
        java.util.Collections.emptyList();
      private void ensureGameChangesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          gameChanges_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange>(gameChanges_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder> gameChangesBuilder_;

      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange> getGameChangesList() {
        if (gameChangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gameChanges_);
        } else {
          return gameChangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public int getGameChangesCount() {
        if (gameChangesBuilder_ == null) {
          return gameChanges_.size();
        } else {
          return gameChangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange getGameChanges(int index) {
        if (gameChangesBuilder_ == null) {
          return gameChanges_.get(index);
        } else {
          return gameChangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder setGameChanges(
          int index, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange value) {
        if (gameChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameChangesIsMutable();
          gameChanges_.set(index, value);
          onChanged();
        } else {
          gameChangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder setGameChanges(
          int index, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder builderForValue) {
        if (gameChangesBuilder_ == null) {
          ensureGameChangesIsMutable();
          gameChanges_.set(index, builderForValue.build());
          onChanged();
        } else {
          gameChangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder addGameChanges(MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange value) {
        if (gameChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameChangesIsMutable();
          gameChanges_.add(value);
          onChanged();
        } else {
          gameChangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder addGameChanges(
          int index, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange value) {
        if (gameChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameChangesIsMutable();
          gameChanges_.add(index, value);
          onChanged();
        } else {
          gameChangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder addGameChanges(
          MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder builderForValue) {
        if (gameChangesBuilder_ == null) {
          ensureGameChangesIsMutable();
          gameChanges_.add(builderForValue.build());
          onChanged();
        } else {
          gameChangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder addGameChanges(
          int index, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder builderForValue) {
        if (gameChangesBuilder_ == null) {
          ensureGameChangesIsMutable();
          gameChanges_.add(index, builderForValue.build());
          onChanged();
        } else {
          gameChangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder addAllGameChanges(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange> values) {
        if (gameChangesBuilder_ == null) {
          ensureGameChangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gameChanges_);
          onChanged();
        } else {
          gameChangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder clearGameChanges() {
        if (gameChangesBuilder_ == null) {
          gameChanges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          gameChangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public Builder removeGameChanges(int index) {
        if (gameChangesBuilder_ == null) {
          ensureGameChangesIsMutable();
          gameChanges_.remove(index);
          onChanged();
        } else {
          gameChangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder getGameChangesBuilder(
          int index) {
        return getGameChangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder getGameChangesOrBuilder(
          int index) {
        if (gameChangesBuilder_ == null) {
          return gameChanges_.get(index);  } else {
          return gameChangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder>
           getGameChangesOrBuilderList() {
        if (gameChangesBuilder_ != null) {
          return gameChangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gameChanges_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder addGameChangesBuilder() {
        return getGameChangesFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder addGameChangesBuilder(
          int index) {
        return getGameChangesFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.GameChange game_changes = 4;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder>
           getGameChangesBuilderList() {
        return getGameChangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder>
          getGameChangesFieldBuilder() {
        if (gameChangesBuilder_ == null) {
          gameChangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChange.Builder, MsgGCClientTournament.CMsgDOTATournamentStateChange.GameChangeOrBuilder>(
                  gameChanges_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          gameChanges_ = null;
        }
        return gameChangesBuilder_;
      }

      private java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange> teamChanges_ =
        java.util.Collections.emptyList();
      private void ensureTeamChangesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          teamChanges_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange>(teamChanges_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder> teamChangesBuilder_;

      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange> getTeamChangesList() {
        if (teamChangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teamChanges_);
        } else {
          return teamChangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public int getTeamChangesCount() {
        if (teamChangesBuilder_ == null) {
          return teamChanges_.size();
        } else {
          return teamChangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange getTeamChanges(int index) {
        if (teamChangesBuilder_ == null) {
          return teamChanges_.get(index);
        } else {
          return teamChangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder setTeamChanges(
          int index, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange value) {
        if (teamChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamChangesIsMutable();
          teamChanges_.set(index, value);
          onChanged();
        } else {
          teamChangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder setTeamChanges(
          int index, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder builderForValue) {
        if (teamChangesBuilder_ == null) {
          ensureTeamChangesIsMutable();
          teamChanges_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamChangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder addTeamChanges(MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange value) {
        if (teamChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamChangesIsMutable();
          teamChanges_.add(value);
          onChanged();
        } else {
          teamChangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder addTeamChanges(
          int index, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange value) {
        if (teamChangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamChangesIsMutable();
          teamChanges_.add(index, value);
          onChanged();
        } else {
          teamChangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder addTeamChanges(
          MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder builderForValue) {
        if (teamChangesBuilder_ == null) {
          ensureTeamChangesIsMutable();
          teamChanges_.add(builderForValue.build());
          onChanged();
        } else {
          teamChangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder addTeamChanges(
          int index, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder builderForValue) {
        if (teamChangesBuilder_ == null) {
          ensureTeamChangesIsMutable();
          teamChanges_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamChangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder addAllTeamChanges(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange> values) {
        if (teamChangesBuilder_ == null) {
          ensureTeamChangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teamChanges_);
          onChanged();
        } else {
          teamChangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder clearTeamChanges() {
        if (teamChangesBuilder_ == null) {
          teamChanges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          teamChangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public Builder removeTeamChanges(int index) {
        if (teamChangesBuilder_ == null) {
          ensureTeamChangesIsMutable();
          teamChanges_.remove(index);
          onChanged();
        } else {
          teamChangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder getTeamChangesBuilder(
          int index) {
        return getTeamChangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder getTeamChangesOrBuilder(
          int index) {
        if (teamChangesBuilder_ == null) {
          return teamChanges_.get(index);  } else {
          return teamChangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder>
           getTeamChangesOrBuilderList() {
        if (teamChangesBuilder_ != null) {
          return teamChangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teamChanges_);
        }
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder addTeamChangesBuilder() {
        return getTeamChangesFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder addTeamChangesBuilder(
          int index) {
        return getTeamChangesFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTATournamentStateChange.TeamChange team_changes = 5;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder>
           getTeamChangesBuilderList() {
        return getTeamChangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder>
          getTeamChangesFieldBuilder() {
        if (teamChangesBuilder_ == null) {
          teamChangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChange.Builder, MsgGCClientTournament.CMsgDOTATournamentStateChange.TeamChangeOrBuilder>(
                  teamChanges_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          teamChanges_ = null;
        }
        return teamChangesBuilder_;
      }

      private java.util.List<java.lang.Integer> mergedTournamentIds_ = java.util.Collections.emptyList();
      private void ensureMergedTournamentIdsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          mergedTournamentIds_ = new java.util.ArrayList<java.lang.Integer>(mergedTournamentIds_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getMergedTournamentIdsList() {
        return java.util.Collections.unmodifiableList(mergedTournamentIds_);
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       */
      public int getMergedTournamentIdsCount() {
        return mergedTournamentIds_.size();
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       */
      public int getMergedTournamentIds(int index) {
        return mergedTournamentIds_.get(index);
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       */
      public Builder setMergedTournamentIds(
          int index, int value) {
        ensureMergedTournamentIdsIsMutable();
        mergedTournamentIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       */
      public Builder addMergedTournamentIds(int value) {
        ensureMergedTournamentIdsIsMutable();
        mergedTournamentIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       */
      public Builder addAllMergedTournamentIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMergedTournamentIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mergedTournamentIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 merged_tournament_ids = 6 [packed = true];</code>
       */
      public Builder clearMergedTournamentIds() {
        mergedTournamentIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private int stateSeqNum_ ;
      /**
       * <code>optional uint32 state_seq_num = 7;</code>
       */
      public boolean hasStateSeqNum() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 state_seq_num = 7;</code>
       */
      public int getStateSeqNum() {
        return stateSeqNum_;
      }
      /**
       * <code>optional uint32 state_seq_num = 7;</code>
       */
      public Builder setStateSeqNum(int value) {
        bitField0_ |= 0x00000040;
        stateSeqNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 state_seq_num = 7;</code>
       */
      public Builder clearStateSeqNum() {
        bitField0_ = (bitField0_ & ~0x00000040);
        stateSeqNum_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentStateChange)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTATournamentStateChange)
    private static final MsgGCClientTournament.CMsgDOTATournamentStateChange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournamentStateChange();
    }

    public static MsgGCClientTournament.CMsgDOTATournamentStateChange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTATournamentStateChange>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTATournamentStateChange>() {
      public CMsgDOTATournamentStateChange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTATournamentStateChange(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTATournamentStateChange> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTATournamentStateChange> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTATournamentStateChange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTATournamentRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    boolean hasTournamentId();
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    int getTournamentId();

    /**
     * <code>optional uint64 client_tournament_gid = 2;</code>
     */
    boolean hasClientTournamentGid();
    /**
     * <code>optional uint64 client_tournament_gid = 2;</code>
     */
    long getClientTournamentGid();
  }
  /**
   * Protobuf type {@code CMsgDOTATournamentRequest}
   */
  public  static final class CMsgDOTATournamentRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTATournamentRequest)
      CMsgDOTATournamentRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTATournamentRequest.newBuilder() to construct.
    private CMsgDOTATournamentRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTATournamentRequest() {
      tournamentId_ = 0;
      clientTournamentGid_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTATournamentRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tournamentId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              clientTournamentGid_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTATournamentRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTATournamentRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTATournamentRequest.class, MsgGCClientTournament.CMsgDOTATournamentRequest.Builder.class);
    }

    private int bitField0_;
    public static final int TOURNAMENT_ID_FIELD_NUMBER = 1;
    private int tournamentId_;
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    public boolean hasTournamentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    public int getTournamentId() {
      return tournamentId_;
    }

    public static final int CLIENT_TOURNAMENT_GID_FIELD_NUMBER = 2;
    private long clientTournamentGid_;
    /**
     * <code>optional uint64 client_tournament_gid = 2;</code>
     */
    public boolean hasClientTournamentGid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 client_tournament_gid = 2;</code>
     */
    public long getClientTournamentGid() {
      return clientTournamentGid_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, clientTournamentGid_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, clientTournamentGid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournamentRequest)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTATournamentRequest other = (MsgGCClientTournament.CMsgDOTATournamentRequest) obj;

      boolean result = true;
      result = result && (hasTournamentId() == other.hasTournamentId());
      if (hasTournamentId()) {
        result = result && (getTournamentId()
            == other.getTournamentId());
      }
      result = result && (hasClientTournamentGid() == other.hasClientTournamentGid());
      if (hasClientTournamentGid()) {
        result = result && (getClientTournamentGid()
            == other.getClientTournamentGid());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTournamentId()) {
        hash = (37 * hash) + TOURNAMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTournamentId();
      }
      if (hasClientTournamentGid()) {
        hash = (37 * hash) + CLIENT_TOURNAMENT_GID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getClientTournamentGid());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournamentRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentRequest)
        MsgGCClientTournament.CMsgDOTATournamentRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournamentRequest.class, MsgGCClientTournament.CMsgDOTATournamentRequest.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTATournamentRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        tournamentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientTournamentGid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentRequest_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTATournamentRequest getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTATournamentRequest.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTATournamentRequest build() {
        MsgGCClientTournament.CMsgDOTATournamentRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTATournamentRequest buildPartial() {
        MsgGCClientTournament.CMsgDOTATournamentRequest result = new MsgGCClientTournament.CMsgDOTATournamentRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tournamentId_ = tournamentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientTournamentGid_ = clientTournamentGid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTATournamentRequest) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTATournamentRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournamentRequest other) {
        if (other == MsgGCClientTournament.CMsgDOTATournamentRequest.getDefaultInstance()) return this;
        if (other.hasTournamentId()) {
          setTournamentId(other.getTournamentId());
        }
        if (other.hasClientTournamentGid()) {
          setClientTournamentGid(other.getClientTournamentGid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTATournamentRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTATournamentRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tournamentId_ ;
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public boolean hasTournamentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public int getTournamentId() {
        return tournamentId_;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public Builder setTournamentId(int value) {
        bitField0_ |= 0x00000001;
        tournamentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public Builder clearTournamentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tournamentId_ = 0;
        onChanged();
        return this;
      }

      private long clientTournamentGid_ ;
      /**
       * <code>optional uint64 client_tournament_gid = 2;</code>
       */
      public boolean hasClientTournamentGid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 client_tournament_gid = 2;</code>
       */
      public long getClientTournamentGid() {
        return clientTournamentGid_;
      }
      /**
       * <code>optional uint64 client_tournament_gid = 2;</code>
       */
      public Builder setClientTournamentGid(long value) {
        bitField0_ |= 0x00000002;
        clientTournamentGid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 client_tournament_gid = 2;</code>
       */
      public Builder clearClientTournamentGid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientTournamentGid_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTATournamentRequest)
    private static final MsgGCClientTournament.CMsgDOTATournamentRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournamentRequest();
    }

    public static MsgGCClientTournament.CMsgDOTATournamentRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTATournamentRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTATournamentRequest>() {
      public CMsgDOTATournamentRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTATournamentRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTATournamentRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTATournamentRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTATournamentRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTATournamentResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTATournamentResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 result = 1 [default = 2];</code>
     */
    boolean hasResult();
    /**
     * <code>optional uint32 result = 1 [default = 2];</code>
     */
    int getResult();

    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    boolean hasTournament();
    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    MsgGCClientTournament.CMsgDOTATournament getTournament();
    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    MsgGCClientTournament.CMsgDOTATournamentOrBuilder getTournamentOrBuilder();
  }
  /**
   * Protobuf type {@code CMsgDOTATournamentResponse}
   */
  public  static final class CMsgDOTATournamentResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTATournamentResponse)
      CMsgDOTATournamentResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTATournamentResponse.newBuilder() to construct.
    private CMsgDOTATournamentResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTATournamentResponse() {
      result_ = 2;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTATournamentResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readUInt32();
              break;
            }
            case 18: {
              MsgGCClientTournament.CMsgDOTATournament.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tournament_.toBuilder();
              }
              tournament_ = input.readMessage(MsgGCClientTournament.CMsgDOTATournament.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tournament_);
                tournament_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTATournamentResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTATournamentResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTATournamentResponse.class, MsgGCClientTournament.CMsgDOTATournamentResponse.Builder.class);
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>optional uint32 result = 1 [default = 2];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 result = 1 [default = 2];</code>
     */
    public int getResult() {
      return result_;
    }

    public static final int TOURNAMENT_FIELD_NUMBER = 2;
    private MsgGCClientTournament.CMsgDOTATournament tournament_;
    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    public boolean hasTournament() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournament getTournament() {
      return tournament_ == null ? MsgGCClientTournament.CMsgDOTATournament.getDefaultInstance() : tournament_;
    }
    /**
     * <code>optional .CMsgDOTATournament tournament = 2;</code>
     */
    public MsgGCClientTournament.CMsgDOTATournamentOrBuilder getTournamentOrBuilder() {
      return tournament_ == null ? MsgGCClientTournament.CMsgDOTATournament.getDefaultInstance() : tournament_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getTournament());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTournament());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTATournamentResponse)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTATournamentResponse other = (MsgGCClientTournament.CMsgDOTATournamentResponse) obj;

      boolean result = true;
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && (getResult()
            == other.getResult());
      }
      result = result && (hasTournament() == other.hasTournament());
      if (hasTournament()) {
        result = result && getTournament()
            .equals(other.getTournament());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + getResult();
      }
      if (hasTournament()) {
        hash = (37 * hash) + TOURNAMENT_FIELD_NUMBER;
        hash = (53 * hash) + getTournament().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTATournamentResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTATournamentResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTATournamentResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTATournamentResponse)
        MsgGCClientTournament.CMsgDOTATournamentResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTATournamentResponse.class, MsgGCClientTournament.CMsgDOTATournamentResponse.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTATournamentResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTournamentFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        result_ = 2;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tournamentBuilder_ == null) {
          tournament_ = null;
        } else {
          tournamentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTATournamentResponse_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTATournamentResponse getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTATournamentResponse.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTATournamentResponse build() {
        MsgGCClientTournament.CMsgDOTATournamentResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTATournamentResponse buildPartial() {
        MsgGCClientTournament.CMsgDOTATournamentResponse result = new MsgGCClientTournament.CMsgDOTATournamentResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tournamentBuilder_ == null) {
          result.tournament_ = tournament_;
        } else {
          result.tournament_ = tournamentBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTATournamentResponse) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTATournamentResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTATournamentResponse other) {
        if (other == MsgGCClientTournament.CMsgDOTATournamentResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasTournament()) {
          mergeTournament(other.getTournament());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTATournamentResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTATournamentResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int result_ = 2;
      /**
       * <code>optional uint32 result = 1 [default = 2];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 result = 1 [default = 2];</code>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>optional uint32 result = 1 [default = 2];</code>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 result = 1 [default = 2];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 2;
        onChanged();
        return this;
      }

      private MsgGCClientTournament.CMsgDOTATournament tournament_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournament, MsgGCClientTournament.CMsgDOTATournament.Builder, MsgGCClientTournament.CMsgDOTATournamentOrBuilder> tournamentBuilder_;
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public boolean hasTournament() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament getTournament() {
        if (tournamentBuilder_ == null) {
          return tournament_ == null ? MsgGCClientTournament.CMsgDOTATournament.getDefaultInstance() : tournament_;
        } else {
          return tournamentBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public Builder setTournament(MsgGCClientTournament.CMsgDOTATournament value) {
        if (tournamentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tournament_ = value;
          onChanged();
        } else {
          tournamentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public Builder setTournament(
          MsgGCClientTournament.CMsgDOTATournament.Builder builderForValue) {
        if (tournamentBuilder_ == null) {
          tournament_ = builderForValue.build();
          onChanged();
        } else {
          tournamentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public Builder mergeTournament(MsgGCClientTournament.CMsgDOTATournament value) {
        if (tournamentBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tournament_ != null &&
              tournament_ != MsgGCClientTournament.CMsgDOTATournament.getDefaultInstance()) {
            tournament_ =
              MsgGCClientTournament.CMsgDOTATournament.newBuilder(tournament_).mergeFrom(value).buildPartial();
          } else {
            tournament_ = value;
          }
          onChanged();
        } else {
          tournamentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public Builder clearTournament() {
        if (tournamentBuilder_ == null) {
          tournament_ = null;
          onChanged();
        } else {
          tournamentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournament.Builder getTournamentBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTournamentFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      public MsgGCClientTournament.CMsgDOTATournamentOrBuilder getTournamentOrBuilder() {
        if (tournamentBuilder_ != null) {
          return tournamentBuilder_.getMessageOrBuilder();
        } else {
          return tournament_ == null ?
              MsgGCClientTournament.CMsgDOTATournament.getDefaultInstance() : tournament_;
        }
      }
      /**
       * <code>optional .CMsgDOTATournament tournament = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTATournament, MsgGCClientTournament.CMsgDOTATournament.Builder, MsgGCClientTournament.CMsgDOTATournamentOrBuilder>
          getTournamentFieldBuilder() {
        if (tournamentBuilder_ == null) {
          tournamentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTATournament, MsgGCClientTournament.CMsgDOTATournament.Builder, MsgGCClientTournament.CMsgDOTATournamentOrBuilder>(
                  getTournament(),
                  getParentForChildren(),
                  isClean());
          tournament_ = null;
        }
        return tournamentBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTATournamentResponse)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTATournamentResponse)
    private static final MsgGCClientTournament.CMsgDOTATournamentResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTATournamentResponse();
    }

    public static MsgGCClientTournament.CMsgDOTATournamentResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTATournamentResponse>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTATournamentResponse>() {
      public CMsgDOTATournamentResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTATournamentResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTATournamentResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTATournamentResponse> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTATournamentResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAClearTournamentGameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAClearTournamentGame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    boolean hasTournamentId();
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    int getTournamentId();

    /**
     * <code>optional uint32 game_id = 2;</code>
     */
    boolean hasGameId();
    /**
     * <code>optional uint32 game_id = 2;</code>
     */
    int getGameId();
  }
  /**
   * Protobuf type {@code CMsgDOTAClearTournamentGame}
   */
  public  static final class CMsgDOTAClearTournamentGame extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAClearTournamentGame)
      CMsgDOTAClearTournamentGameOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAClearTournamentGame.newBuilder() to construct.
    private CMsgDOTAClearTournamentGame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAClearTournamentGame() {
      tournamentId_ = 0;
      gameId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAClearTournamentGame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tournamentId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gameId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTAClearTournamentGame_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTAClearTournamentGame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTAClearTournamentGame.class, MsgGCClientTournament.CMsgDOTAClearTournamentGame.Builder.class);
    }

    private int bitField0_;
    public static final int TOURNAMENT_ID_FIELD_NUMBER = 1;
    private int tournamentId_;
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    public boolean hasTournamentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 tournament_id = 1;</code>
     */
    public int getTournamentId() {
      return tournamentId_;
    }

    public static final int GAME_ID_FIELD_NUMBER = 2;
    private int gameId_;
    /**
     * <code>optional uint32 game_id = 2;</code>
     */
    public boolean hasGameId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 game_id = 2;</code>
     */
    public int getGameId() {
      return gameId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, gameId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tournamentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gameId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTAClearTournamentGame)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTAClearTournamentGame other = (MsgGCClientTournament.CMsgDOTAClearTournamentGame) obj;

      boolean result = true;
      result = result && (hasTournamentId() == other.hasTournamentId());
      if (hasTournamentId()) {
        result = result && (getTournamentId()
            == other.getTournamentId());
      }
      result = result && (hasGameId() == other.hasGameId());
      if (hasGameId()) {
        result = result && (getGameId()
            == other.getGameId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTournamentId()) {
        hash = (37 * hash) + TOURNAMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTournamentId();
      }
      if (hasGameId()) {
        hash = (37 * hash) + GAME_ID_FIELD_NUMBER;
        hash = (53 * hash) + getGameId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTAClearTournamentGame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAClearTournamentGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAClearTournamentGame)
        MsgGCClientTournament.CMsgDOTAClearTournamentGameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTAClearTournamentGame_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTAClearTournamentGame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTAClearTournamentGame.class, MsgGCClientTournament.CMsgDOTAClearTournamentGame.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTAClearTournamentGame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        tournamentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTAClearTournamentGame_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTAClearTournamentGame getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTAClearTournamentGame.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTAClearTournamentGame build() {
        MsgGCClientTournament.CMsgDOTAClearTournamentGame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTAClearTournamentGame buildPartial() {
        MsgGCClientTournament.CMsgDOTAClearTournamentGame result = new MsgGCClientTournament.CMsgDOTAClearTournamentGame(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tournamentId_ = tournamentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameId_ = gameId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTAClearTournamentGame) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTAClearTournamentGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTAClearTournamentGame other) {
        if (other == MsgGCClientTournament.CMsgDOTAClearTournamentGame.getDefaultInstance()) return this;
        if (other.hasTournamentId()) {
          setTournamentId(other.getTournamentId());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTAClearTournamentGame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTAClearTournamentGame) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tournamentId_ ;
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public boolean hasTournamentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public int getTournamentId() {
        return tournamentId_;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public Builder setTournamentId(int value) {
        bitField0_ |= 0x00000001;
        tournamentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public Builder clearTournamentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tournamentId_ = 0;
        onChanged();
        return this;
      }

      private int gameId_ ;
      /**
       * <code>optional uint32 game_id = 2;</code>
       */
      public boolean hasGameId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 game_id = 2;</code>
       */
      public int getGameId() {
        return gameId_;
      }
      /**
       * <code>optional uint32 game_id = 2;</code>
       */
      public Builder setGameId(int value) {
        bitField0_ |= 0x00000002;
        gameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 game_id = 2;</code>
       */
      public Builder clearGameId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAClearTournamentGame)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAClearTournamentGame)
    private static final MsgGCClientTournament.CMsgDOTAClearTournamentGame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTAClearTournamentGame();
    }

    public static MsgGCClientTournament.CMsgDOTAClearTournamentGame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAClearTournamentGame>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAClearTournamentGame>() {
      public CMsgDOTAClearTournamentGame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAClearTournamentGame(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAClearTournamentGame> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAClearTournamentGame> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTAClearTournamentGame getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyPlayerSkillLevelStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 skill_level = 1;</code>
     */
    boolean hasSkillLevel();
    /**
     * <code>optional uint32 skill_level = 1;</code>
     */
    int getSkillLevel();

    /**
     * <code>optional uint32 times_won_0 = 2;</code>
     */
    boolean hasTimesWon0();
    /**
     * <code>optional uint32 times_won_0 = 2;</code>
     */
    int getTimesWon0();

    /**
     * <code>optional uint32 times_won_1 = 3;</code>
     */
    boolean hasTimesWon1();
    /**
     * <code>optional uint32 times_won_1 = 3;</code>
     */
    int getTimesWon1();

    /**
     * <code>optional uint32 times_won_2 = 4;</code>
     */
    boolean hasTimesWon2();
    /**
     * <code>optional uint32 times_won_2 = 4;</code>
     */
    int getTimesWon2();

    /**
     * <code>optional uint32 times_won_3 = 5;</code>
     */
    boolean hasTimesWon3();
    /**
     * <code>optional uint32 times_won_3 = 5;</code>
     */
    int getTimesWon3();

    /**
     * <code>optional uint32 times_bye_and_lost = 6;</code>
     */
    boolean hasTimesByeAndLost();
    /**
     * <code>optional uint32 times_bye_and_lost = 6;</code>
     */
    int getTimesByeAndLost();

    /**
     * <code>optional uint32 times_bye_and_won = 7;</code>
     */
    boolean hasTimesByeAndWon();
    /**
     * <code>optional uint32 times_bye_and_won = 7;</code>
     */
    int getTimesByeAndWon();

    /**
     * <code>optional uint32 times_unusual_champ = 10;</code>
     */
    boolean hasTimesUnusualChamp();
    /**
     * <code>optional uint32 times_unusual_champ = 10;</code>
     */
    int getTimesUnusualChamp();

    /**
     * <code>optional uint32 total_games_won = 8;</code>
     */
    boolean hasTotalGamesWon();
    /**
     * <code>optional uint32 total_games_won = 8;</code>
     */
    int getTotalGamesWon();

    /**
     * <code>optional uint32 score = 9;</code>
     */
    boolean hasScore();
    /**
     * <code>optional uint32 score = 9;</code>
     */
    int getScore();
  }
  /**
   * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerSkillLevelStats}
   */
  public  static final class CMsgDOTAWeekendTourneyPlayerSkillLevelStats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyPlayerSkillLevelStats)
      CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAWeekendTourneyPlayerSkillLevelStats.newBuilder() to construct.
    private CMsgDOTAWeekendTourneyPlayerSkillLevelStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAWeekendTourneyPlayerSkillLevelStats() {
      skillLevel_ = 0;
      timesWon0_ = 0;
      timesWon1_ = 0;
      timesWon2_ = 0;
      timesWon3_ = 0;
      timesByeAndLost_ = 0;
      timesByeAndWon_ = 0;
      timesUnusualChamp_ = 0;
      totalGamesWon_ = 0;
      score_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAWeekendTourneyPlayerSkillLevelStats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              skillLevel_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timesWon0_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timesWon1_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timesWon2_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              timesWon3_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              timesByeAndLost_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              timesByeAndWon_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000100;
              totalGamesWon_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000200;
              score_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              timesUnusualChamp_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder.class);
    }

    private int bitField0_;
    public static final int SKILL_LEVEL_FIELD_NUMBER = 1;
    private int skillLevel_;
    /**
     * <code>optional uint32 skill_level = 1;</code>
     */
    public boolean hasSkillLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 skill_level = 1;</code>
     */
    public int getSkillLevel() {
      return skillLevel_;
    }

    public static final int TIMES_WON_0_FIELD_NUMBER = 2;
    private int timesWon0_;
    /**
     * <code>optional uint32 times_won_0 = 2;</code>
     */
    public boolean hasTimesWon0() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 times_won_0 = 2;</code>
     */
    public int getTimesWon0() {
      return timesWon0_;
    }

    public static final int TIMES_WON_1_FIELD_NUMBER = 3;
    private int timesWon1_;
    /**
     * <code>optional uint32 times_won_1 = 3;</code>
     */
    public boolean hasTimesWon1() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 times_won_1 = 3;</code>
     */
    public int getTimesWon1() {
      return timesWon1_;
    }

    public static final int TIMES_WON_2_FIELD_NUMBER = 4;
    private int timesWon2_;
    /**
     * <code>optional uint32 times_won_2 = 4;</code>
     */
    public boolean hasTimesWon2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 times_won_2 = 4;</code>
     */
    public int getTimesWon2() {
      return timesWon2_;
    }

    public static final int TIMES_WON_3_FIELD_NUMBER = 5;
    private int timesWon3_;
    /**
     * <code>optional uint32 times_won_3 = 5;</code>
     */
    public boolean hasTimesWon3() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 times_won_3 = 5;</code>
     */
    public int getTimesWon3() {
      return timesWon3_;
    }

    public static final int TIMES_BYE_AND_LOST_FIELD_NUMBER = 6;
    private int timesByeAndLost_;
    /**
     * <code>optional uint32 times_bye_and_lost = 6;</code>
     */
    public boolean hasTimesByeAndLost() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 times_bye_and_lost = 6;</code>
     */
    public int getTimesByeAndLost() {
      return timesByeAndLost_;
    }

    public static final int TIMES_BYE_AND_WON_FIELD_NUMBER = 7;
    private int timesByeAndWon_;
    /**
     * <code>optional uint32 times_bye_and_won = 7;</code>
     */
    public boolean hasTimesByeAndWon() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 times_bye_and_won = 7;</code>
     */
    public int getTimesByeAndWon() {
      return timesByeAndWon_;
    }

    public static final int TIMES_UNUSUAL_CHAMP_FIELD_NUMBER = 10;
    private int timesUnusualChamp_;
    /**
     * <code>optional uint32 times_unusual_champ = 10;</code>
     */
    public boolean hasTimesUnusualChamp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 times_unusual_champ = 10;</code>
     */
    public int getTimesUnusualChamp() {
      return timesUnusualChamp_;
    }

    public static final int TOTAL_GAMES_WON_FIELD_NUMBER = 8;
    private int totalGamesWon_;
    /**
     * <code>optional uint32 total_games_won = 8;</code>
     */
    public boolean hasTotalGamesWon() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 total_games_won = 8;</code>
     */
    public int getTotalGamesWon() {
      return totalGamesWon_;
    }

    public static final int SCORE_FIELD_NUMBER = 9;
    private int score_;
    /**
     * <code>optional uint32 score = 9;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 score = 9;</code>
     */
    public int getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, skillLevel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, timesWon0_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, timesWon1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, timesWon2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, timesWon3_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, timesByeAndLost_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, timesByeAndWon_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(8, totalGamesWon_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(9, score_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(10, timesUnusualChamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, skillLevel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, timesWon0_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, timesWon1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, timesWon2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, timesWon3_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, timesByeAndLost_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, timesByeAndWon_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, totalGamesWon_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, score_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, timesUnusualChamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats other = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats) obj;

      boolean result = true;
      result = result && (hasSkillLevel() == other.hasSkillLevel());
      if (hasSkillLevel()) {
        result = result && (getSkillLevel()
            == other.getSkillLevel());
      }
      result = result && (hasTimesWon0() == other.hasTimesWon0());
      if (hasTimesWon0()) {
        result = result && (getTimesWon0()
            == other.getTimesWon0());
      }
      result = result && (hasTimesWon1() == other.hasTimesWon1());
      if (hasTimesWon1()) {
        result = result && (getTimesWon1()
            == other.getTimesWon1());
      }
      result = result && (hasTimesWon2() == other.hasTimesWon2());
      if (hasTimesWon2()) {
        result = result && (getTimesWon2()
            == other.getTimesWon2());
      }
      result = result && (hasTimesWon3() == other.hasTimesWon3());
      if (hasTimesWon3()) {
        result = result && (getTimesWon3()
            == other.getTimesWon3());
      }
      result = result && (hasTimesByeAndLost() == other.hasTimesByeAndLost());
      if (hasTimesByeAndLost()) {
        result = result && (getTimesByeAndLost()
            == other.getTimesByeAndLost());
      }
      result = result && (hasTimesByeAndWon() == other.hasTimesByeAndWon());
      if (hasTimesByeAndWon()) {
        result = result && (getTimesByeAndWon()
            == other.getTimesByeAndWon());
      }
      result = result && (hasTimesUnusualChamp() == other.hasTimesUnusualChamp());
      if (hasTimesUnusualChamp()) {
        result = result && (getTimesUnusualChamp()
            == other.getTimesUnusualChamp());
      }
      result = result && (hasTotalGamesWon() == other.hasTotalGamesWon());
      if (hasTotalGamesWon()) {
        result = result && (getTotalGamesWon()
            == other.getTotalGamesWon());
      }
      result = result && (hasScore() == other.hasScore());
      if (hasScore()) {
        result = result && (getScore()
            == other.getScore());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSkillLevel()) {
        hash = (37 * hash) + SKILL_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getSkillLevel();
      }
      if (hasTimesWon0()) {
        hash = (37 * hash) + TIMES_WON_0_FIELD_NUMBER;
        hash = (53 * hash) + getTimesWon0();
      }
      if (hasTimesWon1()) {
        hash = (37 * hash) + TIMES_WON_1_FIELD_NUMBER;
        hash = (53 * hash) + getTimesWon1();
      }
      if (hasTimesWon2()) {
        hash = (37 * hash) + TIMES_WON_2_FIELD_NUMBER;
        hash = (53 * hash) + getTimesWon2();
      }
      if (hasTimesWon3()) {
        hash = (37 * hash) + TIMES_WON_3_FIELD_NUMBER;
        hash = (53 * hash) + getTimesWon3();
      }
      if (hasTimesByeAndLost()) {
        hash = (37 * hash) + TIMES_BYE_AND_LOST_FIELD_NUMBER;
        hash = (53 * hash) + getTimesByeAndLost();
      }
      if (hasTimesByeAndWon()) {
        hash = (37 * hash) + TIMES_BYE_AND_WON_FIELD_NUMBER;
        hash = (53 * hash) + getTimesByeAndWon();
      }
      if (hasTimesUnusualChamp()) {
        hash = (37 * hash) + TIMES_UNUSUAL_CHAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimesUnusualChamp();
      }
      if (hasTotalGamesWon()) {
        hash = (37 * hash) + TOTAL_GAMES_WON_FIELD_NUMBER;
        hash = (53 * hash) + getTotalGamesWon();
      }
      if (hasScore()) {
        hash = (37 * hash) + SCORE_FIELD_NUMBER;
        hash = (53 * hash) + getScore();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerSkillLevelStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyPlayerSkillLevelStats)
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        skillLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timesWon0_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timesWon1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        timesWon2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        timesWon3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        timesByeAndLost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        timesByeAndWon_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        timesUnusualChamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        totalGamesWon_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats build() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats buildPartial() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats result = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.skillLevel_ = skillLevel_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timesWon0_ = timesWon0_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timesWon1_ = timesWon1_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timesWon2_ = timesWon2_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.timesWon3_ = timesWon3_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.timesByeAndLost_ = timesByeAndLost_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.timesByeAndWon_ = timesByeAndWon_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.timesUnusualChamp_ = timesUnusualChamp_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.totalGamesWon_ = totalGamesWon_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats other) {
        if (other == MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.getDefaultInstance()) return this;
        if (other.hasSkillLevel()) {
          setSkillLevel(other.getSkillLevel());
        }
        if (other.hasTimesWon0()) {
          setTimesWon0(other.getTimesWon0());
        }
        if (other.hasTimesWon1()) {
          setTimesWon1(other.getTimesWon1());
        }
        if (other.hasTimesWon2()) {
          setTimesWon2(other.getTimesWon2());
        }
        if (other.hasTimesWon3()) {
          setTimesWon3(other.getTimesWon3());
        }
        if (other.hasTimesByeAndLost()) {
          setTimesByeAndLost(other.getTimesByeAndLost());
        }
        if (other.hasTimesByeAndWon()) {
          setTimesByeAndWon(other.getTimesByeAndWon());
        }
        if (other.hasTimesUnusualChamp()) {
          setTimesUnusualChamp(other.getTimesUnusualChamp());
        }
        if (other.hasTotalGamesWon()) {
          setTotalGamesWon(other.getTotalGamesWon());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int skillLevel_ ;
      /**
       * <code>optional uint32 skill_level = 1;</code>
       */
      public boolean hasSkillLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 skill_level = 1;</code>
       */
      public int getSkillLevel() {
        return skillLevel_;
      }
      /**
       * <code>optional uint32 skill_level = 1;</code>
       */
      public Builder setSkillLevel(int value) {
        bitField0_ |= 0x00000001;
        skillLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 skill_level = 1;</code>
       */
      public Builder clearSkillLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        skillLevel_ = 0;
        onChanged();
        return this;
      }

      private int timesWon0_ ;
      /**
       * <code>optional uint32 times_won_0 = 2;</code>
       */
      public boolean hasTimesWon0() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 times_won_0 = 2;</code>
       */
      public int getTimesWon0() {
        return timesWon0_;
      }
      /**
       * <code>optional uint32 times_won_0 = 2;</code>
       */
      public Builder setTimesWon0(int value) {
        bitField0_ |= 0x00000002;
        timesWon0_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_won_0 = 2;</code>
       */
      public Builder clearTimesWon0() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timesWon0_ = 0;
        onChanged();
        return this;
      }

      private int timesWon1_ ;
      /**
       * <code>optional uint32 times_won_1 = 3;</code>
       */
      public boolean hasTimesWon1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 times_won_1 = 3;</code>
       */
      public int getTimesWon1() {
        return timesWon1_;
      }
      /**
       * <code>optional uint32 times_won_1 = 3;</code>
       */
      public Builder setTimesWon1(int value) {
        bitField0_ |= 0x00000004;
        timesWon1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_won_1 = 3;</code>
       */
      public Builder clearTimesWon1() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timesWon1_ = 0;
        onChanged();
        return this;
      }

      private int timesWon2_ ;
      /**
       * <code>optional uint32 times_won_2 = 4;</code>
       */
      public boolean hasTimesWon2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 times_won_2 = 4;</code>
       */
      public int getTimesWon2() {
        return timesWon2_;
      }
      /**
       * <code>optional uint32 times_won_2 = 4;</code>
       */
      public Builder setTimesWon2(int value) {
        bitField0_ |= 0x00000008;
        timesWon2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_won_2 = 4;</code>
       */
      public Builder clearTimesWon2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timesWon2_ = 0;
        onChanged();
        return this;
      }

      private int timesWon3_ ;
      /**
       * <code>optional uint32 times_won_3 = 5;</code>
       */
      public boolean hasTimesWon3() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 times_won_3 = 5;</code>
       */
      public int getTimesWon3() {
        return timesWon3_;
      }
      /**
       * <code>optional uint32 times_won_3 = 5;</code>
       */
      public Builder setTimesWon3(int value) {
        bitField0_ |= 0x00000010;
        timesWon3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_won_3 = 5;</code>
       */
      public Builder clearTimesWon3() {
        bitField0_ = (bitField0_ & ~0x00000010);
        timesWon3_ = 0;
        onChanged();
        return this;
      }

      private int timesByeAndLost_ ;
      /**
       * <code>optional uint32 times_bye_and_lost = 6;</code>
       */
      public boolean hasTimesByeAndLost() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 times_bye_and_lost = 6;</code>
       */
      public int getTimesByeAndLost() {
        return timesByeAndLost_;
      }
      /**
       * <code>optional uint32 times_bye_and_lost = 6;</code>
       */
      public Builder setTimesByeAndLost(int value) {
        bitField0_ |= 0x00000020;
        timesByeAndLost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_bye_and_lost = 6;</code>
       */
      public Builder clearTimesByeAndLost() {
        bitField0_ = (bitField0_ & ~0x00000020);
        timesByeAndLost_ = 0;
        onChanged();
        return this;
      }

      private int timesByeAndWon_ ;
      /**
       * <code>optional uint32 times_bye_and_won = 7;</code>
       */
      public boolean hasTimesByeAndWon() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 times_bye_and_won = 7;</code>
       */
      public int getTimesByeAndWon() {
        return timesByeAndWon_;
      }
      /**
       * <code>optional uint32 times_bye_and_won = 7;</code>
       */
      public Builder setTimesByeAndWon(int value) {
        bitField0_ |= 0x00000040;
        timesByeAndWon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_bye_and_won = 7;</code>
       */
      public Builder clearTimesByeAndWon() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timesByeAndWon_ = 0;
        onChanged();
        return this;
      }

      private int timesUnusualChamp_ ;
      /**
       * <code>optional uint32 times_unusual_champ = 10;</code>
       */
      public boolean hasTimesUnusualChamp() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 times_unusual_champ = 10;</code>
       */
      public int getTimesUnusualChamp() {
        return timesUnusualChamp_;
      }
      /**
       * <code>optional uint32 times_unusual_champ = 10;</code>
       */
      public Builder setTimesUnusualChamp(int value) {
        bitField0_ |= 0x00000080;
        timesUnusualChamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 times_unusual_champ = 10;</code>
       */
      public Builder clearTimesUnusualChamp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        timesUnusualChamp_ = 0;
        onChanged();
        return this;
      }

      private int totalGamesWon_ ;
      /**
       * <code>optional uint32 total_games_won = 8;</code>
       */
      public boolean hasTotalGamesWon() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 total_games_won = 8;</code>
       */
      public int getTotalGamesWon() {
        return totalGamesWon_;
      }
      /**
       * <code>optional uint32 total_games_won = 8;</code>
       */
      public Builder setTotalGamesWon(int value) {
        bitField0_ |= 0x00000100;
        totalGamesWon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 total_games_won = 8;</code>
       */
      public Builder clearTotalGamesWon() {
        bitField0_ = (bitField0_ & ~0x00000100);
        totalGamesWon_ = 0;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <code>optional uint32 score = 9;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 score = 9;</code>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>optional uint32 score = 9;</code>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000200;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 score = 9;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000200);
        score_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyPlayerSkillLevelStats)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyPlayerSkillLevelStats)
    private static final MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats();
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerSkillLevelStats>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAWeekendTourneyPlayerSkillLevelStats>() {
      public CMsgDOTAWeekendTourneyPlayerSkillLevelStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAWeekendTourneyPlayerSkillLevelStats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerSkillLevelStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerSkillLevelStats> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAWeekendTourneyPlayerStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyPlayerStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    boolean hasSeasonTrophyId();
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    int getSeasonTrophyId();

    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats>
        getSkillLevelsList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getSkillLevels(int index);
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    int getSkillLevelsCount();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder>
        getSkillLevelsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder getSkillLevelsOrBuilder(
        int index);

    /**
     * <code>optional uint32 current_tier = 4;</code>
     */
    boolean hasCurrentTier();
    /**
     * <code>optional uint32 current_tier = 4;</code>
     */
    int getCurrentTier();
  }
  /**
   * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerStats}
   */
  public  static final class CMsgDOTAWeekendTourneyPlayerStats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyPlayerStats)
      CMsgDOTAWeekendTourneyPlayerStatsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAWeekendTourneyPlayerStats.newBuilder() to construct.
    private CMsgDOTAWeekendTourneyPlayerStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAWeekendTourneyPlayerStats() {
      accountId_ = 0;
      seasonTrophyId_ = 0;
      skillLevels_ = java.util.Collections.emptyList();
      currentTier_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAWeekendTourneyPlayerStats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seasonTrophyId_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                skillLevels_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats>();
                mutable_bitField0_ |= 0x00000004;
              }
              skillLevels_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              currentTier_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          skillLevels_ = java.util.Collections.unmodifiableList(skillLevels_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats.Builder.class);
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int SEASON_TROPHY_ID_FIELD_NUMBER = 2;
    private int seasonTrophyId_;
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    public boolean hasSeasonTrophyId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    public int getSeasonTrophyId() {
      return seasonTrophyId_;
    }

    public static final int SKILL_LEVELS_FIELD_NUMBER = 3;
    private java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats> skillLevels_;
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats> getSkillLevelsList() {
      return skillLevels_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder>
        getSkillLevelsOrBuilderList() {
      return skillLevels_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    public int getSkillLevelsCount() {
      return skillLevels_.size();
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getSkillLevels(int index) {
      return skillLevels_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
     */
    public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder getSkillLevelsOrBuilder(
        int index) {
      return skillLevels_.get(index);
    }

    public static final int CURRENT_TIER_FIELD_NUMBER = 4;
    private int currentTier_;
    /**
     * <code>optional uint32 current_tier = 4;</code>
     */
    public boolean hasCurrentTier() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 current_tier = 4;</code>
     */
    public int getCurrentTier() {
      return currentTier_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, seasonTrophyId_);
      }
      for (int i = 0; i < skillLevels_.size(); i++) {
        output.writeMessage(3, skillLevels_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, currentTier_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, seasonTrophyId_);
      }
      for (int i = 0; i < skillLevels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, skillLevels_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, currentTier_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats other = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats) obj;

      boolean result = true;
      result = result && (hasAccountId() == other.hasAccountId());
      if (hasAccountId()) {
        result = result && (getAccountId()
            == other.getAccountId());
      }
      result = result && (hasSeasonTrophyId() == other.hasSeasonTrophyId());
      if (hasSeasonTrophyId()) {
        result = result && (getSeasonTrophyId()
            == other.getSeasonTrophyId());
      }
      result = result && getSkillLevelsList()
          .equals(other.getSkillLevelsList());
      result = result && (hasCurrentTier() == other.hasCurrentTier());
      if (hasCurrentTier()) {
        result = result && (getCurrentTier()
            == other.getCurrentTier());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      if (hasSeasonTrophyId()) {
        hash = (37 * hash) + SEASON_TROPHY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonTrophyId();
      }
      if (getSkillLevelsCount() > 0) {
        hash = (37 * hash) + SKILL_LEVELS_FIELD_NUMBER;
        hash = (53 * hash) + getSkillLevelsList().hashCode();
      }
      if (hasCurrentTier()) {
        hash = (37 * hash) + CURRENT_TIER_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentTier();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyPlayerStats)
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSkillLevelsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        seasonTrophyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (skillLevelsBuilder_ == null) {
          skillLevels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          skillLevelsBuilder_.clear();
        }
        currentTier_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats build() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats buildPartial() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats result = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seasonTrophyId_ = seasonTrophyId_;
        if (skillLevelsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            skillLevels_ = java.util.Collections.unmodifiableList(skillLevels_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.skillLevels_ = skillLevels_;
        } else {
          result.skillLevels_ = skillLevelsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.currentTier_ = currentTier_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats other) {
        if (other == MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasSeasonTrophyId()) {
          setSeasonTrophyId(other.getSeasonTrophyId());
        }
        if (skillLevelsBuilder_ == null) {
          if (!other.skillLevels_.isEmpty()) {
            if (skillLevels_.isEmpty()) {
              skillLevels_ = other.skillLevels_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSkillLevelsIsMutable();
              skillLevels_.addAll(other.skillLevels_);
            }
            onChanged();
          }
        } else {
          if (!other.skillLevels_.isEmpty()) {
            if (skillLevelsBuilder_.isEmpty()) {
              skillLevelsBuilder_.dispose();
              skillLevelsBuilder_ = null;
              skillLevels_ = other.skillLevels_;
              bitField0_ = (bitField0_ & ~0x00000004);
              skillLevelsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSkillLevelsFieldBuilder() : null;
            } else {
              skillLevelsBuilder_.addAllMessages(other.skillLevels_);
            }
          }
        }
        if (other.hasCurrentTier()) {
          setCurrentTier(other.getCurrentTier());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int seasonTrophyId_ ;
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public boolean hasSeasonTrophyId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public int getSeasonTrophyId() {
        return seasonTrophyId_;
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public Builder setSeasonTrophyId(int value) {
        bitField0_ |= 0x00000002;
        seasonTrophyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public Builder clearSeasonTrophyId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seasonTrophyId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats> skillLevels_ =
        java.util.Collections.emptyList();
      private void ensureSkillLevelsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          skillLevels_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats>(skillLevels_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder> skillLevelsBuilder_;

      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats> getSkillLevelsList() {
        if (skillLevelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(skillLevels_);
        } else {
          return skillLevelsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public int getSkillLevelsCount() {
        if (skillLevelsBuilder_ == null) {
          return skillLevels_.size();
        } else {
          return skillLevelsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats getSkillLevels(int index) {
        if (skillLevelsBuilder_ == null) {
          return skillLevels_.get(index);
        } else {
          return skillLevelsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder setSkillLevels(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats value) {
        if (skillLevelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillLevelsIsMutable();
          skillLevels_.set(index, value);
          onChanged();
        } else {
          skillLevelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder setSkillLevels(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder builderForValue) {
        if (skillLevelsBuilder_ == null) {
          ensureSkillLevelsIsMutable();
          skillLevels_.set(index, builderForValue.build());
          onChanged();
        } else {
          skillLevelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder addSkillLevels(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats value) {
        if (skillLevelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillLevelsIsMutable();
          skillLevels_.add(value);
          onChanged();
        } else {
          skillLevelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder addSkillLevels(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats value) {
        if (skillLevelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillLevelsIsMutable();
          skillLevels_.add(index, value);
          onChanged();
        } else {
          skillLevelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder addSkillLevels(
          MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder builderForValue) {
        if (skillLevelsBuilder_ == null) {
          ensureSkillLevelsIsMutable();
          skillLevels_.add(builderForValue.build());
          onChanged();
        } else {
          skillLevelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder addSkillLevels(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder builderForValue) {
        if (skillLevelsBuilder_ == null) {
          ensureSkillLevelsIsMutable();
          skillLevels_.add(index, builderForValue.build());
          onChanged();
        } else {
          skillLevelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder addAllSkillLevels(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats> values) {
        if (skillLevelsBuilder_ == null) {
          ensureSkillLevelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, skillLevels_);
          onChanged();
        } else {
          skillLevelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder clearSkillLevels() {
        if (skillLevelsBuilder_ == null) {
          skillLevels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          skillLevelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public Builder removeSkillLevels(int index) {
        if (skillLevelsBuilder_ == null) {
          ensureSkillLevelsIsMutable();
          skillLevels_.remove(index);
          onChanged();
        } else {
          skillLevelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder getSkillLevelsBuilder(
          int index) {
        return getSkillLevelsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder getSkillLevelsOrBuilder(
          int index) {
        if (skillLevelsBuilder_ == null) {
          return skillLevels_.get(index);  } else {
          return skillLevelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder>
           getSkillLevelsOrBuilderList() {
        if (skillLevelsBuilder_ != null) {
          return skillLevelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(skillLevels_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder addSkillLevelsBuilder() {
        return getSkillLevelsFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder addSkillLevelsBuilder(
          int index) {
        return getSkillLevelsFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerSkillLevelStats skill_levels = 3;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder>
           getSkillLevelsBuilderList() {
        return getSkillLevelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder>
          getSkillLevelsFieldBuilder() {
        if (skillLevelsBuilder_ == null) {
          skillLevelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStats.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerSkillLevelStatsOrBuilder>(
                  skillLevels_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          skillLevels_ = null;
        }
        return skillLevelsBuilder_;
      }

      private int currentTier_ ;
      /**
       * <code>optional uint32 current_tier = 4;</code>
       */
      public boolean hasCurrentTier() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 current_tier = 4;</code>
       */
      public int getCurrentTier() {
        return currentTier_;
      }
      /**
       * <code>optional uint32 current_tier = 4;</code>
       */
      public Builder setCurrentTier(int value) {
        bitField0_ |= 0x00000008;
        currentTier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 current_tier = 4;</code>
       */
      public Builder clearCurrentTier() {
        bitField0_ = (bitField0_ & ~0x00000008);
        currentTier_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyPlayerStats)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyPlayerStats)
    private static final MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats();
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStats>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAWeekendTourneyPlayerStats>() {
      public CMsgDOTAWeekendTourneyPlayerStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAWeekendTourneyPlayerStats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStats> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAWeekendTourneyPlayerStatsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyPlayerStatsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    boolean hasSeasonTrophyId();
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    int getSeasonTrophyId();
  }
  /**
   * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerStatsRequest}
   */
  public  static final class CMsgDOTAWeekendTourneyPlayerStatsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyPlayerStatsRequest)
      CMsgDOTAWeekendTourneyPlayerStatsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAWeekendTourneyPlayerStatsRequest.newBuilder() to construct.
    private CMsgDOTAWeekendTourneyPlayerStatsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAWeekendTourneyPlayerStatsRequest() {
      accountId_ = 0;
      seasonTrophyId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAWeekendTourneyPlayerStatsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seasonTrophyId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.Builder.class);
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int SEASON_TROPHY_ID_FIELD_NUMBER = 2;
    private int seasonTrophyId_;
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    public boolean hasSeasonTrophyId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    public int getSeasonTrophyId() {
      return seasonTrophyId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, seasonTrophyId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, seasonTrophyId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest other = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest) obj;

      boolean result = true;
      result = result && (hasAccountId() == other.hasAccountId());
      if (hasAccountId()) {
        result = result && (getAccountId()
            == other.getAccountId());
      }
      result = result && (hasSeasonTrophyId() == other.hasSeasonTrophyId());
      if (hasSeasonTrophyId()) {
        result = result && (getSeasonTrophyId()
            == other.getSeasonTrophyId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      if (hasSeasonTrophyId()) {
        hash = (37 * hash) + SEASON_TROPHY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonTrophyId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerStatsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyPlayerStatsRequest)
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        seasonTrophyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest build() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest buildPartial() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest result = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seasonTrophyId_ = seasonTrophyId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest other) {
        if (other == MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasSeasonTrophyId()) {
          setSeasonTrophyId(other.getSeasonTrophyId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int seasonTrophyId_ ;
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public boolean hasSeasonTrophyId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public int getSeasonTrophyId() {
        return seasonTrophyId_;
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public Builder setSeasonTrophyId(int value) {
        bitField0_ |= 0x00000002;
        seasonTrophyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public Builder clearSeasonTrophyId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seasonTrophyId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyPlayerStatsRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyPlayerStatsRequest)
    private static final MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest();
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStatsRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAWeekendTourneyPlayerStatsRequest>() {
      public CMsgDOTAWeekendTourneyPlayerStatsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAWeekendTourneyPlayerStatsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStatsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerStatsRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerStatsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAWeekendTourneyPlayerHistoryRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyPlayerHistoryRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    boolean hasSeasonTrophyId();
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    int getSeasonTrophyId();
  }
  /**
   * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerHistoryRequest}
   */
  public  static final class CMsgDOTAWeekendTourneyPlayerHistoryRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyPlayerHistoryRequest)
      CMsgDOTAWeekendTourneyPlayerHistoryRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAWeekendTourneyPlayerHistoryRequest.newBuilder() to construct.
    private CMsgDOTAWeekendTourneyPlayerHistoryRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAWeekendTourneyPlayerHistoryRequest() {
      accountId_ = 0;
      seasonTrophyId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAWeekendTourneyPlayerHistoryRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seasonTrophyId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistoryRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistoryRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest.Builder.class);
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int SEASON_TROPHY_ID_FIELD_NUMBER = 2;
    private int seasonTrophyId_;
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    public boolean hasSeasonTrophyId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 season_trophy_id = 2;</code>
     */
    public int getSeasonTrophyId() {
      return seasonTrophyId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, seasonTrophyId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, seasonTrophyId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest other = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest) obj;

      boolean result = true;
      result = result && (hasAccountId() == other.hasAccountId());
      if (hasAccountId()) {
        result = result && (getAccountId()
            == other.getAccountId());
      }
      result = result && (hasSeasonTrophyId() == other.hasSeasonTrophyId());
      if (hasSeasonTrophyId()) {
        result = result && (getSeasonTrophyId()
            == other.getSeasonTrophyId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      if (hasSeasonTrophyId()) {
        hash = (37 * hash) + SEASON_TROPHY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSeasonTrophyId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerHistoryRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyPlayerHistoryRequest)
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistoryRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistoryRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        seasonTrophyId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistoryRequest_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest build() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest buildPartial() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest result = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seasonTrophyId_ = seasonTrophyId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest other) {
        if (other == MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasSeasonTrophyId()) {
          setSeasonTrophyId(other.getSeasonTrophyId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int seasonTrophyId_ ;
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public boolean hasSeasonTrophyId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public int getSeasonTrophyId() {
        return seasonTrophyId_;
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public Builder setSeasonTrophyId(int value) {
        bitField0_ |= 0x00000002;
        seasonTrophyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season_trophy_id = 2;</code>
       */
      public Builder clearSeasonTrophyId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seasonTrophyId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyPlayerHistoryRequest)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyPlayerHistoryRequest)
    private static final MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest();
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerHistoryRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAWeekendTourneyPlayerHistoryRequest>() {
      public CMsgDOTAWeekendTourneyPlayerHistoryRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAWeekendTourneyPlayerHistoryRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerHistoryRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerHistoryRequest> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAWeekendTourneyPlayerHistoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyPlayerHistory)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament>
        getTournamentsList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getTournaments(int index);
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    int getTournamentsCount();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder>
        getTournamentsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder getTournamentsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerHistory}
   */
  public  static final class CMsgDOTAWeekendTourneyPlayerHistory extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyPlayerHistory)
      CMsgDOTAWeekendTourneyPlayerHistoryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAWeekendTourneyPlayerHistory.newBuilder() to construct.
    private CMsgDOTAWeekendTourneyPlayerHistory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAWeekendTourneyPlayerHistory() {
      accountId_ = 0;
      tournaments_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAWeekendTourneyPlayerHistory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                tournaments_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament>();
                mutable_bitField0_ |= 0x00000002;
              }
              tournaments_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          tournaments_ = java.util.Collections.unmodifiableList(tournaments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Builder.class);
    }

    public interface TournamentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyPlayerHistory.Tournament)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      boolean hasTournamentId();
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      int getTournamentId();

      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      boolean hasStartTime();
      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      int getStartTime();

      /**
       * <code>optional uint32 tournament_tier = 3;</code>
       */
      boolean hasTournamentTier();
      /**
       * <code>optional uint32 tournament_tier = 3;</code>
       */
      int getTournamentTier();

      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      boolean hasTeamId();
      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      int getTeamId();

      /**
       * <code>optional uint32 team_date = 5;</code>
       */
      boolean hasTeamDate();
      /**
       * <code>optional uint32 team_date = 5;</code>
       */
      int getTeamDate();

      /**
       * <code>optional uint32 team_result = 6;</code>
       */
      boolean hasTeamResult();
      /**
       * <code>optional uint32 team_result = 6;</code>
       */
      int getTeamResult();

      /**
       * <code>repeated uint32 account_id = 7;</code>
       */
      java.util.List<java.lang.Integer> getAccountIdList();
      /**
       * <code>repeated uint32 account_id = 7;</code>
       */
      int getAccountIdCount();
      /**
       * <code>repeated uint32 account_id = 7;</code>
       */
      int getAccountId(int index);

      /**
       * <code>optional string team_name = 8;</code>
       */
      boolean hasTeamName();
      /**
       * <code>optional string team_name = 8;</code>
       */
      java.lang.String getTeamName();
      /**
       * <code>optional string team_name = 8;</code>
       */
      com.google.protobuf.ByteString
          getTeamNameBytes();

      /**
       * <code>optional uint32 season_trophy_id = 9;</code>
       */
      boolean hasSeasonTrophyId();
      /**
       * <code>optional uint32 season_trophy_id = 9;</code>
       */
      int getSeasonTrophyId();
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerHistory.Tournament}
     */
    public  static final class Tournament extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyPlayerHistory.Tournament)
        TournamentOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Tournament.newBuilder() to construct.
      private Tournament(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Tournament() {
        tournamentId_ = 0;
        startTime_ = 0;
        tournamentTier_ = 0;
        teamId_ = 0;
        teamDate_ = 0;
        teamResult_ = 0;
        accountId_ = java.util.Collections.emptyList();
        teamName_ = "";
        seasonTrophyId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Tournament(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                tournamentId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                startTime_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                tournamentTier_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                teamId_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                teamDate_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                teamResult_ = input.readUInt32();
                break;
              }
              case 56: {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  accountId_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000040;
                }
                accountId_.add(input.readUInt32());
                break;
              }
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                  accountId_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000040;
                }
                while (input.getBytesUntilLimit() > 0) {
                  accountId_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 66: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000040;
                teamName_ = bs;
                break;
              }
              case 72: {
                bitField0_ |= 0x00000080;
                seasonTrophyId_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
            accountId_ = java.util.Collections.unmodifiableList(accountId_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder.class);
      }

      private int bitField0_;
      public static final int TOURNAMENT_ID_FIELD_NUMBER = 1;
      private int tournamentId_;
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public boolean hasTournamentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 tournament_id = 1;</code>
       */
      public int getTournamentId() {
        return tournamentId_;
      }

      public static final int START_TIME_FIELD_NUMBER = 2;
      private int startTime_;
      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 start_time = 2;</code>
       */
      public int getStartTime() {
        return startTime_;
      }

      public static final int TOURNAMENT_TIER_FIELD_NUMBER = 3;
      private int tournamentTier_;
      /**
       * <code>optional uint32 tournament_tier = 3;</code>
       */
      public boolean hasTournamentTier() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 tournament_tier = 3;</code>
       */
      public int getTournamentTier() {
        return tournamentTier_;
      }

      public static final int TEAM_ID_FIELD_NUMBER = 4;
      private int teamId_;
      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      public int getTeamId() {
        return teamId_;
      }

      public static final int TEAM_DATE_FIELD_NUMBER = 5;
      private int teamDate_;
      /**
       * <code>optional uint32 team_date = 5;</code>
       */
      public boolean hasTeamDate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 team_date = 5;</code>
       */
      public int getTeamDate() {
        return teamDate_;
      }

      public static final int TEAM_RESULT_FIELD_NUMBER = 6;
      private int teamResult_;
      /**
       * <code>optional uint32 team_result = 6;</code>
       */
      public boolean hasTeamResult() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 team_result = 6;</code>
       */
      public int getTeamResult() {
        return teamResult_;
      }

      public static final int ACCOUNT_ID_FIELD_NUMBER = 7;
      private java.util.List<java.lang.Integer> accountId_;
      /**
       * <code>repeated uint32 account_id = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getAccountIdList() {
        return accountId_;
      }
      /**
       * <code>repeated uint32 account_id = 7;</code>
       */
      public int getAccountIdCount() {
        return accountId_.size();
      }
      /**
       * <code>repeated uint32 account_id = 7;</code>
       */
      public int getAccountId(int index) {
        return accountId_.get(index);
      }

      public static final int TEAM_NAME_FIELD_NUMBER = 8;
      private volatile java.lang.Object teamName_;
      /**
       * <code>optional string team_name = 8;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string team_name = 8;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string team_name = 8;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SEASON_TROPHY_ID_FIELD_NUMBER = 9;
      private int seasonTrophyId_;
      /**
       * <code>optional uint32 season_trophy_id = 9;</code>
       */
      public boolean hasSeasonTrophyId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 season_trophy_id = 9;</code>
       */
      public int getSeasonTrophyId() {
        return seasonTrophyId_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, tournamentId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, startTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, tournamentTier_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, teamId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, teamDate_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, teamResult_);
        }
        for (int i = 0; i < accountId_.size(); i++) {
          output.writeUInt32(7, accountId_.get(i));
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 8, teamName_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt32(9, seasonTrophyId_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, tournamentId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, startTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, tournamentTier_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, teamId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, teamDate_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, teamResult_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < accountId_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(accountId_.get(i));
          }
          size += dataSize;
          size += 1 * getAccountIdList().size();
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, teamName_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, seasonTrophyId_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament other = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament) obj;

        boolean result = true;
        result = result && (hasTournamentId() == other.hasTournamentId());
        if (hasTournamentId()) {
          result = result && (getTournamentId()
              == other.getTournamentId());
        }
        result = result && (hasStartTime() == other.hasStartTime());
        if (hasStartTime()) {
          result = result && (getStartTime()
              == other.getStartTime());
        }
        result = result && (hasTournamentTier() == other.hasTournamentTier());
        if (hasTournamentTier()) {
          result = result && (getTournamentTier()
              == other.getTournamentTier());
        }
        result = result && (hasTeamId() == other.hasTeamId());
        if (hasTeamId()) {
          result = result && (getTeamId()
              == other.getTeamId());
        }
        result = result && (hasTeamDate() == other.hasTeamDate());
        if (hasTeamDate()) {
          result = result && (getTeamDate()
              == other.getTeamDate());
        }
        result = result && (hasTeamResult() == other.hasTeamResult());
        if (hasTeamResult()) {
          result = result && (getTeamResult()
              == other.getTeamResult());
        }
        result = result && getAccountIdList()
            .equals(other.getAccountIdList());
        result = result && (hasTeamName() == other.hasTeamName());
        if (hasTeamName()) {
          result = result && getTeamName()
              .equals(other.getTeamName());
        }
        result = result && (hasSeasonTrophyId() == other.hasSeasonTrophyId());
        if (hasSeasonTrophyId()) {
          result = result && (getSeasonTrophyId()
              == other.getSeasonTrophyId());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTournamentId()) {
          hash = (37 * hash) + TOURNAMENT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTournamentId();
        }
        if (hasStartTime()) {
          hash = (37 * hash) + START_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getStartTime();
        }
        if (hasTournamentTier()) {
          hash = (37 * hash) + TOURNAMENT_TIER_FIELD_NUMBER;
          hash = (53 * hash) + getTournamentTier();
        }
        if (hasTeamId()) {
          hash = (37 * hash) + TEAM_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTeamId();
        }
        if (hasTeamDate()) {
          hash = (37 * hash) + TEAM_DATE_FIELD_NUMBER;
          hash = (53 * hash) + getTeamDate();
        }
        if (hasTeamResult()) {
          hash = (37 * hash) + TEAM_RESULT_FIELD_NUMBER;
          hash = (53 * hash) + getTeamResult();
        }
        if (getAccountIdCount() > 0) {
          hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getAccountIdList().hashCode();
        }
        if (hasTeamName()) {
          hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getTeamName().hashCode();
        }
        if (hasSeasonTrophyId()) {
          hash = (37 * hash) + SEASON_TROPHY_ID_FIELD_NUMBER;
          hash = (53 * hash) + getSeasonTrophyId();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerHistory.Tournament}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyPlayerHistory.Tournament)
          MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          tournamentId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          startTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          tournamentTier_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          teamId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          teamDate_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          teamResult_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          accountId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          teamName_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          seasonTrophyId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament build() {
          MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament buildPartial() {
          MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament result = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.tournamentId_ = tournamentId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.startTime_ = startTime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.tournamentTier_ = tournamentTier_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.teamId_ = teamId_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.teamDate_ = teamDate_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.teamResult_ = teamResult_;
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            accountId_ = java.util.Collections.unmodifiableList(accountId_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000040;
          }
          result.teamName_ = teamName_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000080;
          }
          result.seasonTrophyId_ = seasonTrophyId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament other) {
          if (other == MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.getDefaultInstance()) return this;
          if (other.hasTournamentId()) {
            setTournamentId(other.getTournamentId());
          }
          if (other.hasStartTime()) {
            setStartTime(other.getStartTime());
          }
          if (other.hasTournamentTier()) {
            setTournamentTier(other.getTournamentTier());
          }
          if (other.hasTeamId()) {
            setTeamId(other.getTeamId());
          }
          if (other.hasTeamDate()) {
            setTeamDate(other.getTeamDate());
          }
          if (other.hasTeamResult()) {
            setTeamResult(other.getTeamResult());
          }
          if (!other.accountId_.isEmpty()) {
            if (accountId_.isEmpty()) {
              accountId_ = other.accountId_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureAccountIdIsMutable();
              accountId_.addAll(other.accountId_);
            }
            onChanged();
          }
          if (other.hasTeamName()) {
            bitField0_ |= 0x00000080;
            teamName_ = other.teamName_;
            onChanged();
          }
          if (other.hasSeasonTrophyId()) {
            setSeasonTrophyId(other.getSeasonTrophyId());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int tournamentId_ ;
        /**
         * <code>optional uint32 tournament_id = 1;</code>
         */
        public boolean hasTournamentId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 tournament_id = 1;</code>
         */
        public int getTournamentId() {
          return tournamentId_;
        }
        /**
         * <code>optional uint32 tournament_id = 1;</code>
         */
        public Builder setTournamentId(int value) {
          bitField0_ |= 0x00000001;
          tournamentId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tournament_id = 1;</code>
         */
        public Builder clearTournamentId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tournamentId_ = 0;
          onChanged();
          return this;
        }

        private int startTime_ ;
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public boolean hasStartTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public int getStartTime() {
          return startTime_;
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public Builder setStartTime(int value) {
          bitField0_ |= 0x00000002;
          startTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 start_time = 2;</code>
         */
        public Builder clearStartTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          startTime_ = 0;
          onChanged();
          return this;
        }

        private int tournamentTier_ ;
        /**
         * <code>optional uint32 tournament_tier = 3;</code>
         */
        public boolean hasTournamentTier() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 tournament_tier = 3;</code>
         */
        public int getTournamentTier() {
          return tournamentTier_;
        }
        /**
         * <code>optional uint32 tournament_tier = 3;</code>
         */
        public Builder setTournamentTier(int value) {
          bitField0_ |= 0x00000004;
          tournamentTier_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tournament_tier = 3;</code>
         */
        public Builder clearTournamentTier() {
          bitField0_ = (bitField0_ & ~0x00000004);
          tournamentTier_ = 0;
          onChanged();
          return this;
        }

        private int teamId_ ;
        /**
         * <code>optional uint32 team_id = 4;</code>
         */
        public boolean hasTeamId() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         */
        public int getTeamId() {
          return teamId_;
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         */
        public Builder setTeamId(int value) {
          bitField0_ |= 0x00000008;
          teamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_id = 4;</code>
         */
        public Builder clearTeamId() {
          bitField0_ = (bitField0_ & ~0x00000008);
          teamId_ = 0;
          onChanged();
          return this;
        }

        private int teamDate_ ;
        /**
         * <code>optional uint32 team_date = 5;</code>
         */
        public boolean hasTeamDate() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 team_date = 5;</code>
         */
        public int getTeamDate() {
          return teamDate_;
        }
        /**
         * <code>optional uint32 team_date = 5;</code>
         */
        public Builder setTeamDate(int value) {
          bitField0_ |= 0x00000010;
          teamDate_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_date = 5;</code>
         */
        public Builder clearTeamDate() {
          bitField0_ = (bitField0_ & ~0x00000010);
          teamDate_ = 0;
          onChanged();
          return this;
        }

        private int teamResult_ ;
        /**
         * <code>optional uint32 team_result = 6;</code>
         */
        public boolean hasTeamResult() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 team_result = 6;</code>
         */
        public int getTeamResult() {
          return teamResult_;
        }
        /**
         * <code>optional uint32 team_result = 6;</code>
         */
        public Builder setTeamResult(int value) {
          bitField0_ |= 0x00000020;
          teamResult_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team_result = 6;</code>
         */
        public Builder clearTeamResult() {
          bitField0_ = (bitField0_ & ~0x00000020);
          teamResult_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> accountId_ = java.util.Collections.emptyList();
        private void ensureAccountIdIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            accountId_ = new java.util.ArrayList<java.lang.Integer>(accountId_);
            bitField0_ |= 0x00000040;
           }
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         */
        public java.util.List<java.lang.Integer>
            getAccountIdList() {
          return java.util.Collections.unmodifiableList(accountId_);
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         */
        public int getAccountIdCount() {
          return accountId_.size();
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         */
        public int getAccountId(int index) {
          return accountId_.get(index);
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         */
        public Builder setAccountId(
            int index, int value) {
          ensureAccountIdIsMutable();
          accountId_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         */
        public Builder addAccountId(int value) {
          ensureAccountIdIsMutable();
          accountId_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         */
        public Builder addAllAccountId(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureAccountIdIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accountId_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 account_id = 7;</code>
         */
        public Builder clearAccountId() {
          accountId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }

        private java.lang.Object teamName_ = "";
        /**
         * <code>optional string team_name = 8;</code>
         */
        public boolean hasTeamName() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string team_name = 8;</code>
         */
        public java.lang.String getTeamName() {
          java.lang.Object ref = teamName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              teamName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string team_name = 8;</code>
         */
        public com.google.protobuf.ByteString
            getTeamNameBytes() {
          java.lang.Object ref = teamName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            teamName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string team_name = 8;</code>
         */
        public Builder setTeamName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          teamName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 8;</code>
         */
        public Builder clearTeamName() {
          bitField0_ = (bitField0_ & ~0x00000080);
          teamName_ = getDefaultInstance().getTeamName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string team_name = 8;</code>
         */
        public Builder setTeamNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          teamName_ = value;
          onChanged();
          return this;
        }

        private int seasonTrophyId_ ;
        /**
         * <code>optional uint32 season_trophy_id = 9;</code>
         */
        public boolean hasSeasonTrophyId() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional uint32 season_trophy_id = 9;</code>
         */
        public int getSeasonTrophyId() {
          return seasonTrophyId_;
        }
        /**
         * <code>optional uint32 season_trophy_id = 9;</code>
         */
        public Builder setSeasonTrophyId(int value) {
          bitField0_ |= 0x00000100;
          seasonTrophyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 season_trophy_id = 9;</code>
         */
        public Builder clearSeasonTrophyId() {
          bitField0_ = (bitField0_ & ~0x00000100);
          seasonTrophyId_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyPlayerHistory.Tournament)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyPlayerHistory.Tournament)
      private static final MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament();
      }

      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Tournament>
          PARSER = new com.google.protobuf.AbstractParser<Tournament>() {
        public Tournament parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Tournament(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Tournament> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Tournament> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int TOURNAMENTS_FIELD_NUMBER = 3;
    private java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament> tournaments_;
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament> getTournamentsList() {
      return tournaments_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder>
        getTournamentsOrBuilderList() {
      return tournaments_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    public int getTournamentsCount() {
      return tournaments_.size();
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getTournaments(int index) {
      return tournaments_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
     */
    public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder getTournamentsOrBuilder(
        int index) {
      return tournaments_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      for (int i = 0; i < tournaments_.size(); i++) {
        output.writeMessage(3, tournaments_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      for (int i = 0; i < tournaments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tournaments_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory other = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory) obj;

      boolean result = true;
      result = result && (hasAccountId() == other.hasAccountId());
      if (hasAccountId()) {
        result = result && (getAccountId()
            == other.getAccountId());
      }
      result = result && getTournamentsList()
          .equals(other.getTournamentsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccountId()) {
        hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAccountId();
      }
      if (getTournamentsCount() > 0) {
        hash = (37 * hash) + TOURNAMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getTournamentsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyPlayerHistory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyPlayerHistory)
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTournamentsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tournamentsBuilder_ == null) {
          tournaments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          tournamentsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory build() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory buildPartial() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory result = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (tournamentsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            tournaments_ = java.util.Collections.unmodifiableList(tournaments_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tournaments_ = tournaments_;
        } else {
          result.tournaments_ = tournamentsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory other) {
        if (other == MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (tournamentsBuilder_ == null) {
          if (!other.tournaments_.isEmpty()) {
            if (tournaments_.isEmpty()) {
              tournaments_ = other.tournaments_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTournamentsIsMutable();
              tournaments_.addAll(other.tournaments_);
            }
            onChanged();
          }
        } else {
          if (!other.tournaments_.isEmpty()) {
            if (tournamentsBuilder_.isEmpty()) {
              tournamentsBuilder_.dispose();
              tournamentsBuilder_ = null;
              tournaments_ = other.tournaments_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tournamentsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTournamentsFieldBuilder() : null;
            } else {
              tournamentsBuilder_.addAllMessages(other.tournaments_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament> tournaments_ =
        java.util.Collections.emptyList();
      private void ensureTournamentsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          tournaments_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament>(tournaments_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder> tournamentsBuilder_;

      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament> getTournamentsList() {
        if (tournamentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tournaments_);
        } else {
          return tournamentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public int getTournamentsCount() {
        if (tournamentsBuilder_ == null) {
          return tournaments_.size();
        } else {
          return tournamentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament getTournaments(int index) {
        if (tournamentsBuilder_ == null) {
          return tournaments_.get(index);
        } else {
          return tournamentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder setTournaments(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament value) {
        if (tournamentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTournamentsIsMutable();
          tournaments_.set(index, value);
          onChanged();
        } else {
          tournamentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder setTournaments(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder builderForValue) {
        if (tournamentsBuilder_ == null) {
          ensureTournamentsIsMutable();
          tournaments_.set(index, builderForValue.build());
          onChanged();
        } else {
          tournamentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder addTournaments(MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament value) {
        if (tournamentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTournamentsIsMutable();
          tournaments_.add(value);
          onChanged();
        } else {
          tournamentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder addTournaments(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament value) {
        if (tournamentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTournamentsIsMutable();
          tournaments_.add(index, value);
          onChanged();
        } else {
          tournamentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder addTournaments(
          MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder builderForValue) {
        if (tournamentsBuilder_ == null) {
          ensureTournamentsIsMutable();
          tournaments_.add(builderForValue.build());
          onChanged();
        } else {
          tournamentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder addTournaments(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder builderForValue) {
        if (tournamentsBuilder_ == null) {
          ensureTournamentsIsMutable();
          tournaments_.add(index, builderForValue.build());
          onChanged();
        } else {
          tournamentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder addAllTournaments(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament> values) {
        if (tournamentsBuilder_ == null) {
          ensureTournamentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tournaments_);
          onChanged();
        } else {
          tournamentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder clearTournaments() {
        if (tournamentsBuilder_ == null) {
          tournaments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tournamentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public Builder removeTournaments(int index) {
        if (tournamentsBuilder_ == null) {
          ensureTournamentsIsMutable();
          tournaments_.remove(index);
          onChanged();
        } else {
          tournamentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder getTournamentsBuilder(
          int index) {
        return getTournamentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder getTournamentsOrBuilder(
          int index) {
        if (tournamentsBuilder_ == null) {
          return tournaments_.get(index);  } else {
          return tournamentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder>
           getTournamentsOrBuilderList() {
        if (tournamentsBuilder_ != null) {
          return tournamentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tournaments_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder addTournamentsBuilder() {
        return getTournamentsFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder addTournamentsBuilder(
          int index) {
        return getTournamentsFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyPlayerHistory.Tournament tournaments = 3;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder>
           getTournamentsBuilderList() {
        return getTournamentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder>
          getTournamentsFieldBuilder() {
        if (tournamentsBuilder_ == null) {
          tournamentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.Tournament.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory.TournamentOrBuilder>(
                  tournaments_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          tournaments_ = null;
        }
        return tournamentsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyPlayerHistory)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyPlayerHistory)
    private static final MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory();
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerHistory>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAWeekendTourneyPlayerHistory>() {
      public CMsgDOTAWeekendTourneyPlayerHistory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAWeekendTourneyPlayerHistory(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerHistory> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAWeekendTourneyPlayerHistory> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTAWeekendTourneyPlayerHistory getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTAWeekendTourneyParticipationDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyParticipationDetails)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division>
        getDivisionsList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDivisions(int index);
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    int getDivisionsCount();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder>
        getDivisionsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder getDivisionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails}
   */
  public  static final class CMsgDOTAWeekendTourneyParticipationDetails extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyParticipationDetails)
      CMsgDOTAWeekendTourneyParticipationDetailsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CMsgDOTAWeekendTourneyParticipationDetails.newBuilder() to construct.
    private CMsgDOTAWeekendTourneyParticipationDetails(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTAWeekendTourneyParticipationDetails() {
      divisions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAWeekendTourneyParticipationDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                divisions_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division>();
                mutable_bitField0_ |= 0x00000001;
              }
              divisions_.add(
                  input.readMessage(MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          divisions_ = java.util.Collections.unmodifiableList(divisions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Builder.class);
    }

    public interface TierOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyParticipationDetails.Tier)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 tier = 1;</code>
       */
      boolean hasTier();
      /**
       * <code>optional uint32 tier = 1;</code>
       */
      int getTier();

      /**
       * <code>optional uint32 players = 2;</code>
       */
      boolean hasPlayers();
      /**
       * <code>optional uint32 players = 2;</code>
       */
      int getPlayers();

      /**
       * <code>optional uint32 teams = 3;</code>
       */
      boolean hasTeams();
      /**
       * <code>optional uint32 teams = 3;</code>
       */
      int getTeams();

      /**
       * <code>optional uint32 winning_teams = 4;</code>
       */
      boolean hasWinningTeams();
      /**
       * <code>optional uint32 winning_teams = 4;</code>
       */
      int getWinningTeams();

      /**
       * <code>optional uint32 players_streak_2 = 5;</code>
       */
      boolean hasPlayersStreak2();
      /**
       * <code>optional uint32 players_streak_2 = 5;</code>
       */
      int getPlayersStreak2();

      /**
       * <code>optional uint32 players_streak_3 = 6;</code>
       */
      boolean hasPlayersStreak3();
      /**
       * <code>optional uint32 players_streak_3 = 6;</code>
       */
      int getPlayersStreak3();

      /**
       * <code>optional uint32 players_streak_4 = 7;</code>
       */
      boolean hasPlayersStreak4();
      /**
       * <code>optional uint32 players_streak_4 = 7;</code>
       */
      int getPlayersStreak4();

      /**
       * <code>optional uint32 players_streak_5 = 8;</code>
       */
      boolean hasPlayersStreak5();
      /**
       * <code>optional uint32 players_streak_5 = 8;</code>
       */
      int getPlayersStreak5();
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails.Tier}
     */
    public  static final class Tier extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyParticipationDetails.Tier)
        TierOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Tier.newBuilder() to construct.
      private Tier(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Tier() {
        tier_ = 0;
        players_ = 0;
        teams_ = 0;
        winningTeams_ = 0;
        playersStreak2_ = 0;
        playersStreak3_ = 0;
        playersStreak4_ = 0;
        playersStreak5_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Tier(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                tier_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                players_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                teams_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                winningTeams_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                playersStreak2_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                playersStreak3_ = input.readUInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                playersStreak4_ = input.readUInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                playersStreak5_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder.class);
      }

      private int bitField0_;
      public static final int TIER_FIELD_NUMBER = 1;
      private int tier_;
      /**
       * <code>optional uint32 tier = 1;</code>
       */
      public boolean hasTier() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 tier = 1;</code>
       */
      public int getTier() {
        return tier_;
      }

      public static final int PLAYERS_FIELD_NUMBER = 2;
      private int players_;
      /**
       * <code>optional uint32 players = 2;</code>
       */
      public boolean hasPlayers() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 players = 2;</code>
       */
      public int getPlayers() {
        return players_;
      }

      public static final int TEAMS_FIELD_NUMBER = 3;
      private int teams_;
      /**
       * <code>optional uint32 teams = 3;</code>
       */
      public boolean hasTeams() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 teams = 3;</code>
       */
      public int getTeams() {
        return teams_;
      }

      public static final int WINNING_TEAMS_FIELD_NUMBER = 4;
      private int winningTeams_;
      /**
       * <code>optional uint32 winning_teams = 4;</code>
       */
      public boolean hasWinningTeams() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 winning_teams = 4;</code>
       */
      public int getWinningTeams() {
        return winningTeams_;
      }

      public static final int PLAYERS_STREAK_2_FIELD_NUMBER = 5;
      private int playersStreak2_;
      /**
       * <code>optional uint32 players_streak_2 = 5;</code>
       */
      public boolean hasPlayersStreak2() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 players_streak_2 = 5;</code>
       */
      public int getPlayersStreak2() {
        return playersStreak2_;
      }

      public static final int PLAYERS_STREAK_3_FIELD_NUMBER = 6;
      private int playersStreak3_;
      /**
       * <code>optional uint32 players_streak_3 = 6;</code>
       */
      public boolean hasPlayersStreak3() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 players_streak_3 = 6;</code>
       */
      public int getPlayersStreak3() {
        return playersStreak3_;
      }

      public static final int PLAYERS_STREAK_4_FIELD_NUMBER = 7;
      private int playersStreak4_;
      /**
       * <code>optional uint32 players_streak_4 = 7;</code>
       */
      public boolean hasPlayersStreak4() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 players_streak_4 = 7;</code>
       */
      public int getPlayersStreak4() {
        return playersStreak4_;
      }

      public static final int PLAYERS_STREAK_5_FIELD_NUMBER = 8;
      private int playersStreak5_;
      /**
       * <code>optional uint32 players_streak_5 = 8;</code>
       */
      public boolean hasPlayersStreak5() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 players_streak_5 = 8;</code>
       */
      public int getPlayersStreak5() {
        return playersStreak5_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, tier_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, players_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, teams_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, winningTeams_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, playersStreak2_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, playersStreak3_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(7, playersStreak4_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt32(8, playersStreak5_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, tier_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, players_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, teams_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, winningTeams_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, playersStreak2_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, playersStreak3_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, playersStreak4_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, playersStreak5_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier other = (MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier) obj;

        boolean result = true;
        result = result && (hasTier() == other.hasTier());
        if (hasTier()) {
          result = result && (getTier()
              == other.getTier());
        }
        result = result && (hasPlayers() == other.hasPlayers());
        if (hasPlayers()) {
          result = result && (getPlayers()
              == other.getPlayers());
        }
        result = result && (hasTeams() == other.hasTeams());
        if (hasTeams()) {
          result = result && (getTeams()
              == other.getTeams());
        }
        result = result && (hasWinningTeams() == other.hasWinningTeams());
        if (hasWinningTeams()) {
          result = result && (getWinningTeams()
              == other.getWinningTeams());
        }
        result = result && (hasPlayersStreak2() == other.hasPlayersStreak2());
        if (hasPlayersStreak2()) {
          result = result && (getPlayersStreak2()
              == other.getPlayersStreak2());
        }
        result = result && (hasPlayersStreak3() == other.hasPlayersStreak3());
        if (hasPlayersStreak3()) {
          result = result && (getPlayersStreak3()
              == other.getPlayersStreak3());
        }
        result = result && (hasPlayersStreak4() == other.hasPlayersStreak4());
        if (hasPlayersStreak4()) {
          result = result && (getPlayersStreak4()
              == other.getPlayersStreak4());
        }
        result = result && (hasPlayersStreak5() == other.hasPlayersStreak5());
        if (hasPlayersStreak5()) {
          result = result && (getPlayersStreak5()
              == other.getPlayersStreak5());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTier()) {
          hash = (37 * hash) + TIER_FIELD_NUMBER;
          hash = (53 * hash) + getTier();
        }
        if (hasPlayers()) {
          hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
          hash = (53 * hash) + getPlayers();
        }
        if (hasTeams()) {
          hash = (37 * hash) + TEAMS_FIELD_NUMBER;
          hash = (53 * hash) + getTeams();
        }
        if (hasWinningTeams()) {
          hash = (37 * hash) + WINNING_TEAMS_FIELD_NUMBER;
          hash = (53 * hash) + getWinningTeams();
        }
        if (hasPlayersStreak2()) {
          hash = (37 * hash) + PLAYERS_STREAK_2_FIELD_NUMBER;
          hash = (53 * hash) + getPlayersStreak2();
        }
        if (hasPlayersStreak3()) {
          hash = (37 * hash) + PLAYERS_STREAK_3_FIELD_NUMBER;
          hash = (53 * hash) + getPlayersStreak3();
        }
        if (hasPlayersStreak4()) {
          hash = (37 * hash) + PLAYERS_STREAK_4_FIELD_NUMBER;
          hash = (53 * hash) + getPlayersStreak4();
        }
        if (hasPlayersStreak5()) {
          hash = (37 * hash) + PLAYERS_STREAK_5_FIELD_NUMBER;
          hash = (53 * hash) + getPlayersStreak5();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails.Tier}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyParticipationDetails.Tier)
          MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          tier_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          players_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          teams_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          winningTeams_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          playersStreak2_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          playersStreak3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          playersStreak4_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          playersStreak5_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier build() {
          MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier buildPartial() {
          MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier result = new MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.tier_ = tier_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.players_ = players_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.teams_ = teams_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.winningTeams_ = winningTeams_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.playersStreak2_ = playersStreak2_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.playersStreak3_ = playersStreak3_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.playersStreak4_ = playersStreak4_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.playersStreak5_ = playersStreak5_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier other) {
          if (other == MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.getDefaultInstance()) return this;
          if (other.hasTier()) {
            setTier(other.getTier());
          }
          if (other.hasPlayers()) {
            setPlayers(other.getPlayers());
          }
          if (other.hasTeams()) {
            setTeams(other.getTeams());
          }
          if (other.hasWinningTeams()) {
            setWinningTeams(other.getWinningTeams());
          }
          if (other.hasPlayersStreak2()) {
            setPlayersStreak2(other.getPlayersStreak2());
          }
          if (other.hasPlayersStreak3()) {
            setPlayersStreak3(other.getPlayersStreak3());
          }
          if (other.hasPlayersStreak4()) {
            setPlayersStreak4(other.getPlayersStreak4());
          }
          if (other.hasPlayersStreak5()) {
            setPlayersStreak5(other.getPlayersStreak5());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int tier_ ;
        /**
         * <code>optional uint32 tier = 1;</code>
         */
        public boolean hasTier() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 tier = 1;</code>
         */
        public int getTier() {
          return tier_;
        }
        /**
         * <code>optional uint32 tier = 1;</code>
         */
        public Builder setTier(int value) {
          bitField0_ |= 0x00000001;
          tier_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tier = 1;</code>
         */
        public Builder clearTier() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tier_ = 0;
          onChanged();
          return this;
        }

        private int players_ ;
        /**
         * <code>optional uint32 players = 2;</code>
         */
        public boolean hasPlayers() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 players = 2;</code>
         */
        public int getPlayers() {
          return players_;
        }
        /**
         * <code>optional uint32 players = 2;</code>
         */
        public Builder setPlayers(int value) {
          bitField0_ |= 0x00000002;
          players_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 players = 2;</code>
         */
        public Builder clearPlayers() {
          bitField0_ = (bitField0_ & ~0x00000002);
          players_ = 0;
          onChanged();
          return this;
        }

        private int teams_ ;
        /**
         * <code>optional uint32 teams = 3;</code>
         */
        public boolean hasTeams() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 teams = 3;</code>
         */
        public int getTeams() {
          return teams_;
        }
        /**
         * <code>optional uint32 teams = 3;</code>
         */
        public Builder setTeams(int value) {
          bitField0_ |= 0x00000004;
          teams_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 teams = 3;</code>
         */
        public Builder clearTeams() {
          bitField0_ = (bitField0_ & ~0x00000004);
          teams_ = 0;
          onChanged();
          return this;
        }

        private int winningTeams_ ;
        /**
         * <code>optional uint32 winning_teams = 4;</code>
         */
        public boolean hasWinningTeams() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 winning_teams = 4;</code>
         */
        public int getWinningTeams() {
          return winningTeams_;
        }
        /**
         * <code>optional uint32 winning_teams = 4;</code>
         */
        public Builder setWinningTeams(int value) {
          bitField0_ |= 0x00000008;
          winningTeams_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 winning_teams = 4;</code>
         */
        public Builder clearWinningTeams() {
          bitField0_ = (bitField0_ & ~0x00000008);
          winningTeams_ = 0;
          onChanged();
          return this;
        }

        private int playersStreak2_ ;
        /**
         * <code>optional uint32 players_streak_2 = 5;</code>
         */
        public boolean hasPlayersStreak2() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 players_streak_2 = 5;</code>
         */
        public int getPlayersStreak2() {
          return playersStreak2_;
        }
        /**
         * <code>optional uint32 players_streak_2 = 5;</code>
         */
        public Builder setPlayersStreak2(int value) {
          bitField0_ |= 0x00000010;
          playersStreak2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 players_streak_2 = 5;</code>
         */
        public Builder clearPlayersStreak2() {
          bitField0_ = (bitField0_ & ~0x00000010);
          playersStreak2_ = 0;
          onChanged();
          return this;
        }

        private int playersStreak3_ ;
        /**
         * <code>optional uint32 players_streak_3 = 6;</code>
         */
        public boolean hasPlayersStreak3() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 players_streak_3 = 6;</code>
         */
        public int getPlayersStreak3() {
          return playersStreak3_;
        }
        /**
         * <code>optional uint32 players_streak_3 = 6;</code>
         */
        public Builder setPlayersStreak3(int value) {
          bitField0_ |= 0x00000020;
          playersStreak3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 players_streak_3 = 6;</code>
         */
        public Builder clearPlayersStreak3() {
          bitField0_ = (bitField0_ & ~0x00000020);
          playersStreak3_ = 0;
          onChanged();
          return this;
        }

        private int playersStreak4_ ;
        /**
         * <code>optional uint32 players_streak_4 = 7;</code>
         */
        public boolean hasPlayersStreak4() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 players_streak_4 = 7;</code>
         */
        public int getPlayersStreak4() {
          return playersStreak4_;
        }
        /**
         * <code>optional uint32 players_streak_4 = 7;</code>
         */
        public Builder setPlayersStreak4(int value) {
          bitField0_ |= 0x00000040;
          playersStreak4_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 players_streak_4 = 7;</code>
         */
        public Builder clearPlayersStreak4() {
          bitField0_ = (bitField0_ & ~0x00000040);
          playersStreak4_ = 0;
          onChanged();
          return this;
        }

        private int playersStreak5_ ;
        /**
         * <code>optional uint32 players_streak_5 = 8;</code>
         */
        public boolean hasPlayersStreak5() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint32 players_streak_5 = 8;</code>
         */
        public int getPlayersStreak5() {
          return playersStreak5_;
        }
        /**
         * <code>optional uint32 players_streak_5 = 8;</code>
         */
        public Builder setPlayersStreak5(int value) {
          bitField0_ |= 0x00000080;
          playersStreak5_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 players_streak_5 = 8;</code>
         */
        public Builder clearPlayersStreak5() {
          bitField0_ = (bitField0_ & ~0x00000080);
          playersStreak5_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyParticipationDetails.Tier)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyParticipationDetails.Tier)
      private static final MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier();
      }

      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Tier>
          PARSER = new com.google.protobuf.AbstractParser<Tier>() {
        public Tier parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Tier(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Tier> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Tier> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DivisionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAWeekendTourneyParticipationDetails.Division)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 division_id = 1;</code>
       */
      boolean hasDivisionId();
      /**
       * <code>optional uint32 division_id = 1;</code>
       */
      int getDivisionId();

      /**
       * <code>optional uint32 schedule_time = 2;</code>
       */
      boolean hasScheduleTime();
      /**
       * <code>optional uint32 schedule_time = 2;</code>
       */
      int getScheduleTime();

      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier>
          getTiersList();
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getTiers(int index);
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      int getTiersCount();
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder>
          getTiersOrBuilderList();
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder getTiersOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails.Division}
     */
    public  static final class Division extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAWeekendTourneyParticipationDetails.Division)
        DivisionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Division.newBuilder() to construct.
      private Division(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Division() {
        divisionId_ = 0;
        scheduleTime_ = 0;
        tiers_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Division(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                divisionId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                scheduleTime_ = input.readUInt32();
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  tiers_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier>();
                  mutable_bitField0_ |= 0x00000004;
                }
                tiers_.add(
                    input.readMessage(MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            tiers_ = java.util.Collections.unmodifiableList(tiers_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder.class);
      }

      private int bitField0_;
      public static final int DIVISION_ID_FIELD_NUMBER = 1;
      private int divisionId_;
      /**
       * <code>optional uint32 division_id = 1;</code>
       */
      public boolean hasDivisionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 division_id = 1;</code>
       */
      public int getDivisionId() {
        return divisionId_;
      }

      public static final int SCHEDULE_TIME_FIELD_NUMBER = 2;
      private int scheduleTime_;
      /**
       * <code>optional uint32 schedule_time = 2;</code>
       */
      public boolean hasScheduleTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 schedule_time = 2;</code>
       */
      public int getScheduleTime() {
        return scheduleTime_;
      }

      public static final int TIERS_FIELD_NUMBER = 3;
      private java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier> tiers_;
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier> getTiersList() {
        return tiers_;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder>
          getTiersOrBuilderList() {
        return tiers_;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      public int getTiersCount() {
        return tiers_.size();
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getTiers(int index) {
        return tiers_.get(index);
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder getTiersOrBuilder(
          int index) {
        return tiers_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, divisionId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, scheduleTime_);
        }
        for (int i = 0; i < tiers_.size(); i++) {
          output.writeMessage(3, tiers_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, divisionId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, scheduleTime_);
        }
        for (int i = 0; i < tiers_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, tiers_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division)) {
          return super.equals(obj);
        }
        MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division other = (MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division) obj;

        boolean result = true;
        result = result && (hasDivisionId() == other.hasDivisionId());
        if (hasDivisionId()) {
          result = result && (getDivisionId()
              == other.getDivisionId());
        }
        result = result && (hasScheduleTime() == other.hasScheduleTime());
        if (hasScheduleTime()) {
          result = result && (getScheduleTime()
              == other.getScheduleTime());
        }
        result = result && getTiersList()
            .equals(other.getTiersList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDivisionId()) {
          hash = (37 * hash) + DIVISION_ID_FIELD_NUMBER;
          hash = (53 * hash) + getDivisionId();
        }
        if (hasScheduleTime()) {
          hash = (37 * hash) + SCHEDULE_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getScheduleTime();
        }
        if (getTiersCount() > 0) {
          hash = (37 * hash) + TIERS_FIELD_NUMBER;
          hash = (53 * hash) + getTiersList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails.Division}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyParticipationDetails.Division)
          MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder.class);
        }

        // Construct using MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getTiersFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          divisionId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          scheduleTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          if (tiersBuilder_ == null) {
            tiers_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            tiersBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor;
        }

        public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDefaultInstanceForType() {
          return MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.getDefaultInstance();
        }

        public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division build() {
          MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division buildPartial() {
          MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division result = new MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.divisionId_ = divisionId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.scheduleTime_ = scheduleTime_;
          if (tiersBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              tiers_ = java.util.Collections.unmodifiableList(tiers_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.tiers_ = tiers_;
          } else {
            result.tiers_ = tiersBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division) {
            return mergeFrom((MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division other) {
          if (other == MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.getDefaultInstance()) return this;
          if (other.hasDivisionId()) {
            setDivisionId(other.getDivisionId());
          }
          if (other.hasScheduleTime()) {
            setScheduleTime(other.getScheduleTime());
          }
          if (tiersBuilder_ == null) {
            if (!other.tiers_.isEmpty()) {
              if (tiers_.isEmpty()) {
                tiers_ = other.tiers_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureTiersIsMutable();
                tiers_.addAll(other.tiers_);
              }
              onChanged();
            }
          } else {
            if (!other.tiers_.isEmpty()) {
              if (tiersBuilder_.isEmpty()) {
                tiersBuilder_.dispose();
                tiersBuilder_ = null;
                tiers_ = other.tiers_;
                bitField0_ = (bitField0_ & ~0x00000004);
                tiersBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getTiersFieldBuilder() : null;
              } else {
                tiersBuilder_.addAllMessages(other.tiers_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int divisionId_ ;
        /**
         * <code>optional uint32 division_id = 1;</code>
         */
        public boolean hasDivisionId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 division_id = 1;</code>
         */
        public int getDivisionId() {
          return divisionId_;
        }
        /**
         * <code>optional uint32 division_id = 1;</code>
         */
        public Builder setDivisionId(int value) {
          bitField0_ |= 0x00000001;
          divisionId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 division_id = 1;</code>
         */
        public Builder clearDivisionId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          divisionId_ = 0;
          onChanged();
          return this;
        }

        private int scheduleTime_ ;
        /**
         * <code>optional uint32 schedule_time = 2;</code>
         */
        public boolean hasScheduleTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 schedule_time = 2;</code>
         */
        public int getScheduleTime() {
          return scheduleTime_;
        }
        /**
         * <code>optional uint32 schedule_time = 2;</code>
         */
        public Builder setScheduleTime(int value) {
          bitField0_ |= 0x00000002;
          scheduleTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 schedule_time = 2;</code>
         */
        public Builder clearScheduleTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          scheduleTime_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier> tiers_ =
          java.util.Collections.emptyList();
        private void ensureTiersIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            tiers_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier>(tiers_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder> tiersBuilder_;

        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier> getTiersList() {
          if (tiersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(tiers_);
          } else {
            return tiersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public int getTiersCount() {
          if (tiersBuilder_ == null) {
            return tiers_.size();
          } else {
            return tiersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier getTiers(int index) {
          if (tiersBuilder_ == null) {
            return tiers_.get(index);
          } else {
            return tiersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder setTiers(
            int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier value) {
          if (tiersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTiersIsMutable();
            tiers_.set(index, value);
            onChanged();
          } else {
            tiersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder setTiers(
            int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder builderForValue) {
          if (tiersBuilder_ == null) {
            ensureTiersIsMutable();
            tiers_.set(index, builderForValue.build());
            onChanged();
          } else {
            tiersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder addTiers(MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier value) {
          if (tiersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTiersIsMutable();
            tiers_.add(value);
            onChanged();
          } else {
            tiersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder addTiers(
            int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier value) {
          if (tiersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTiersIsMutable();
            tiers_.add(index, value);
            onChanged();
          } else {
            tiersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder addTiers(
            MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder builderForValue) {
          if (tiersBuilder_ == null) {
            ensureTiersIsMutable();
            tiers_.add(builderForValue.build());
            onChanged();
          } else {
            tiersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder addTiers(
            int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder builderForValue) {
          if (tiersBuilder_ == null) {
            ensureTiersIsMutable();
            tiers_.add(index, builderForValue.build());
            onChanged();
          } else {
            tiersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder addAllTiers(
            java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier> values) {
          if (tiersBuilder_ == null) {
            ensureTiersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, tiers_);
            onChanged();
          } else {
            tiersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder clearTiers() {
          if (tiersBuilder_ == null) {
            tiers_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            tiersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public Builder removeTiers(int index) {
          if (tiersBuilder_ == null) {
            ensureTiersIsMutable();
            tiers_.remove(index);
            onChanged();
          } else {
            tiersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder getTiersBuilder(
            int index) {
          return getTiersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder getTiersOrBuilder(
            int index) {
          if (tiersBuilder_ == null) {
            return tiers_.get(index);  } else {
            return tiersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder>
             getTiersOrBuilderList() {
          if (tiersBuilder_ != null) {
            return tiersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(tiers_);
          }
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder addTiersBuilder() {
          return getTiersFieldBuilder().addBuilder(
              MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder addTiersBuilder(
            int index) {
          return getTiersFieldBuilder().addBuilder(
              index, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Tier tiers = 3;</code>
         */
        public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder>
             getTiersBuilderList() {
          return getTiersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder>
            getTiersFieldBuilder() {
          if (tiersBuilder_ == null) {
            tiersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Tier.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.TierOrBuilder>(
                    tiers_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            tiers_ = null;
          }
          return tiersBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyParticipationDetails.Division)
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyParticipationDetails.Division)
      private static final MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division();
      }

      public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Division>
          PARSER = new com.google.protobuf.AbstractParser<Division>() {
        public Division parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Division(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Division> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Division> getParserForType() {
        return PARSER;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DIVISIONS_FIELD_NUMBER = 1;
    private java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division> divisions_;
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division> getDivisionsList() {
      return divisions_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    public java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder>
        getDivisionsOrBuilderList() {
      return divisions_;
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    public int getDivisionsCount() {
      return divisions_.size();
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDivisions(int index) {
      return divisions_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
     */
    public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder getDivisionsOrBuilder(
        int index) {
      return divisions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < divisions_.size(); i++) {
        output.writeMessage(1, divisions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < divisions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, divisions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails)) {
        return super.equals(obj);
      }
      MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails other = (MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails) obj;

      boolean result = true;
      result = result && getDivisionsList()
          .equals(other.getDivisionsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDivisionsCount() > 0) {
        hash = (37 * hash) + DIVISIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDivisionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAWeekendTourneyParticipationDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAWeekendTourneyParticipationDetails)
        MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.class, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Builder.class);
      }

      // Construct using MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDivisionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (divisionsBuilder_ == null) {
          divisions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          divisionsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MsgGCClientTournament.internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails getDefaultInstanceForType() {
        return MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.getDefaultInstance();
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails build() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails buildPartial() {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails result = new MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails(this);
        int from_bitField0_ = bitField0_;
        if (divisionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            divisions_ = java.util.Collections.unmodifiableList(divisions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.divisions_ = divisions_;
        } else {
          result.divisions_ = divisionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails) {
          return mergeFrom((MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails other) {
        if (other == MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.getDefaultInstance()) return this;
        if (divisionsBuilder_ == null) {
          if (!other.divisions_.isEmpty()) {
            if (divisions_.isEmpty()) {
              divisions_ = other.divisions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDivisionsIsMutable();
              divisions_.addAll(other.divisions_);
            }
            onChanged();
          }
        } else {
          if (!other.divisions_.isEmpty()) {
            if (divisionsBuilder_.isEmpty()) {
              divisionsBuilder_.dispose();
              divisionsBuilder_ = null;
              divisions_ = other.divisions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              divisionsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDivisionsFieldBuilder() : null;
            } else {
              divisionsBuilder_.addAllMessages(other.divisions_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division> divisions_ =
        java.util.Collections.emptyList();
      private void ensureDivisionsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          divisions_ = new java.util.ArrayList<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division>(divisions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder> divisionsBuilder_;

      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division> getDivisionsList() {
        if (divisionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(divisions_);
        } else {
          return divisionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public int getDivisionsCount() {
        if (divisionsBuilder_ == null) {
          return divisions_.size();
        } else {
          return divisionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division getDivisions(int index) {
        if (divisionsBuilder_ == null) {
          return divisions_.get(index);
        } else {
          return divisionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder setDivisions(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.set(index, value);
          onChanged();
        } else {
          divisionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder setDivisions(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.set(index, builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder addDivisions(MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.add(value);
          onChanged();
        } else {
          divisionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division value) {
        if (divisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDivisionsIsMutable();
          divisions_.add(index, value);
          onChanged();
        } else {
          divisionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.add(builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder addDivisions(
          int index, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder builderForValue) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.add(index, builderForValue.build());
          onChanged();
        } else {
          divisionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder addAllDivisions(
          java.lang.Iterable<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division> values) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, divisions_);
          onChanged();
        } else {
          divisionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder clearDivisions() {
        if (divisionsBuilder_ == null) {
          divisions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          divisionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public Builder removeDivisions(int index) {
        if (divisionsBuilder_ == null) {
          ensureDivisionsIsMutable();
          divisions_.remove(index);
          onChanged();
        } else {
          divisionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder getDivisionsBuilder(
          int index) {
        return getDivisionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder getDivisionsOrBuilder(
          int index) {
        if (divisionsBuilder_ == null) {
          return divisions_.get(index);  } else {
          return divisionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public java.util.List<? extends MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder>
           getDivisionsOrBuilderList() {
        if (divisionsBuilder_ != null) {
          return divisionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(divisions_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder addDivisionsBuilder() {
        return getDivisionsFieldBuilder().addBuilder(
            MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder addDivisionsBuilder(
          int index) {
        return getDivisionsFieldBuilder().addBuilder(
            index, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAWeekendTourneyParticipationDetails.Division divisions = 1;</code>
       */
      public java.util.List<MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder>
           getDivisionsBuilderList() {
        return getDivisionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder>
          getDivisionsFieldBuilder() {
        if (divisionsBuilder_ == null) {
          divisionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.Division.Builder, MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails.DivisionOrBuilder>(
                  divisions_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          divisions_ = null;
        }
        return divisionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CMsgDOTAWeekendTourneyParticipationDetails)
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAWeekendTourneyParticipationDetails)
    private static final MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails();
    }

    public static MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CMsgDOTAWeekendTourneyParticipationDetails>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTAWeekendTourneyParticipationDetails>() {
      public CMsgDOTAWeekendTourneyParticipationDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CMsgDOTAWeekendTourneyParticipationDetails(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTAWeekendTourneyParticipationDetails> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAWeekendTourneyParticipationDetails> getParserForType() {
      return PARSER;
    }

    public MsgGCClientTournament.CMsgDOTAWeekendTourneyParticipationDetails getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentInfo_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournamentInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentInfo_PhaseGroup_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournamentInfo_PhaseGroup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentInfo_Phase_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournamentInfo_Phase_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentInfo_Team_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournamentInfo_Team_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentInfo_UpcomingMatch_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournamentInfo_UpcomingMatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentInfo_News_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournamentInfo_News_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgRequestWeekendTourneySchedule_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgRequestWeekendTourneySchedule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgWeekendTourneySchedule_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgWeekendTourneySchedule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgWeekendTourneySchedule_Division_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgWeekendTourneySchedule_Division_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgWeekendTourneyOpts_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgWeekendTourneyOpts_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgWeekendTourneyLeave_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgWeekendTourneyLeave_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournament_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_Team_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournament_Team_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_Game_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournament_Game_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournament_Node_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournament_Node_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentStateChange_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournamentStateChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournamentStateChange_GameChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournamentStateChange_TeamChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentRequest_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournamentRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTATournamentResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTATournamentResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAClearTournamentGame_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAClearTournamentGame_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyPlayerStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyPlayerHistoryRequest_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyPlayerHistoryRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyPlayerHistory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyParticipationDetails_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'dota_gcmessages_client_tournament.prot" +
      "o\032\027dota_client_enums.proto\"\270\n\n\026CMsgDOTAT" +
      "ournamentInfo\022\021\n\tleague_id\030\001 \001(\r\0221\n\nphas" +
      "e_list\030\002 \003(\0132\035.CMsgDOTATournamentInfo.Ph" +
      "ase\0220\n\nteams_list\030\003 \003(\0132\034.CMsgDOTATourna" +
      "mentInfo.Team\022D\n\025upcoming_matches_list\030\004" +
      " \003(\0132%.CMsgDOTATournamentInfo.UpcomingMa" +
      "tch\022/\n\tnews_list\030\005 \003(\0132\034.CMsgDOTATournam" +
      "entInfo.News\0322\n\nPhaseGroup\022\020\n\010group_id\030\001" +
      " \001(\r\022\022\n\ngroup_name\030\002 \001(\t\032\272\001\n\005Phase\022\020\n\010ph",
      "ase_id\030\001 \001(\r\022\022\n\nphase_name\030\002 \001(\t\022\017\n\007type" +
      "_id\030\003 \001(\r\022\022\n\niterations\030\004 \001(\r\022\026\n\016min_sta" +
      "rt_time\030\005 \001(\r\022\026\n\016max_start_time\030\006 \001(\r\0226\n" +
      "\ngroup_list\030\007 \003(\0132\".CMsgDOTATournamentIn" +
      "fo.PhaseGroup\032Y\n\004Team\022\017\n\007team_id\030\001 \001(\r\022\014" +
      "\n\004name\030\002 \001(\t\022\013\n\003tag\030\003 \001(\t\022\021\n\tteam_logo\030\004" +
      " \001(\004\022\022\n\neliminated\030\005 \001(\010\032\233\005\n\rUpcomingMat" +
      "ch\022\021\n\tseries_id\030\001 \001(\r\022\020\n\010team1_id\030\002 \001(\r\022" +
      "\020\n\010team2_id\030\003 \001(\r\022\n\n\002bo\030\004 \001(\r\022\022\n\nstage_n" +
      "ame\030\005 \001(\t\022\022\n\nstart_time\030\006 \001(\r\022\024\n\014winner_",
      "stage\030\007 \001(\t\022\023\n\013loser_stage\030\010 \001(\t\022\021\n\tteam" +
      "1_tag\030\t \001(\t\022\021\n\tteam2_tag\030\n \001(\t\022\037\n\027team1_" +
      "prev_opponent_tag\030\013 \001(\t\022\037\n\027team2_prev_op" +
      "ponent_tag\030\014 \001(\t\022\022\n\nteam1_logo\030\r \001(\004\022\022\n\n" +
      "team2_logo\030\016 \001(\004\022 \n\030team1_prev_opponent_" +
      "logo\030\017 \001(\004\022 \n\030team2_prev_opponent_logo\030\020" +
      " \001(\004\022\036\n\026team1_prev_opponent_id\030\021 \001(\r\022\036\n\026" +
      "team2_prev_opponent_id\030\022 \001(\r\022\036\n\026team1_pr" +
      "ev_match_score\030\023 \001(\r\022\'\n\037team1_prev_match" +
      "_opponent_score\030\024 \001(\r\022\036\n\026team2_prev_matc",
      "h_score\030\025 \001(\r\022\'\n\037team2_prev_match_oppone" +
      "nt_score\030\026 \001(\r\022\022\n\nphase_type\030\027 \001(\r\022\023\n\013te" +
      "am1_score\030\030 \001(\r\022\023\n\013team2_score\030\031 \001(\r\022\020\n\010" +
      "phase_id\030\032 \001(\r\032E\n\004News\022\014\n\004link\030\001 \001(\t\022\r\n\005" +
      "title\030\002 \001(\t\022\r\n\005image\030\003 \001(\t\022\021\n\ttimestamp\030" +
      "\004 \001(\r\"#\n!CMsgRequestWeekendTourneySchedu" +
      "le\"\366\001\n\032CMsgWeekendTourneySchedule\0227\n\tdiv" +
      "isions\030\001 \003(\0132$.CMsgWeekendTourneySchedul" +
      "e.Division\032\236\001\n\010Division\022\025\n\rdivision_code" +
      "\030\001 \001(\r\022\030\n\020time_window_open\030\002 \001(\r\022\031\n\021time",
      "_window_close\030\003 \001(\r\022\035\n\025time_window_open_" +
      "next\030\004 \001(\r\022\021\n\ttrophy_id\030\005 \001(\r\022\024\n\014free_we" +
      "ekend\030\006 \001(\010\"\303\001\n\026CMsgWeekendTourneyOpts\022\025" +
      "\n\rparticipating\030\001 \001(\010\022\023\n\013division_id\030\002 \001" +
      "(\r\022\r\n\005buyin\030\003 \001(\r\022\023\n\013skill_level\030\004 \001(\r\022\024" +
      "\n\014match_groups\030\005 \001(\r\022\017\n\007team_id\030\006 \001(\r\022\030\n" +
      "\020pickup_team_name\030\007 \001(\t\022\030\n\020pickup_team_l" +
      "ogo\030\010 \001(\004\"\031\n\027CMsgWeekendTourneyLeave\"\340\007\n" +
      "\022CMsgDOTATournament\022\025\n\rtournament_id\030\001 \001" +
      "(\r\022\023\n\013division_id\030\002 \001(\r\022\025\n\rschedule_time",
      "\030\003 \001(\r\022\023\n\013skill_level\030\004 \001(\r\022M\n\023tournamen" +
      "t_template\030\005 \001(\0162\024.ETournamentTemplate:\032" +
      "k_ETournamentTemplate_None\022<\n\005state\030\006 \001(" +
      "\0162\021.ETournamentState:\032k_ETournamentState" +
      "_Unknown\022\025\n\rstate_seq_num\030\n \001(\r\022\030\n\020seaso" +
      "n_trophy_id\030\013 \001(\r\022\'\n\005teams\030\007 \003(\0132\030.CMsgD" +
      "OTATournament.Team\022\'\n\005games\030\010 \003(\0132\030.CMsg" +
      "DOTATournament.Game\022\'\n\005nodes\030\t \003(\0132\030.CMs" +
      "gDOTATournament.Node\032\375\001\n\004Team\022\020\n\010team_gi" +
      "d\030\001 \001(\006\022\025\n\rnode_or_state\030\002 \001(\r\022\023\n\007player",
      "s\030\003 \003(\rB\002\020\001\022\030\n\014player_buyin\030\t \003(\rB\002\020\001\022\036\n" +
      "\022player_skill_level\030\n \003(\rB\002\020\001\022\030\n\020match_g" +
      "roup_mask\030\014 \001(\r\022\017\n\007team_id\030\004 \001(\r\022\021\n\tteam" +
      "_name\030\005 \001(\t\022\026\n\016team_base_logo\030\007 \001(\004\022\024\n\014t" +
      "eam_ui_logo\030\010 \001(\004\022\021\n\tteam_date\030\013 \001(\r\032\253\001\n" +
      "\004Game\022\020\n\010node_idx\030\001 \001(\r\022\020\n\010lobby_id\030\002 \001(" +
      "\006\022\020\n\010match_id\030\003 \001(\004\022\023\n\013team_a_good\030\004 \001(\010" +
      "\022D\n\005state\030\005 \001(\0162\025.ETournamentGameState:\036" +
      "k_ETournamentGameState_Unknown\022\022\n\nstart_" +
      "time\030\006 \001(\r\032\212\001\n\004Node\022\017\n\007node_id\030\001 \001(\r\022\022\n\n",
      "team_idx_a\030\002 \001(\r\022\022\n\nteam_idx_b\030\003 \001(\r\022I\n\n" +
      "node_state\030\004 \001(\0162\025.ETournamentNodeState:" +
      "\036k_ETournamentNodeState_Unknown\"\276\004\n\035CMsg" +
      "DOTATournamentStateChange\022\031\n\021new_tournam" +
      "ent_id\030\001 \001(\r\0229\n\005event\030\002 \001(\0162\021.ETournamen" +
      "tEvent:\027k_ETournamentEvent_None\022K\n\024new_t" +
      "ournament_state\030\003 \001(\0162\021.ETournamentState" +
      ":\032k_ETournamentState_Unknown\022?\n\014game_cha" +
      "nges\030\004 \003(\0132).CMsgDOTATournamentStateChan" +
      "ge.GameChange\022?\n\014team_changes\030\005 \003(\0132).CM",
      "sgDOTATournamentStateChange.TeamChange\022!" +
      "\n\025merged_tournament_ids\030\006 \003(\rB\002\020\001\022\025\n\rsta" +
      "te_seq_num\030\007 \001(\r\032h\n\nGameChange\022\020\n\010match_" +
      "id\030\001 \001(\004\022H\n\tnew_state\030\002 \001(\0162\025.ETournamen" +
      "tGameState:\036k_ETournamentGameState_Unkno" +
      "wn\032T\n\nTeamChange\022\020\n\010team_gid\030\001 \001(\004\022\031\n\021ne" +
      "w_node_or_state\030\002 \001(\r\022\031\n\021old_node_or_sta" +
      "te\030\003 \001(\r\"Q\n\031CMsgDOTATournamentRequest\022\025\n" +
      "\rtournament_id\030\001 \001(\r\022\035\n\025client_tournamen" +
      "t_gid\030\002 \001(\004\"X\n\032CMsgDOTATournamentRespons",
      "e\022\021\n\006result\030\001 \001(\r:\0012\022\'\n\ntournament\030\002 \001(\013" +
      "2\023.CMsgDOTATournament\"E\n\033CMsgDOTAClearTo" +
      "urnamentGame\022\025\n\rtournament_id\030\001 \001(\r\022\017\n\007g" +
      "ame_id\030\002 \001(\r\"\222\002\n+CMsgDOTAWeekendTourneyP" +
      "layerSkillLevelStats\022\023\n\013skill_level\030\001 \001(" +
      "\r\022\023\n\013times_won_0\030\002 \001(\r\022\023\n\013times_won_1\030\003 " +
      "\001(\r\022\023\n\013times_won_2\030\004 \001(\r\022\023\n\013times_won_3\030" +
      "\005 \001(\r\022\032\n\022times_bye_and_lost\030\006 \001(\r\022\031\n\021tim" +
      "es_bye_and_won\030\007 \001(\r\022\033\n\023times_unusual_ch" +
      "amp\030\n \001(\r\022\027\n\017total_games_won\030\010 \001(\r\022\r\n\005sc",
      "ore\030\t \001(\r\"\253\001\n!CMsgDOTAWeekendTourneyPlay" +
      "erStats\022\022\n\naccount_id\030\001 \001(\r\022\030\n\020season_tr" +
      "ophy_id\030\002 \001(\r\022B\n\014skill_levels\030\003 \003(\0132,.CM" +
      "sgDOTAWeekendTourneyPlayerSkillLevelStat" +
      "s\022\024\n\014current_tier\030\004 \001(\r\"X\n(CMsgDOTAWeeke" +
      "ndTourneyPlayerStatsRequest\022\022\n\naccount_i" +
      "d\030\001 \001(\r\022\030\n\020season_trophy_id\030\002 \001(\r\"Z\n*CMs" +
      "gDOTAWeekendTourneyPlayerHistoryRequest\022" +
      "\022\n\naccount_id\030\001 \001(\r\022\030\n\020season_trophy_id\030" +
      "\002 \001(\r\"\314\002\n#CMsgDOTAWeekendTourneyPlayerHi",
      "story\022\022\n\naccount_id\030\001 \001(\r\022D\n\013tournaments" +
      "\030\003 \003(\0132/.CMsgDOTAWeekendTourneyPlayerHis" +
      "tory.Tournament\032\312\001\n\nTournament\022\025\n\rtourna" +
      "ment_id\030\001 \001(\r\022\022\n\nstart_time\030\002 \001(\r\022\027\n\017tou" +
      "rnament_tier\030\003 \001(\r\022\017\n\007team_id\030\004 \001(\r\022\021\n\tt" +
      "eam_date\030\005 \001(\r\022\023\n\013team_result\030\006 \001(\r\022\022\n\na" +
      "ccount_id\030\007 \003(\r\022\021\n\tteam_name\030\010 \001(\t\022\030\n\020se" +
      "ason_trophy_id\030\t \001(\r\"\244\003\n*CMsgDOTAWeekend" +
      "TourneyParticipationDetails\022G\n\tdivisions" +
      "\030\001 \003(\01324.CMsgDOTAWeekendTourneyParticipa",
      "tionDetails.Division\032\263\001\n\004Tier\022\014\n\004tier\030\001 " +
      "\001(\r\022\017\n\007players\030\002 \001(\r\022\r\n\005teams\030\003 \001(\r\022\025\n\rw" +
      "inning_teams\030\004 \001(\r\022\030\n\020players_streak_2\030\005" +
      " \001(\r\022\030\n\020players_streak_3\030\006 \001(\r\022\030\n\020player" +
      "s_streak_4\030\007 \001(\r\022\030\n\020players_streak_5\030\010 \001" +
      "(\r\032w\n\010Division\022\023\n\013division_id\030\001 \001(\r\022\025\n\rs" +
      "chedule_time\030\002 \001(\r\022?\n\005tiers\030\003 \003(\01320.CMsg" +
      "DOTAWeekendTourneyParticipationDetails.T" +
      "ier*\266\004\n\020ETournamentEvent\022\033\n\027k_ETournamen" +
      "tEvent_None\020\000\022(\n$k_ETournamentEvent_Tour",
      "namentCreated\020\001\022(\n$k_ETournamentEvent_To" +
      "urnamentsMerged\020\002\022\"\n\036k_ETournamentEvent_" +
      "GameOutcome\020\003\022#\n\037k_ETournamentEvent_Team" +
      "GivenBye\020\004\0220\n,k_ETournamentEvent_Tournam" +
      "entCanceledByAdmin\020\005\022$\n k_ETournamentEve" +
      "nt_TeamAbandoned\020\006\022+\n\'k_ETournamentEvent" +
      "_ScheduledGameStarted\020\007\022\037\n\033k_ETournament" +
      "Event_Canceled\020\010\022?\n;k_ETournamentEvent_T" +
      "eamParticipationTimedOut_EntryFeeRefund\020" +
      "\t\022@\n<k_ETournamentEvent_TeamParticipatio",
      "nTimedOut_EntryFeeForfeit\020\n\022?\n;k_ETourna" +
      "mentEvent_TeamParticipationTimedOut_Gran" +
      "tedVictory\020\013B\005H\001\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          MsgClientEnums.getDescriptor(),
        }, assigner);
    internal_static_CMsgDOTATournamentInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CMsgDOTATournamentInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournamentInfo_descriptor,
        new java.lang.String[] { "LeagueId", "PhaseList", "TeamsList", "UpcomingMatchesList", "NewsList", });
    internal_static_CMsgDOTATournamentInfo_PhaseGroup_descriptor =
      internal_static_CMsgDOTATournamentInfo_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTATournamentInfo_PhaseGroup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournamentInfo_PhaseGroup_descriptor,
        new java.lang.String[] { "GroupId", "GroupName", });
    internal_static_CMsgDOTATournamentInfo_Phase_descriptor =
      internal_static_CMsgDOTATournamentInfo_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTATournamentInfo_Phase_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournamentInfo_Phase_descriptor,
        new java.lang.String[] { "PhaseId", "PhaseName", "TypeId", "Iterations", "MinStartTime", "MaxStartTime", "GroupList", });
    internal_static_CMsgDOTATournamentInfo_Team_descriptor =
      internal_static_CMsgDOTATournamentInfo_descriptor.getNestedTypes().get(2);
    internal_static_CMsgDOTATournamentInfo_Team_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournamentInfo_Team_descriptor,
        new java.lang.String[] { "TeamId", "Name", "Tag", "TeamLogo", "Eliminated", });
    internal_static_CMsgDOTATournamentInfo_UpcomingMatch_descriptor =
      internal_static_CMsgDOTATournamentInfo_descriptor.getNestedTypes().get(3);
    internal_static_CMsgDOTATournamentInfo_UpcomingMatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournamentInfo_UpcomingMatch_descriptor,
        new java.lang.String[] { "SeriesId", "Team1Id", "Team2Id", "Bo", "StageName", "StartTime", "WinnerStage", "LoserStage", "Team1Tag", "Team2Tag", "Team1PrevOpponentTag", "Team2PrevOpponentTag", "Team1Logo", "Team2Logo", "Team1PrevOpponentLogo", "Team2PrevOpponentLogo", "Team1PrevOpponentId", "Team2PrevOpponentId", "Team1PrevMatchScore", "Team1PrevMatchOpponentScore", "Team2PrevMatchScore", "Team2PrevMatchOpponentScore", "PhaseType", "Team1Score", "Team2Score", "PhaseId", });
    internal_static_CMsgDOTATournamentInfo_News_descriptor =
      internal_static_CMsgDOTATournamentInfo_descriptor.getNestedTypes().get(4);
    internal_static_CMsgDOTATournamentInfo_News_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournamentInfo_News_descriptor,
        new java.lang.String[] { "Link", "Title", "Image", "Timestamp", });
    internal_static_CMsgRequestWeekendTourneySchedule_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMsgRequestWeekendTourneySchedule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgRequestWeekendTourneySchedule_descriptor,
        new java.lang.String[] { });
    internal_static_CMsgWeekendTourneySchedule_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CMsgWeekendTourneySchedule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgWeekendTourneySchedule_descriptor,
        new java.lang.String[] { "Divisions", });
    internal_static_CMsgWeekendTourneySchedule_Division_descriptor =
      internal_static_CMsgWeekendTourneySchedule_descriptor.getNestedTypes().get(0);
    internal_static_CMsgWeekendTourneySchedule_Division_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgWeekendTourneySchedule_Division_descriptor,
        new java.lang.String[] { "DivisionCode", "TimeWindowOpen", "TimeWindowClose", "TimeWindowOpenNext", "TrophyId", "FreeWeekend", });
    internal_static_CMsgWeekendTourneyOpts_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CMsgWeekendTourneyOpts_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgWeekendTourneyOpts_descriptor,
        new java.lang.String[] { "Participating", "DivisionId", "Buyin", "SkillLevel", "MatchGroups", "TeamId", "PickupTeamName", "PickupTeamLogo", });
    internal_static_CMsgWeekendTourneyLeave_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CMsgWeekendTourneyLeave_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgWeekendTourneyLeave_descriptor,
        new java.lang.String[] { });
    internal_static_CMsgDOTATournament_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CMsgDOTATournament_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournament_descriptor,
        new java.lang.String[] { "TournamentId", "DivisionId", "ScheduleTime", "SkillLevel", "TournamentTemplate", "State", "StateSeqNum", "SeasonTrophyId", "Teams", "Games", "Nodes", });
    internal_static_CMsgDOTATournament_Team_descriptor =
      internal_static_CMsgDOTATournament_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTATournament_Team_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournament_Team_descriptor,
        new java.lang.String[] { "TeamGid", "NodeOrState", "Players", "PlayerBuyin", "PlayerSkillLevel", "MatchGroupMask", "TeamId", "TeamName", "TeamBaseLogo", "TeamUiLogo", "TeamDate", });
    internal_static_CMsgDOTATournament_Game_descriptor =
      internal_static_CMsgDOTATournament_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTATournament_Game_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournament_Game_descriptor,
        new java.lang.String[] { "NodeIdx", "LobbyId", "MatchId", "TeamAGood", "State", "StartTime", });
    internal_static_CMsgDOTATournament_Node_descriptor =
      internal_static_CMsgDOTATournament_descriptor.getNestedTypes().get(2);
    internal_static_CMsgDOTATournament_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournament_Node_descriptor,
        new java.lang.String[] { "NodeId", "TeamIdxA", "TeamIdxB", "NodeState", });
    internal_static_CMsgDOTATournamentStateChange_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CMsgDOTATournamentStateChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournamentStateChange_descriptor,
        new java.lang.String[] { "NewTournamentId", "Event", "NewTournamentState", "GameChanges", "TeamChanges", "MergedTournamentIds", "StateSeqNum", });
    internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor =
      internal_static_CMsgDOTATournamentStateChange_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTATournamentStateChange_GameChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournamentStateChange_GameChange_descriptor,
        new java.lang.String[] { "MatchId", "NewState", });
    internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor =
      internal_static_CMsgDOTATournamentStateChange_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTATournamentStateChange_TeamChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournamentStateChange_TeamChange_descriptor,
        new java.lang.String[] { "TeamGid", "NewNodeOrState", "OldNodeOrState", });
    internal_static_CMsgDOTATournamentRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CMsgDOTATournamentRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournamentRequest_descriptor,
        new java.lang.String[] { "TournamentId", "ClientTournamentGid", });
    internal_static_CMsgDOTATournamentResponse_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CMsgDOTATournamentResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTATournamentResponse_descriptor,
        new java.lang.String[] { "Result", "Tournament", });
    internal_static_CMsgDOTAClearTournamentGame_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CMsgDOTAClearTournamentGame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAClearTournamentGame_descriptor,
        new java.lang.String[] { "TournamentId", "GameId", });
    internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyPlayerSkillLevelStats_descriptor,
        new java.lang.String[] { "SkillLevel", "TimesWon0", "TimesWon1", "TimesWon2", "TimesWon3", "TimesByeAndLost", "TimesByeAndWon", "TimesUnusualChamp", "TotalGamesWon", "Score", });
    internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_CMsgDOTAWeekendTourneyPlayerStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyPlayerStats_descriptor,
        new java.lang.String[] { "AccountId", "SeasonTrophyId", "SkillLevels", "CurrentTier", });
    internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyPlayerStatsRequest_descriptor,
        new java.lang.String[] { "AccountId", "SeasonTrophyId", });
    internal_static_CMsgDOTAWeekendTourneyPlayerHistoryRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_CMsgDOTAWeekendTourneyPlayerHistoryRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyPlayerHistoryRequest_descriptor,
        new java.lang.String[] { "AccountId", "SeasonTrophyId", });
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor,
        new java.lang.String[] { "AccountId", "Tournaments", });
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor =
      internal_static_CMsgDOTAWeekendTourneyPlayerHistory_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyPlayerHistory_Tournament_descriptor,
        new java.lang.String[] { "TournamentId", "StartTime", "TournamentTier", "TeamId", "TeamDate", "TeamResult", "AccountId", "TeamName", "SeasonTrophyId", });
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor,
        new java.lang.String[] { "Divisions", });
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor =
      internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Tier_descriptor,
        new java.lang.String[] { "Tier", "Players", "Teams", "WinningTeams", "PlayersStreak2", "PlayersStreak3", "PlayersStreak4", "PlayersStreak5", });
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor =
      internal_static_CMsgDOTAWeekendTourneyParticipationDetails_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CMsgDOTAWeekendTourneyParticipationDetails_Division_descriptor,
        new java.lang.String[] { "DivisionId", "ScheduleTime", "Tiers", });
    MsgClientEnums.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
